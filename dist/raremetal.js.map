{"version":3,"sources":["webpack://raremetal/webpack/universalModuleDefinition","webpack://raremetal/webpack/bootstrap","webpack://raremetal/./node_modules/numeric/numeric-1.2.6.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/slicedToArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/classCallCheck.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/createClass.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/typeof.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/inherits.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/getPrototypeOf.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/arrayLikeToArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/possibleConstructorReturn.js","webpack://raremetal/./src/app/mvtdstpack.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/arrayWithHoles.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/nonIterableRest.js","webpack://raremetal/(webpack)/buildin/global.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/setPrototypeOf.js","webpack://raremetal/./node_modules/@babel/runtime/helpers/assertThisInitialized.js","webpack://raremetal/./node_modules/process/browser.js","webpack://raremetal/./src/app/constants.js","webpack://raremetal/./src/app/linalg.js","webpack://raremetal/./src/app/qfc.js","webpack://raremetal/./src/app/quadrature.js","webpack://raremetal/./src/app/rstats.js","webpack://raremetal/./src/app/stats.js","webpack://raremetal/./src/app/helpers.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","numeric","global","version","bench","f","interval","t1","Date","_myIndexOf","w","k","this","length","myIndexOf","Array","indexOf","Function","precision","largeArray","prettyPrint","x","ret","foo","push","join","toString","a","fmtnum","isNaN","isFinite","scale","Math","floor","log","normalized","pow","basic","toPrecision","parseFloat","b","flag","parseDate","parse","replace","Error","parseCSV","j","split","pat","patnum","count","baz","bar","match","substr","test","toCSV","A","row","dim","getURL","url","client","XMLHttpRequest","open","send","imageURL","img","crc32Array","from","to","table","crc","s1","s2","adler32","crc32","h","stream","round","y","z","q","charAt","base64","_dim","mapreduce","body","init","mapreduce2","setup","same","rep","v","dotMMsmall","woo","i0","_getCol","dotMMbig","xj","gc","VV","dotVV","dotMV","dotVM","i1","dot","mulVS","mulSV","diag","Ai","getDiag","min","identity","pointwise","params","fun","avec","thevec","haveret","substring","apply","pointwise2","_biforeach","_biforeach2","_foreach","_foreach2","ops2","add","sub","mul","div","mod","and","or","eq","neq","lt","gt","leq","geq","band","bor","bxor","lshift","rshift","rrshift","opseq","addeq","subeq","muleq","diveq","modeq","lshifteq","rshifteq","rrshifteq","bandeq","boreq","bxoreq","mathfuns","mathfuns2","ops1","neg","not","bnot","clone","mapreducers","any","all","sum","prod","norm2Squared","norminf","norm1","sup","inf","code","codeeq","truncVV","truncVS","truncSV","trunc","inv","Aj","Ii","Ij","abs","I","v0","det","alpha","temp","k1","transpose","A0","A1","Bj","negtranspose","_random","rnd","random","norm2","sqrt","linspace","max","getBlock","setBlock","B","getRange","J","Bi","AI","blockMatrix","X","M","N","Xij","Z","ZI","Xijk","tensor","xi","T","Tbinop","rr","rc","cr","cc","reciprocal","transjugate","Tunop","exp","conj","sin","cos","Aix","Aiy","Ajx","Ajy","Rix","Riy","Rjx","Rjy","d1","ax","ay","bx","by","Rx","Ry","Ax","Ay","ik","set","vx","vy","undefined","getRows","ry","rx","setRows","getRow","setRow","eig","house","toUpperHessenberg","me","C","Ci","Qi","Q","H","epsilon","QRFrancis","maxiter","tr","Hloc","Hi","iter","QH1","QH2","concat","Q0","p1","disc","n1","n2","QH","QB","R","E","Rk","Rj","lambda","ccsSparse","counts","parseInt","Av","ccsFull","j0","j1","ccsDim","ccsTSolve","bj","dfs","ccsDFS","Pinv","km","k11","ccsLPSolve","Bv","ccsLUP1","threshold","e","L","U","Li","Lj","Lv","Ui","Uj","Uv","sol","P","ccsDFS0","ccsLPSolve0","ccsLUP0","ccsLUP","ccsGetBlock","jq","flags","q0","q1","ccsDot","sA","sB","Cj","Cv","ccsLUPSolve","LUP","Xi","Xj","Xv","ccsbinop","eval","ccsScatter","Ri","Rv","Aii","ptr","slice","ccsGather","sdim","sclone","sdiag","sidentity","stranspose","sLUP","tol","sdotMM","BTk","accum","reti","BT","sdotMV","sdotVM","sdotVV","sdot","sscatter","V","Vij","sgather","gather","pop","cLU","left","Infinity","right","cLUsolve","lu","cgrid","shape","cdelsq","g","dir","cdotMV","Spline","yl","yr","kl","kr","_at","x1","at","x0","mid","diff","dx","dy","zl","zr","pl","pr","roots","sqr","ai","bi","ci","di","ri","k0","y0","y1","D","stops","z0","z1","zm","t0","tm","side","spline","kn","fftpow2","xe","ye","xo","yo","si","_ifftpow2","ifftpow2","convpow2","axi","bxi","ayi","byi","fft","log2","ceil","cx","cy","Y","ifft","gradient","f0","f1","f2","t2","d2","it","uncmin","maxit","callback","options","grad","df0","step","g0","g1","Hy","ys","nstep","H1","Hinv","ten","isfinite","msg","solution","invHessian","iterations","message","Dopri","ymid","events","xh","yh","xs","dopri","event","k2","k3","k4","k5","k6","k7","er","erinf","e0","e1","ev","A3","A4","A5","A6","bm","yi","xl","xr","en","ei","sl","sr","LU","fast","absAjk","Akk","Ak","Pk","LUsolve","Pi","LUi","tmp","solve","echelonize","__solveLP","unbounded","svd","dotcc","a1","Ag","_solveLP","c0","b0","NaN","solveLP","Aeq","beq","Aeq2","A2","b4","c1","c2","c4","S","x2","MPStoLP","MPS","String","state","states","rows","sign","rl","vars","nv","err","w0","seedrandom","pool","math","width","chunks","significance","overflow","startdenom","ARC4","u","keylen","lowbits","flatten","obj","depth","result","prop","typ","mixkey","seed","smear","charCodeAt","fromCharCode","use_entropy","arc4","arguments","getTime","base0to1","base1to0","qpgen2","dmat","dvec","fddmat","crval","amat","bvec","fdamat","meq","iact","nact","work","ierr","l1","info","it1","iwzv","iwrv","iwrm","iwsv","iwuv","nvl","iwnbv","tt","gs","nu","t1inf","t2min","vsmall","tmpa","tmpb","go","lda","jm1","dpofa","kb","dposl","kp1","dpori","fn_goto_50","fn_goto_55","fn_goto_797","fn_goto_798","fn_goto_799","solveQP","Dmat","Amat","factorized","unconstrained_solution","prec","tolerance","pythag","iteration","test_convergence","itmax","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arr","instance","Constructor","TypeError","_defineProperties","target","props","descriptor","configurable","writable","protoProps","staticProps","_typeof","iterator","constructor","arrayWithoutHoles","iterableToArray","nonIterableSpread","setPrototypeOf","subClass","superClass","_getPrototypeOf","getPrototypeOf","__proto__","len","arr2","arrayLikeToArray","minLen","assertThisInitialized","self","_scriptDir","mvtdstpack","document","currentScript","src","Module","moduleOverrides","status","toThrow","ENVIRONMENT_IS_WEB","ENVIRONMENT_IS_WORKER","ENVIRONMENT_IS_NODE","ENVIRONMENT_IS_SHELL","importScripts","process","nodeFS","nodePath","scriptDirectory","locateFile","path","__dirname","filename","binary","require","buffer","Uint8Array","assert","ex","ExitStatus","abort","read","data","readbuffer","scriptArgs","quit","location","href","lastIndexOf","xhr","responseText","responseType","response","onload","onerror","title","out","console","print","printErr","warn","wasmMemory","asm2wasmImports","setTempRet0","WebAssembly","ABORT","condition","text","UTF8Decoder","TextDecoder","UTF8ArrayToString","u8Array","idx","maxBytesToRead","endIdx","endPtr","subarray","decode","str","u0","u1","u2","ch","UTF8ToString","HEAPU8","stringToUTF8Array","outU8Array","outIdx","maxBytesToWrite","startIdx","stringToUTF8","outPtr","lengthBytesUTF8","HEAP8","HEAP16","HEAPU16","HEAP32","HEAPU32","HEAPF32","HEAPF64","WASM_PAGE_SIZE","updateGlobalBufferViews","Int8Array","Int16Array","Int32Array","Uint16Array","Uint32Array","Float32Array","Float64Array","DYNAMIC_BASE","DYNAMICTOP_PTR","TOTAL_STACK","INITIAL_TOTAL_MEMORY","callRuntimeCallbacks","callbacks","shift","func","arg","Memory","ArrayBuffer","__ATPRERUN__","__ATINIT__","__ATMAIN__","__ATPOSTRUN__","runtimeInitialized","preRun","addOnPreRun","ensureInitRuntime","preMain","postRun","addOnPostRun","cb","unshift","runDependencies","runDependencyWatcher","dependenciesFulfilled","addRunDependency","id","removeRunDependency","clearInterval","dataURIPrefix","isDataURI","startsWith","wasmBinaryFile","getBinary","getBinaryPromise","fetch","Promise","resolve","reject","credentials","then","createWasm","env","receiveInstance","receiveInstantiatedSource","output","instantiateArrayBuffer","receiver","instantiate","reason","instantiateStreaming","___cxa_allocate_exception","size","_malloc","__ZSt18uncaught_exceptionv","uncaught_exception","___cxa_free_exception","_free","providedBuffer","Table","globalCtors","EXCEPTIONS","last","caught","infos","deAdjust","adjusted","adj","addRef","refcount","decRef","rethrown","destructor","clearRef","___cxa_throw","type","SYSCALLS","buffers","printChar","curr","varargs","getStr","get64","low","getZero","___syscall140","which","getStreamFromFD","FS","ErrnoError","errno","___syscall146","iov","iovcnt","___syscall6","structRegistrations","runDestructors","destructors","del","simpleReadValueFromPointer","pointer","awaitingDependencies","registeredTypes","typeDependencies","char_0","char_9","makeLegalFunctionName","createNamedFunction","extendError","baseErrorType","errorName","errorClass","stack","InternalError","throwInternalError","whenDependentTypesAreResolved","myTypes","dependentTypes","getTypeConverters","onComplete","typeConverters","myTypeConverters","registerType","forEach","unregisteredTypes","registered","dt","__embind_finalize_value_object","structType","reg","rawConstructor","rawDestructor","fieldRecords","fields","map","field","getterReturnType","setterArgumentType","fieldTypes","fieldName","getterContext","setter","setterContext","write","rv","destructorFunction","getShiftFromSize","embind_init_charCodes","codes","embind_charCodes","readLatin1String","BindingError","throwBindingError","rawType","registeredInstance","ignoreDuplicateRegistrations","__embind_register_bool","trueValue","falseValue","wt","heap","ClassHandle_isAliasOf","other","ClassHandle","leftClass","$$","ptrType","registeredClass","rightClass","baseClass","upcast","shallowCopyInternalPointer","deleteScheduled","preservePointerOnDelete","smartPtr","smartPtrType","throwInstanceAlreadyDeleted","ClassHandle_clone","runDestructor","handle","ClassHandle_delete","ClassHandle_isDeleted","delayFunction","deletionQueue","flushPendingDeletes","ClassHandle_deleteLater","init_ClassHandle","registeredPointers","ensureOverloadTable","proto","methodName","humanName","overloadTable","prevFunc","argCount","exposePublicSymbol","numArguments","RegisteredClass","instancePrototype","getActualType","downcast","pureVirtualFunctions","upcastPointer","ptrClass","desiredClass","constNoSmartPtrRawPointerToWireType","isReference","_embind_repr","handleClass","genericPointerToWireType","isSmartPointer","isConst","sharingPolicy","clonedHandle","rawShare","__emval_register","nonConstNoSmartPtrRawPointerToWireType","RegisteredPointer_getPointee","rawGetPointee","RegisteredPointer_destructor","RegisteredPointer_deleteObject","downcastPointer","getInheritedInstanceCount","keys","registeredInstances","getLiveInheritedInstances","setDelayFunction","fn","init_embind","getBasestPointer","class_","getInheritedInstance","makeClassHandle","record","RegisteredPointer_fromWireType","rawPointer","getPointee","makeDefaultHandle","pointeeType","toType","actualType","registeredPointerRecord","constPointerType","pointerType","dp","init_RegisteredPointer","RegisteredPointer","replacePublicSymbol","embind__requireFunction","signature","rawFunction","fp","FUNCTION_TABLE","dc","dynCall","args","makeDynCaller","UnboundTypeError","getTypeName","___getTypeName","throwUnboundTypeError","types","unboundTypes","seen","visit","__embind_register_class","rawPointerType","rawConstPointerType","baseClassRawType","getActualTypeSignature","upcastSignature","downcastSignature","destructorSignature","legalFunctionName","base","basePrototype","constructor_body","referenceConverter","pointerConverter","constPointerConverter","heap32VectorToArray","firstElement","array","__embind_register_class_constructor","rawClassType","rawArgTypesAddr","invokerSignature","invoker","rawArgTypes","classType","argTypes","new_","argumentList","dummy","craftInvokerFunction","cppInvokerFunc","cppTargetFunc","isClassMethodFunc","needsDestructorStack","returns","argsList","argsListWired","invokerFnBody","dtorStack","args1","args2","paramName","__embind_register_class_function","rawInvoker","context","isPureVirtual","unboundTypesHandler","method","className","memberFunction","emval_free_list","emval_handle_array","__emval_decref","count_emval_handles","get_first_emval","init_emval","__embind_register_emval","floatReadValueFromPointer","__embind_register_float","__embind_register_function","invokerArgsArray","integerReadValueFromPointer","signed","__embind_register_integer","primitiveType","minRange","maxRange","fromWireType","bitshift","isUnsignedType","__embind_register_memory_view","dataTypeIndex","TA","decodeMemoryView","__embind_register_std_string","stdStringIsUTF8","endChar","endCharSwap","decodeStartPtr","currentBytePtr","stringSegment","valueIsOfTypeString","Uint8ClampedArray","charCode","__embind_register_std_wstring","charSize","getHeap","HEAP","start","__embind_register_value_object","constructorSignature","__embind_register_value_object_field","getterSignature","setterSignature","__embind_register_void","isVoid","__emval_incref","requireRegisteredType","impl","__emval_take_value","argv","_abort","_emscripten_get_heap_size","abortOnCannotGrowMemory","requestedSize","_emscripten_resize_heap","_emscripten_memcpy_big","dest","num","___setErrNo","asmGlobalArg","asmLibraryArg","asm","run","doRun","setTimeout","what","JSON","stringify","old","runCaller","isArray","_arr","_n","_d","_e","_s","_i","next","done","_setPrototypeOf","ReferenceError","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","marker","runClearTimeout","Item","noop","nextTick","browser","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","binding","cwd","chdir","umask","REGEX_EPACTS","RegExp","cholesky","G","sigsq","lmax","lmin","mean","intl","ersm","lim","ndtsrt","fail","th","lb","nc","pi","PI","exp1","counter","RangeError","square","log1","first","term","cube","errbd","sum1","lj","ncj","xconst","nj","ctff","accx","rb","rerr","calc_err","truncation","tausq","sum2","prod1","prod2","prod3","err1","err2","findu","ut","divis","integrate","nterm","interv","mainx","inpi","sum3","atan","cfe","axl","axl1","axl2","sxl","outer","order","qf","lb1","nc1","r1","sigma","lim1","acc","nt","ntm","acc1","almx","xlim","xnt","xntm","utx","sd","intv","intv1","up","un","qfval","ifault","trace","fill","rats","ctffx","l2","error","ROOT_EPSILON","Number","EPSILON","EXP_SINH_ABSCISSAS","EXP_SINH_WEIGHTS","ExpSinh","max_refinements","m_max_refinements","m_committed_refinements","m_t_min","m_abscissas","m_weights","steps","ldexp","t_max","sinh","cosh","extend_refinements","integrand","MAX_VALUE","y_max","I0","L1_I0","I1","L1_I1","absum","abscissas_row","get_abscissa_row","weight_row","get_weight_row","abterm1","eps","abterm0","DBL_EPSILON","DBL_MIN","MIN_VALUE","DBL_MAX","SCALE_FACTOR","DXREL","M_LN2","LN2","M_LN10","LN10","M_PI","M_2PI","M_LN_2PI","M_LN_SQRT_2PI","M_CUTOFF","_dbl_min_exp","ML_ERROR","ML_ERR_return_NAN","S0","S1","S2","S3","SFERR_HALVES","LGAMMA_COEFS","POIS_COEFS_A","POIS_COEFS_B","GAMCS","ALGMCS","PNORM_A","PNORM_B","PNORM_C","PNORM_D","PNORM_P","PNORM_Q","R_D__0","log_p","R_D__1","R_DT_0","lower_tail","R_DT_1","R_D_val","R_D_log","R_DT_val","log1p","R_D_Clog","R_D_LExp","R_Log1_Exp","R_DT_Clog","R_Q_P01_boundaries","NEGATIVE_INFINITY","R_DT_qIv","expm1","R_D_Lval","fmin2","fmax2","R_D_exp","sinpi","chebyshev_eval","b1","b2","twox","lgammacor","gammafn","sinpiy","POSITIVE_INFINITY","stirlerr","lgammafn","ans","lgammafn_sign","nn","bd0","np","ej","dpois_raw","give_log","R_D","R_D_fexp","logcf","c3","a2","log1pmx","lgamma1p","lgam","logspace_add","logx","logy","dpois_wrap","x_plus_1","R_DT","pd_lower_cf","of","ppois_asymp","elfb","elfb_term","res12","res1_term","res1_ig","res2_term","res2_ig","dfm","pt_","s2pt","coefs_a","coefs_b","pnorm","n_d_over_p","lp","dnorm","dpnorm","pgamma_raw","alph","res","x_min","x_max","R_P_bounds_01","lf2","f1m1","f2m1","pgamma_smallx","pd_upper_series","pd_lower_series","pgamma","dgamma","parseNumeric","parseBoolean","dchisq","df","pchisq","ncp","pnchisq","pnchisq_raw","theta","errmax","reltol","itrmax","lam","f_x_2n","f_2n","lamSml","tSml","is_it","l_lam","l_x","_L","qnorm","mu","p_","val","R_D_Cval","R_DT_CIv","qchisq_appr","p2","R_Q_P01_check","R_DT_log","lgam1pa","qgamma","ch0","s6","max_it_Newton","end","i_tail","cum","ccum","xden","xnum","xsq","lower","upper","pnorm_both","dbeta","lval","corr","lbeta","dbinom_raw","_dbeta","shape1","shape2","default_value","MVT_WASM_HELPERS","makeDoubleVec","DoubleVec","resize","makeIntVec","IntVec","copyToDoubleVec","push_back","pmvnorm","infin","delta","corrF","cov2cor","inform","mvtdst","eigh","lambdas","corr_diag","norm","emptyRowMatrix","nrows","ncols","get_conditional_dist","scores","cov","comb","mu2","sub_cov","idx1","idx2","sigma12","calculate_mvt_pvalue","cov_t","pvalue","chisq","jointProbHash","uni","indx","par","twk","iwk","owk","condProb","prob","hashKey","newKey","swk","AggregationTest","label","requiresMaf","mafs","ZegginiBurdenTest","weights","over","wvw","under","effect","se","_vt","maf_cutoffs","cov_weight","maf","numer","denom","t_stat","VTTest","_method","sorted_mafs","sort","eff_cut","se_cut","SkatTest","sqrtS","uT","eigenRhs","eigenLhs","eigen","finalSvd","_skatLiu","_skatDavies","daviesResult","qstat","qfc","pval","converged","ilambda","tStar","muX","qNew","getEigen","numNonZero","sumNonZero","numKeep","keep","getMoment","muQ","sigmaQ","varQ","sigmaX","getQvalByMoment","min_pval","qchisq","jacobi","Ain","gapq","termp","termq","tau","iters","bw","zw","niter","nrot","tresh","jacobinorm","SkatIntegrator","rhos","Qs_minP","taus","MuQ","VarQ","VarZeta","Df","kappa","nRho","pvalueDavies","fpath","xstart","xend","increment","fs","createWriteStream","integrandDavies","integ","integrandLiu","fault","SkatOptimalTest","nVar","nRhos","Rp","Qs","phi","phi_rho","moments","pvals","daviesPvals","liuPvals","minP","minIndex","Z11","ZZ","ZMZ","ZIMZ","varZeta","dF","z_mean","tau1","Set","skatOptimalIntegral","minP_adj","_all_tests","AGGREGATION_TESTS","freeze","reduce","inst","PortalVariantsHelper","variants_array","_variants","_variant_lookup","parsePortalVariantData","variants","lookup","variant","altFreq","score","chrom","pos","ref","alt","effectFreq","altAllele","effectAllele","variant_names","variant_data","PortalGroupHelper","groups","_groups","_lookup","_generateLookup","selection","subset","filter","group","has","mask","item","_getKey","mask_name","group_name","is_alt_effect","n_variants","covmat","covariance","iAlt","jAlt","nSamples","PortalTestRunner","test_names","_tests","addTest","_AggregationTest","partials","_runOne","results","one_test","all_prior","one_res","getScores","isAltEffect","makeCovarianceMatrix","getEffectFreq","stat","groupType","group_results","parsePortalJSON","json","sigmaSquared"],"mappings":"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sBAA2B,uBAA2B,sBAA0B,uBAA0B,oBAA0B,sBAA0B,qBAA0B,uBAA0B,sBAA0B,oBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,uBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,uBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,mBAA0B,oBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,iBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,sBAA0B,qBAA0B,qBAA0B,mBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA2B,qBAA2B,uBAA2B,sBAA2B,sBAA2B,uBAC59J,CAAC,uBAA2B,sBAA2B,wBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,oBAA2B,wBAA2B,uBAA0B,uBAA0B,uBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,oBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,oBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,uBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,uBAA0B,qBAA0B,sBAA0B,oBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,uBAA0B,uBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,oBAA0B,sBAA0B,mBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,iBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,oBAA0B,mBAA0B,mBAA0B,mBAA0B,oBAA0B,mBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,mBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,mBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,mBAA2B,oBAA2B,qBAA2B,oBAA2B,oBAA2B,qBAA2B,qBAA2B,sBAA2B,uBAA2B,qBAA2B,qBAA2B,sBAA2B,qBAA2B,uBAC9+T,CAAC,uBAA2B,sBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,wBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,uBAA0B,sBAA0B,sBAA0B,sBAA0B,uBAA0B,sBAA0B,uBAA0B,sBAA0B,sBAA0B,uBAA0B,qBAA0B,qBAA0B,sBAA0B,uBAA0B,qBAA0B,mBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,oBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,uBAA0B,sBAA0B,mBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,oBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,uBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,uBAA0B,uBAA0B,qBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,oBAA0B,uBAA0B,sBAA0B,uBAA0B,uBAA0B,uBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,oBAA0B,sBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,oBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,oBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,mBAA0B,qBAA0B,qBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,kBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,EAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,iBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,iBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBA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0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,iBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,iBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,iBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,gBAA0B,iBAA0B,iBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,mBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,mBAA0B,sBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,kBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,mBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,mBAA0B,uBAA2B,oBAA2B,qBAA2B,sBAA2B,oBAA2B,sBAA2B,oBAA2B,qBAA2B,qBAA2B,oBAA2B,qBAA2B,qBAA2B,sBAA2B,uBAA2B,qBAC9+T,CAAC,sBAA2B,uBAA2B,uBAA2B,sBAA2B,sBAA2B,sBAA2B,uBAA2B,uBAA2B,wBAA2B,sBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,uBAA2B,uBAA2B,uBAA2B,sBAA2B,sBAA2B,sBAA2B,sBAA2B,uBAA2B,sBAA2B,qBAA2B,uBAA2B,sBAA2B,uBAA2B,uBAA2B,sBAA0B,uBAA0B,qBAA0B,uBAA0B,sBAA0B,uBAA0B,sBAA0B,uBAA0B,sBAA0B,sBAA0B,oBAA0B,sBAA0B,oBAA0B,uBAA0B,qBAA0B,sBAA0B,oBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,uBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,uBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,uBAA0B,uBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,uBAA0B,uBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,oBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,uBAA0B,sBAA0B,uBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,oBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,oBAA0B,kBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,sBAA0B,qBAA0B,qBAA0B,sBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,mBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,iBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,iBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,gBAA0B,gBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,iBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,iBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,iBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,gBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,gBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,iBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,iBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,iBAA0B,mBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,kBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,iBAA0B,kBAA0B,mBAA0B,mBAA0B,kBAA0B,mBAA0B,kBAA0B,mBAA0B,mBAA0B,gBAA0B,iBAA0B,iBAA0B,iBAA0B,iBAA0B,iBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,kBAA0B,mBAA0B,mBAA0B,mBAA0B,mBAA0B,oBAA0B,mBAA0B,mBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,kBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,kBAA0B,oBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,mBAA0B,qBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,kBAA0B,qBAA0B,oBAA0B,qBAA0B,sBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,mBAA0B,oBAA0B,oBAA0B,oBAA0B,mBAA0B,qBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,sBAA0B,qBAA0B,qBAA0B,qBAA0B,oBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,mBAA0B,oBAA0B,qBAA0B,oBAA0B,qBAA0B,qBAA0B,oB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qB,EAPY,EAOG,CACjB,IAAI8b,EAAM,GACV,OAAQ9b,GACR,KAVc,EAWZ8b,EAAM,6BAAH,OAAgCnd,GACnC,MACF,KAZa,EAaXmd,EAAM,yBAAH,OAA4Bnd,GAC/B,MACF,KAdc,EAeZmd,EAAM,yBAAH,OAA4Bnd,GAC/B,MACF,KAhBiB,EAiBfmd,EAAM,gDAAH,OAAmDnd,GACtD,MACF,KAlBiB,GAmBfmd,EAAM,yBAAH,OAA4Bnd,GAGjCwsB,QAAQ8jB,MAAMnzB,IAIlB,SAASs2B,KAEP,OADAD,GA/BgB,EA+BI,IACb5yB,IAGT,IAAM8yB,GAAK,mBAELC,GAAK,oBAELC,GAAK,qBAELC,GAAK,qBAKLC,GAAe,CACnB,EACA,mBACA,mBACA,mBACA,kBACA,mBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,oBACA,oBACA,mBACA,mBACA,oBACA,oBACA,mBACA,oBACA,oBACA,oBACA,qBACA,qBACA,qBAGIC,GAAe,CAAC,kBACpB,kBACA,oBACA,oBACA,qBACA,oBACA,qBACA,sBACA,qBACA,qBACA,qBACA,qBACA,qBACA,qBACA,oBACA,qBACA,sBACA,sBACA,sBACA,sBACA,sBACA,qBACA,sBACA,sBACA,sBACA,uBACA,sBACA,mBACA,sBACA,sBACA,qBACA,qBACA,qBACA,qBACA,oBACA,sBACA,qBACA,sBACA,sBACA,uBAGIC,GAAe,EAClB,KACD,EAAI,GACH,EAAI,IACL,EAAI,KACJ,GAAK,MACJ,KAAO,UACP,OAAS,UACV,OAAS,YAGLC,GAAe,EAClB,KACD,EAAI,GACJ,EAAI,KACH,IAAM,OACN,IAAM,QACP,OAAS,UACT,QAAU,aACV,sBAGIC,GAAQ,CACZ,mBACA,oBACA,oBACC,mBACD,sBACC,sBACD,sBACC,qBACD,uBACC,qBACD,sBACC,qBACD,uBACC,uBACD,uBACC,oBACD,qBACC,qBACD,uBACC,qBACD,sBACC,qBACD,sBACC,qBACD,sBACC,qBACD,wBACC,qBACD,sBACC,qBACD,uBACC,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","file":"raremetal.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"raremetal\"] = factory();\n\telse\n\t\troot[\"raremetal\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 24);\n","\"use strict\";\n\nvar numeric = (typeof exports === \"undefined\")?(function numeric() {}):(exports);\nif(typeof global !== \"undefined\") { global.numeric = numeric; }\n\nnumeric.version = \"1.2.6\";\n\n// 1. Utility functions\nnumeric.bench = function bench (f,interval) {\n    var t1,t2,n,i;\n    if(typeof interval === \"undefined\") { interval = 15; }\n    n = 0.5;\n    t1 = new Date();\n    while(1) {\n        n*=2;\n        for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n        while(i>0) { f(); i--; }\n        t2 = new Date();\n        if(t2-t1 > interval) break;\n    }\n    for(i=n;i>3;i-=4) { f(); f(); f(); f(); }\n    while(i>0) { f(); i--; }\n    t2 = new Date();\n    return 1000*(3*n-1)/(t2-t1);\n}\n\nnumeric._myIndexOf = (function _myIndexOf(w) {\n    var n = this.length,k;\n    for(k=0;k<n;++k) if(this[k]===w) return k;\n    return -1;\n});\nnumeric.myIndexOf = (Array.prototype.indexOf)?Array.prototype.indexOf:numeric._myIndexOf;\n\nnumeric.Function = Function;\nnumeric.precision = 4;\nnumeric.largeArray = 50;\n\nnumeric.prettyPrint = function prettyPrint(x) {\n    function fmtnum(x) {\n        if(x === 0) { return '0'; }\n        if(isNaN(x)) { return 'NaN'; }\n        if(x<0) { return '-'+fmtnum(-x); }\n        if(isFinite(x)) {\n            var scale = Math.floor(Math.log(x) / Math.log(10));\n            var normalized = x / Math.pow(10,scale);\n            var basic = normalized.toPrecision(numeric.precision);\n            if(parseFloat(basic) === 10) { scale++; normalized = 1; basic = normalized.toPrecision(numeric.precision); }\n            return parseFloat(basic).toString()+'e'+scale.toString();\n        }\n        return 'Infinity';\n    }\n    var ret = [];\n    function foo(x) {\n        var k;\n        if(typeof x === \"undefined\") { ret.push(Array(numeric.precision+8).join(' ')); return false; }\n        if(typeof x === \"string\") { ret.push('\"'+x+'\"'); return false; }\n        if(typeof x === \"boolean\") { ret.push(x.toString()); return false; }\n        if(typeof x === \"number\") {\n            var a = fmtnum(x);\n            var b = x.toPrecision(numeric.precision);\n            var c = parseFloat(x.toString()).toString();\n            var d = [a,b,c,parseFloat(b).toString(),parseFloat(c).toString()];\n            for(k=1;k<d.length;k++) { if(d[k].length < a.length) a = d[k]; }\n            ret.push(Array(numeric.precision+8-a.length).join(' ')+a);\n            return false;\n        }\n        if(x === null) { ret.push(\"null\"); return false; }\n        if(typeof x === \"function\") { \n            ret.push(x.toString());\n            var flag = false;\n            for(k in x) { if(x.hasOwnProperty(k)) { \n                if(flag) ret.push(',\\n');\n                else ret.push('\\n{');\n                flag = true; \n                ret.push(k); \n                ret.push(': \\n'); \n                foo(x[k]); \n            } }\n            if(flag) ret.push('}\\n');\n            return true;\n        }\n        if(x instanceof Array) {\n            if(x.length > numeric.largeArray) { ret.push('...Large Array...'); return true; }\n            var flag = false;\n            ret.push('[');\n            for(k=0;k<x.length;k++) { if(k>0) { ret.push(','); if(flag) ret.push('\\n '); } flag = foo(x[k]); }\n            ret.push(']');\n            return true;\n        }\n        ret.push('{');\n        var flag = false;\n        for(k in x) { if(x.hasOwnProperty(k)) { if(flag) ret.push(',\\n'); flag = true; ret.push(k); ret.push(': \\n'); foo(x[k]); } }\n        ret.push('}');\n        return true;\n    }\n    foo(x);\n    return ret.join('');\n}\n\nnumeric.parseDate = function parseDate(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return Date.parse(d.replace(/-/g,'/')); }\n        if(!(d instanceof Array)) { throw new Error(\"parseDate: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseFloat = function parseFloat_(d) {\n    function foo(d) {\n        if(typeof d === 'string') { return parseFloat(d); }\n        if(!(d instanceof Array)) { throw new Error(\"parseFloat: parameter must be arrays of strings\"); }\n        var ret = [],k;\n        for(k=0;k<d.length;k++) { ret[k] = foo(d[k]); }\n        return ret;\n    }\n    return foo(d);\n}\n\nnumeric.parseCSV = function parseCSV(t) {\n    var foo = t.split('\\n');\n    var j,k;\n    var ret = [];\n    var pat = /(([^'\",]*)|('[^']*')|(\"[^\"]*\")),/g;\n    var patnum = /^\\s*(([+-]?[0-9]+(\\.[0-9]*)?(e[+-]?[0-9]+)?)|([+-]?[0-9]*(\\.[0-9]+)?(e[+-]?[0-9]+)?))\\s*$/;\n    var stripper = function(n) { return n.substr(0,n.length-1); }\n    var count = 0;\n    for(k=0;k<foo.length;k++) {\n      var bar = (foo[k]+\",\").match(pat),baz;\n      if(bar.length>0) {\n          ret[count] = [];\n          for(j=0;j<bar.length;j++) {\n              baz = stripper(bar[j]);\n              if(patnum.test(baz)) { ret[count][j] = parseFloat(baz); }\n              else ret[count][j] = baz;\n          }\n          count++;\n      }\n    }\n    return ret;\n}\n\nnumeric.toCSV = function toCSV(A) {\n    var s = numeric.dim(A);\n    var i,j,m,n,row,ret;\n    m = s[0];\n    n = s[1];\n    ret = [];\n    for(i=0;i<m;i++) {\n        row = [];\n        for(j=0;j<m;j++) { row[j] = A[i][j].toString(); }\n        ret[i] = row.join(', ');\n    }\n    return ret.join('\\n')+'\\n';\n}\n\nnumeric.getURL = function getURL(url) {\n    var client = new XMLHttpRequest();\n    client.open(\"GET\",url,false);\n    client.send();\n    return client;\n}\n\nnumeric.imageURL = function imageURL(img) {\n    function base64(A) {\n        var n = A.length, i,x,y,z,p,q,r,s;\n        var key = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\n        var ret = \"\";\n        for(i=0;i<n;i+=3) {\n            x = A[i];\n            y = A[i+1];\n            z = A[i+2];\n            p = x >> 2;\n            q = ((x & 3) << 4) + (y >> 4);\n            r = ((y & 15) << 2) + (z >> 6);\n            s = z & 63;\n            if(i+1>=n) { r = s = 64; }\n            else if(i+2>=n) { s = 64; }\n            ret += key.charAt(p) + key.charAt(q) + key.charAt(r) + key.charAt(s);\n            }\n        return ret;\n    }\n    function crc32Array (a,from,to) {\n        if(typeof from === \"undefined\") { from = 0; }\n        if(typeof to === \"undefined\") { to = a.length; }\n        var table = [0x00000000, 0x77073096, 0xEE0E612C, 0x990951BA, 0x076DC419, 0x706AF48F, 0xE963A535, 0x9E6495A3,\n                     0x0EDB8832, 0x79DCB8A4, 0xE0D5E91E, 0x97D2D988, 0x09B64C2B, 0x7EB17CBD, 0xE7B82D07, 0x90BF1D91, \n                     0x1DB71064, 0x6AB020F2, 0xF3B97148, 0x84BE41DE, 0x1ADAD47D, 0x6DDDE4EB, 0xF4D4B551, 0x83D385C7,\n                     0x136C9856, 0x646BA8C0, 0xFD62F97A, 0x8A65C9EC, 0x14015C4F, 0x63066CD9, 0xFA0F3D63, 0x8D080DF5, \n                     0x3B6E20C8, 0x4C69105E, 0xD56041E4, 0xA2677172, 0x3C03E4D1, 0x4B04D447, 0xD20D85FD, 0xA50AB56B, \n                     0x35B5A8FA, 0x42B2986C, 0xDBBBC9D6, 0xACBCF940, 0x32D86CE3, 0x45DF5C75, 0xDCD60DCF, 0xABD13D59, \n                     0x26D930AC, 0x51DE003A, 0xC8D75180, 0xBFD06116, 0x21B4F4B5, 0x56B3C423, 0xCFBA9599, 0xB8BDA50F,\n                     0x2802B89E, 0x5F058808, 0xC60CD9B2, 0xB10BE924, 0x2F6F7C87, 0x58684C11, 0xC1611DAB, 0xB6662D3D,\n                     0x76DC4190, 0x01DB7106, 0x98D220BC, 0xEFD5102A, 0x71B18589, 0x06B6B51F, 0x9FBFE4A5, 0xE8B8D433,\n                     0x7807C9A2, 0x0F00F934, 0x9609A88E, 0xE10E9818, 0x7F6A0DBB, 0x086D3D2D, 0x91646C97, 0xE6635C01, \n                     0x6B6B51F4, 0x1C6C6162, 0x856530D8, 0xF262004E, 0x6C0695ED, 0x1B01A57B, 0x8208F4C1, 0xF50FC457, \n                     0x65B0D9C6, 0x12B7E950, 0x8BBEB8EA, 0xFCB9887C, 0x62DD1DDF, 0x15DA2D49, 0x8CD37CF3, 0xFBD44C65, \n                     0x4DB26158, 0x3AB551CE, 0xA3BC0074, 0xD4BB30E2, 0x4ADFA541, 0x3DD895D7, 0xA4D1C46D, 0xD3D6F4FB, \n                     0x4369E96A, 0x346ED9FC, 0xAD678846, 0xDA60B8D0, 0x44042D73, 0x33031DE5, 0xAA0A4C5F, 0xDD0D7CC9, \n                     0x5005713C, 0x270241AA, 0xBE0B1010, 0xC90C2086, 0x5768B525, 0x206F85B3, 0xB966D409, 0xCE61E49F, \n                     0x5EDEF90E, 0x29D9C998, 0xB0D09822, 0xC7D7A8B4, 0x59B33D17, 0x2EB40D81, 0xB7BD5C3B, 0xC0BA6CAD, \n                     0xEDB88320, 0x9ABFB3B6, 0x03B6E20C, 0x74B1D29A, 0xEAD54739, 0x9DD277AF, 0x04DB2615, 0x73DC1683, \n                     0xE3630B12, 0x94643B84, 0x0D6D6A3E, 0x7A6A5AA8, 0xE40ECF0B, 0x9309FF9D, 0x0A00AE27, 0x7D079EB1, \n                     0xF00F9344, 0x8708A3D2, 0x1E01F268, 0x6906C2FE, 0xF762575D, 0x806567CB, 0x196C3671, 0x6E6B06E7, \n                     0xFED41B76, 0x89D32BE0, 0x10DA7A5A, 0x67DD4ACC, 0xF9B9DF6F, 0x8EBEEFF9, 0x17B7BE43, 0x60B08ED5, \n                     0xD6D6A3E8, 0xA1D1937E, 0x38D8C2C4, 0x4FDFF252, 0xD1BB67F1, 0xA6BC5767, 0x3FB506DD, 0x48B2364B, \n                     0xD80D2BDA, 0xAF0A1B4C, 0x36034AF6, 0x41047A60, 0xDF60EFC3, 0xA867DF55, 0x316E8EEF, 0x4669BE79, \n                     0xCB61B38C, 0xBC66831A, 0x256FD2A0, 0x5268E236, 0xCC0C7795, 0xBB0B4703, 0x220216B9, 0x5505262F, \n                     0xC5BA3BBE, 0xB2BD0B28, 0x2BB45A92, 0x5CB36A04, 0xC2D7FFA7, 0xB5D0CF31, 0x2CD99E8B, 0x5BDEAE1D, \n                     0x9B64C2B0, 0xEC63F226, 0x756AA39C, 0x026D930A, 0x9C0906A9, 0xEB0E363F, 0x72076785, 0x05005713, \n                     0x95BF4A82, 0xE2B87A14, 0x7BB12BAE, 0x0CB61B38, 0x92D28E9B, 0xE5D5BE0D, 0x7CDCEFB7, 0x0BDBDF21, \n                     0x86D3D2D4, 0xF1D4E242, 0x68DDB3F8, 0x1FDA836E, 0x81BE16CD, 0xF6B9265B, 0x6FB077E1, 0x18B74777, \n                     0x88085AE6, 0xFF0F6A70, 0x66063BCA, 0x11010B5C, 0x8F659EFF, 0xF862AE69, 0x616BFFD3, 0x166CCF45, \n                     0xA00AE278, 0xD70DD2EE, 0x4E048354, 0x3903B3C2, 0xA7672661, 0xD06016F7, 0x4969474D, 0x3E6E77DB, \n                     0xAED16A4A, 0xD9D65ADC, 0x40DF0B66, 0x37D83BF0, 0xA9BCAE53, 0xDEBB9EC5, 0x47B2CF7F, 0x30B5FFE9, \n                     0xBDBDF21C, 0xCABAC28A, 0x53B39330, 0x24B4A3A6, 0xBAD03605, 0xCDD70693, 0x54DE5729, 0x23D967BF, \n                     0xB3667A2E, 0xC4614AB8, 0x5D681B02, 0x2A6F2B94, 0xB40BBE37, 0xC30C8EA1, 0x5A05DF1B, 0x2D02EF8D];\n     \n        var crc = -1, y = 0, n = a.length,i;\n\n        for (i = from; i < to; i++) {\n            y = (crc ^ a[i]) & 0xFF;\n            crc = (crc >>> 8) ^ table[y];\n        }\n     \n        return crc ^ (-1);\n    }\n\n    var h = img[0].length, w = img[0][0].length, s1, s2, next,k,length,a,b,i,j,adler32,crc32;\n    var stream = [\n                  137, 80, 78, 71, 13, 10, 26, 10,                           //  0: PNG signature\n                  0,0,0,13,                                                  //  8: IHDR Chunk length\n                  73, 72, 68, 82,                                            // 12: \"IHDR\" \n                  (w >> 24) & 255, (w >> 16) & 255, (w >> 8) & 255, w&255,   // 16: Width\n                  (h >> 24) & 255, (h >> 16) & 255, (h >> 8) & 255, h&255,   // 20: Height\n                  8,                                                         // 24: bit depth\n                  2,                                                         // 25: RGB\n                  0,                                                         // 26: deflate\n                  0,                                                         // 27: no filter\n                  0,                                                         // 28: no interlace\n                  -1,-2,-3,-4,                                               // 29: CRC\n                  -5,-6,-7,-8,                                               // 33: IDAT Chunk length\n                  73, 68, 65, 84,                                            // 37: \"IDAT\"\n                  // RFC 1950 header starts here\n                  8,                                                         // 41: RFC1950 CMF\n                  29                                                         // 42: RFC1950 FLG\n                  ];\n    crc32 = crc32Array(stream,12,29);\n    stream[29] = (crc32>>24)&255;\n    stream[30] = (crc32>>16)&255;\n    stream[31] = (crc32>>8)&255;\n    stream[32] = (crc32)&255;\n    s1 = 1;\n    s2 = 0;\n    for(i=0;i<h;i++) {\n        if(i<h-1) { stream.push(0); }\n        else { stream.push(1); }\n        a = (3*w+1+(i===0))&255; b = ((3*w+1+(i===0))>>8)&255;\n        stream.push(a); stream.push(b);\n        stream.push((~a)&255); stream.push((~b)&255);\n        if(i===0) stream.push(0);\n        for(j=0;j<w;j++) {\n            for(k=0;k<3;k++) {\n                a = img[k][i][j];\n                if(a>255) a = 255;\n                else if(a<0) a=0;\n                else a = Math.round(a);\n                s1 = (s1 + a )%65521;\n                s2 = (s2 + s1)%65521;\n                stream.push(a);\n            }\n        }\n        stream.push(0);\n    }\n    adler32 = (s2<<16)+s1;\n    stream.push((adler32>>24)&255);\n    stream.push((adler32>>16)&255);\n    stream.push((adler32>>8)&255);\n    stream.push((adler32)&255);\n    length = stream.length - 41;\n    stream[33] = (length>>24)&255;\n    stream[34] = (length>>16)&255;\n    stream[35] = (length>>8)&255;\n    stream[36] = (length)&255;\n    crc32 = crc32Array(stream,37);\n    stream.push((crc32>>24)&255);\n    stream.push((crc32>>16)&255);\n    stream.push((crc32>>8)&255);\n    stream.push((crc32)&255);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n    stream.push(0);\n//    a = stream.length;\n    stream.push(73);  // I\n    stream.push(69);  // E\n    stream.push(78);  // N\n    stream.push(68);  // D\n    stream.push(174); // CRC1\n    stream.push(66);  // CRC2\n    stream.push(96);  // CRC3\n    stream.push(130); // CRC4\n    return 'data:image/png;base64,'+base64(stream);\n}\n\n// 2. Linear algebra with Arrays.\nnumeric._dim = function _dim(x) {\n    var ret = [];\n    while(typeof x === \"object\") { ret.push(x.length); x = x[0]; }\n    return ret;\n}\n\nnumeric.dim = function dim(x) {\n    var y,z;\n    if(typeof x === \"object\") {\n        y = x[0];\n        if(typeof y === \"object\") {\n            z = y[0];\n            if(typeof z === \"object\") {\n                return numeric._dim(x);\n            }\n            return [x.length,y.length];\n        }\n        return [x.length];\n    }\n    return [];\n}\n\nnumeric.mapreduce = function mapreduce(body,init) {\n    return Function('x','accum','_s','_k',\n            'if(typeof accum === \"undefined\") accum = '+init+';\\n'+\n            'if(typeof x === \"number\") { var xi = x; '+body+'; return accum; }\\n'+\n            'if(typeof _s === \"undefined\") _s = numeric.dim(x);\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i,xi;\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) {\\n'+\n            '        accum = arguments.callee(x[i],accum,_s,_k+1);\\n'+\n            '    }'+\n            '    return accum;\\n'+\n            '}\\n'+\n            'for(i=_n-1;i>=1;i-=2) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '    xi = x[i-1];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'if(i === 0) {\\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\nnumeric.mapreduce2 = function mapreduce2(body,setup) {\n    return Function('x',\n            'var n = x.length;\\n'+\n            'var i,xi;\\n'+setup+';\\n'+\n            'for(i=n-1;i!==-1;--i) { \\n'+\n            '    xi = x[i];\\n'+\n            '    '+body+';\\n'+\n            '}\\n'+\n            'return accum;'\n            );\n}\n\n\nnumeric.same = function same(x,y) {\n    var i,n;\n    if(!(x instanceof Array) || !(y instanceof Array)) { return false; }\n    n = x.length;\n    if(n !== y.length) { return false; }\n    for(i=0;i<n;i++) {\n        if(x[i] === y[i]) { continue; }\n        if(typeof x[i] === \"object\") { if(!same(x[i],y[i])) return false; }\n        else { return false; }\n    }\n    return true;\n}\n\nnumeric.rep = function rep(s,v,k) {\n    if(typeof k === \"undefined\") { k=0; }\n    var n = s[k], ret = Array(n), i;\n    if(k === s.length-1) {\n        for(i=n-2;i>=0;i-=2) { ret[i+1] = v; ret[i] = v; }\n        if(i===-1) { ret[0] = v; }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) { ret[i] = numeric.rep(s,v,k+1); }\n    return ret;\n}\n\n\nnumeric.dotMMsmall = function dotMMsmall(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0;\n    p = x.length; q = y.length; r = y[0].length;\n    ret = Array(p);\n    for(i=p-1;i>=0;i--) {\n        foo = Array(r);\n        bar = x[i];\n        for(k=r-1;k>=0;k--) {\n            woo = bar[q-1]*y[q-1][k];\n            for(j=q-2;j>=1;j-=2) {\n                i0 = j-1;\n                woo += bar[j]*y[j][k] + bar[i0]*y[i0][k];\n            }\n            if(j===0) { woo += bar[0]*y[0][k]; }\n            foo[k] = woo;\n        }\n        ret[i] = foo;\n    }\n    return ret;\n}\nnumeric._getCol = function _getCol(A,j,x) {\n    var n = A.length, i;\n    for(i=n-1;i>0;--i) {\n        x[i] = A[i][j];\n        --i;\n        x[i] = A[i][j];\n    }\n    if(i===0) x[0] = A[0][j];\n}\nnumeric.dotMMbig = function dotMMbig(x,y){\n    var gc = numeric._getCol, p = y.length, v = Array(p);\n    var m = x.length, n = y[0].length, A = new Array(m), xj;\n    var VV = numeric.dotVV;\n    var i,j,k,z;\n    --p;\n    --m;\n    for(i=m;i!==-1;--i) A[i] = Array(n);\n    --n;\n    for(i=n;i!==-1;--i) {\n        gc(y,i,v);\n        for(j=m;j!==-1;--j) {\n            z=0;\n            xj = x[j];\n            A[j][i] = VV(xj,v);\n        }\n    }\n    return A;\n}\n\nnumeric.dotMV = function dotMV(x,y) {\n    var p = x.length, q = y.length,i;\n    var ret = Array(p), dotVV = numeric.dotVV;\n    for(i=p-1;i>=0;i--) { ret[i] = dotVV(x[i],y); }\n    return ret;\n}\n\nnumeric.dotVM = function dotVM(x,y) {\n    var i,j,k,p,q,r,ret,foo,bar,woo,i0,k0,p0,r0,s1,s2,s3,baz,accum;\n    p = x.length; q = y[0].length;\n    ret = Array(q);\n    for(k=q-1;k>=0;k--) {\n        woo = x[p-1]*y[p-1][k];\n        for(j=p-2;j>=1;j-=2) {\n            i0 = j-1;\n            woo += x[j]*y[j][k] + x[i0]*y[i0][k];\n        }\n        if(j===0) { woo += x[0]*y[0][k]; }\n        ret[k] = woo;\n    }\n    return ret;\n}\n\nnumeric.dotVV = function dotVV(x,y) {\n    var i,n=x.length,i1,ret = x[n-1]*y[n-1];\n    for(i=n-2;i>=1;i-=2) {\n        i1 = i-1;\n        ret += x[i]*y[i] + x[i1]*y[i1];\n    }\n    if(i===0) { ret += x[0]*y[0]; }\n    return ret;\n}\n\nnumeric.dot = function dot(x,y) {\n    var d = numeric.dim;\n    switch(d(x).length*1000+d(y).length) {\n    case 2002:\n        if(y.length < 10) return numeric.dotMMsmall(x,y);\n        else return numeric.dotMMbig(x,y);\n    case 2001: return numeric.dotMV(x,y);\n    case 1002: return numeric.dotVM(x,y);\n    case 1001: return numeric.dotVV(x,y);\n    case 1000: return numeric.mulVS(x,y);\n    case 1: return numeric.mulSV(x,y);\n    case 0: return x*y;\n    default: throw new Error('numeric.dot only works on vectors and matrices');\n    }\n}\n\nnumeric.diag = function diag(d) {\n    var i,i1,j,n = d.length, A = Array(n), Ai;\n    for(i=n-1;i>=0;i--) {\n        Ai = Array(n);\n        i1 = i+2;\n        for(j=n-1;j>=i1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j>i) { Ai[j] = 0; }\n        Ai[i] = d[i];\n        for(j=i-1;j>=1;j-=2) {\n            Ai[j] = 0;\n            Ai[j-1] = 0;\n        }\n        if(j===0) { Ai[0] = 0; }\n        A[i] = Ai;\n    }\n    return A;\n}\nnumeric.getDiag = function(A) {\n    var n = Math.min(A.length,A[0].length),i,ret = Array(n);\n    for(i=n-1;i>=1;--i) {\n        ret[i] = A[i][i];\n        --i;\n        ret[i] = A[i][i];\n    }\n    if(i===0) {\n        ret[0] = A[0][0];\n    }\n    return ret;\n}\n\nnumeric.identity = function identity(n) { return numeric.diag(numeric.rep([n],1)); }\nnumeric.pointwise = function pointwise(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = '_s';\n    fun[params.length+1] = '_k';\n    fun[params.length+2] = (\n            'if(typeof _s === \"undefined\") _s = numeric.dim('+thevec+');\\n'+\n            'if(typeof _k === \"undefined\") _k = 0;\\n'+\n            'var _n = _s[_k];\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            'if(_k < _s.length-1) {\\n'+\n            '    for(i=_n-1;i>=0;i--) ret[i] = arguments.callee('+params.join(',')+',_s,_k+1);\\n'+\n            '    return ret;\\n'+\n            '}\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            '    '+body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric.pointwise2 = function pointwise2(params,body,setup) {\n    if(typeof setup === \"undefined\") { setup = \"\"; }\n    var fun = [];\n    var k;\n    var avec = /\\[i\\]$/,p,thevec = '';\n    var haveret = false;\n    for(k=0;k<params.length;k++) {\n        if(avec.test(params[k])) {\n            p = params[k].substring(0,params[k].length-3);\n            thevec = p;\n        } else { p = params[k]; }\n        if(p==='ret') haveret = true;\n        fun.push(p);\n    }\n    fun[params.length] = (\n            'var _n = '+thevec+'.length;\\n'+\n            'var i'+(haveret?'':', ret = Array(_n)')+';\\n'+\n            setup+'\\n'+\n            'for(i=_n-1;i!==-1;--i) {\\n'+\n            body+'\\n'+\n            '}\\n'+\n            'return ret;'\n            );\n    return Function.apply(null,fun);\n}\nnumeric._biforeach = (function _biforeach(x,y,s,k,f) {\n    if(k === s.length-1) { f(x,y); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _biforeach(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n});\nnumeric._biforeach2 = (function _biforeach2(x,y,s,k,f) {\n    if(k === s.length-1) { return f(x,y); }\n    var i,n=s[k],ret = Array(n);\n    for(i=n-1;i>=0;--i) { ret[i] = _biforeach2(typeof x===\"object\"?x[i]:x,typeof y===\"object\"?y[i]:y,s,k+1,f); }\n    return ret;\n});\nnumeric._foreach = (function _foreach(x,s,k,f) {\n    if(k === s.length-1) { f(x); return; }\n    var i,n=s[k];\n    for(i=n-1;i>=0;i--) { _foreach(x[i],s,k+1,f); }\n});\nnumeric._foreach2 = (function _foreach2(x,s,k,f) {\n    if(k === s.length-1) { return f(x); }\n    var i,n=s[k], ret = Array(n);\n    for(i=n-1;i>=0;i--) { ret[i] = _foreach2(x[i],s,k+1,f); }\n    return ret;\n});\n\n/*numeric.anyV = numeric.mapreduce('if(xi) return true;','false');\nnumeric.allV = numeric.mapreduce('if(!xi) return false;','true');\nnumeric.any = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.anyV(x); }\nnumeric.all = function(x) { if(typeof x.length === \"undefined\") return x; return numeric.allV(x); }*/\n\nnumeric.ops2 = {\n        add: '+',\n        sub: '-',\n        mul: '*',\n        div: '/',\n        mod: '%',\n        and: '&&',\n        or:  '||',\n        eq:  '===',\n        neq: '!==',\n        lt:  '<',\n        gt:  '>',\n        leq: '<=',\n        geq: '>=',\n        band: '&',\n        bor: '|',\n        bxor: '^',\n        lshift: '<<',\n        rshift: '>>',\n        rrshift: '>>>'\n};\nnumeric.opseq = {\n        addeq: '+=',\n        subeq: '-=',\n        muleq: '*=',\n        diveq: '/=',\n        modeq: '%=',\n        lshifteq: '<<=',\n        rshifteq: '>>=',\n        rrshifteq: '>>>=',\n        bandeq: '&=',\n        boreq: '|=',\n        bxoreq: '^='\n};\nnumeric.mathfuns = ['abs','acos','asin','atan','ceil','cos',\n                    'exp','floor','log','round','sin','sqrt','tan',\n                    'isNaN','isFinite'];\nnumeric.mathfuns2 = ['atan2','pow','max','min'];\nnumeric.ops1 = {\n        neg: '-',\n        not: '!',\n        bnot: '~',\n        clone: ''\n};\nnumeric.mapreducers = {\n        any: ['if(xi) return true;','var accum = false;'],\n        all: ['if(!xi) return false;','var accum = true;'],\n        sum: ['accum += xi;','var accum = 0;'],\n        prod: ['accum *= xi;','var accum = 1;'],\n        norm2Squared: ['accum += xi*xi;','var accum = 0;'],\n        norminf: ['accum = max(accum,abs(xi));','var accum = 0, max = Math.max, abs = Math.abs;'],\n        norm1: ['accum += abs(xi)','var accum = 0, abs = Math.abs;'],\n        sup: ['accum = max(accum,xi);','var accum = -Infinity, max = Math.max;'],\n        inf: ['accum = min(accum,xi);','var accum = Infinity, min = Math.min;']\n};\n\n(function () {\n    var i,o;\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        numeric.ops2[o] = o;\n    }\n    for(i in numeric.ops2) {\n        if(numeric.ops2.hasOwnProperty(i)) {\n            o = numeric.ops2[i];\n            var code, codeeq, setup = '';\n            if(numeric.myIndexOf.call(numeric.mathfuns2,i)!==-1) {\n                setup = 'var '+o+' = Math.'+o+';\\n';\n                code = function(r,x,y) { return r+' = '+o+'('+x+','+y+')'; };\n                codeeq = function(x,y) { return x+' = '+o+'('+x+','+y+')'; };\n            } else {\n                code = function(r,x,y) { return r+' = '+x+' '+o+' '+y; };\n                if(numeric.opseq.hasOwnProperty(i+'eq')) {\n                    codeeq = function(x,y) { return x+' '+o+'= '+y; };\n                } else {\n                    codeeq = function(x,y) { return x+' = '+x+' '+o+' '+y; };                    \n                }\n            }\n            numeric[i+'VV'] = numeric.pointwise2(['x[i]','y[i]'],code('ret[i]','x[i]','y[i]'),setup);\n            numeric[i+'SV'] = numeric.pointwise2(['x','y[i]'],code('ret[i]','x','y[i]'),setup);\n            numeric[i+'VS'] = numeric.pointwise2(['x[i]','y'],code('ret[i]','x[i]','y'),setup);\n            numeric[i] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var VV = numeric.'+i+'VV, VS = numeric.'+i+'VS, SV = numeric.'+i+'SV;\\n'+\n                    'var dim = numeric.dim;\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof x === \"object\") {\\n'+\n                    '      if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(x),0,VV);\\n'+\n                    '      else x = numeric._biforeach2(x,y,dim(x),0,VS);\\n'+\n                    '  } else if(typeof y === \"object\") x = numeric._biforeach2(x,y,dim(y),0,SV);\\n'+\n                    '  else '+codeeq('x','y')+'\\n'+\n                    '}\\nreturn x;\\n');\n            numeric[o] = numeric[i];\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]','x[i]'], codeeq('ret[i]','x[i]'),setup);\n            numeric[i+'eqS'] = numeric.pointwise2(['ret[i]','x'], codeeq('ret[i]','x'),setup);\n            numeric[i+'eq'] = Function(\n                    'var n = arguments.length, i, x = arguments[0], y;\\n'+\n                    'var V = numeric.'+i+'eqV, S = numeric.'+i+'eqS\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'for(i=1;i!==n;++i) { \\n'+\n                    '  y = arguments[i];\\n'+\n                    '  if(typeof y === \"object\") numeric._biforeach(x,y,s,0,V);\\n'+\n                    '  else numeric._biforeach(x,y,s,0,S);\\n'+\n                    '}\\nreturn x;\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns2.length;++i) {\n        o = numeric.mathfuns2[i];\n        delete numeric.ops2[o];\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        numeric.ops1[o] = o;\n    }\n    for(i in numeric.ops1) {\n        if(numeric.ops1.hasOwnProperty(i)) {\n            setup = '';\n            o = numeric.ops1[i];\n            if(numeric.myIndexOf.call(numeric.mathfuns,i)!==-1) {\n                if(Math.hasOwnProperty(o)) setup = 'var '+o+' = Math.'+o+';\\n';\n            }\n            numeric[i+'eqV'] = numeric.pointwise2(['ret[i]'],'ret[i] = '+o+'(ret[i]);',setup);\n            numeric[i+'eq'] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'x\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'eqV;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'numeric._foreach(x,s,0,V);\\n'+\n                    'return x;\\n');\n            numeric[i+'V'] = numeric.pointwise2(['x[i]'],'ret[i] = '+o+'(x[i]);',setup);\n            numeric[i] = Function('x',\n                    'if(typeof x !== \"object\") return '+o+'(x)\\n'+\n                    'var i;\\n'+\n                    'var V = numeric.'+i+'V;\\n'+\n                    'var s = numeric.dim(x);\\n'+\n                    'return numeric._foreach2(x,s,0,V);\\n');\n        }\n    }\n    for(i=0;i<numeric.mathfuns.length;++i) {\n        o = numeric.mathfuns[i];\n        delete numeric.ops1[o];\n    }\n    for(i in numeric.mapreducers) {\n        if(numeric.mapreducers.hasOwnProperty(i)) {\n            o = numeric.mapreducers[i];\n            numeric[i+'V'] = numeric.mapreduce2(o[0],o[1]);\n            numeric[i] = Function('x','s','k',\n                    o[1]+\n                    'if(typeof x !== \"object\") {'+\n                    '    xi = x;\\n'+\n                    o[0]+';\\n'+\n                    '    return accum;\\n'+\n                    '}'+\n                    'if(typeof s === \"undefined\") s = numeric.dim(x);\\n'+\n                    'if(typeof k === \"undefined\") k = 0;\\n'+\n                    'if(k === s.length-1) return numeric.'+i+'V(x);\\n'+\n                    'var xi;\\n'+\n                    'var n = x.length, i;\\n'+\n                    'for(i=n-1;i!==-1;--i) {\\n'+\n                    '   xi = arguments.callee(x[i]);\\n'+\n                    o[0]+';\\n'+\n                    '}\\n'+\n                    'return accum;\\n');\n        }\n    }\n}());\n\nnumeric.truncVV = numeric.pointwise(['x[i]','y[i]'],'ret[i] = round(x[i]/y[i])*y[i];','var round = Math.round;');\nnumeric.truncVS = numeric.pointwise(['x[i]','y'],'ret[i] = round(x[i]/y)*y;','var round = Math.round;');\nnumeric.truncSV = numeric.pointwise(['x','y[i]'],'ret[i] = round(x/y[i])*y[i];','var round = Math.round;');\nnumeric.trunc = function trunc(x,y) {\n    if(typeof x === \"object\") {\n        if(typeof y === \"object\") return numeric.truncVV(x,y);\n        return numeric.truncVS(x,y);\n    }\n    if (typeof y === \"object\") return numeric.truncSV(x,y);\n    return Math.round(x/y)*y;\n}\n\nnumeric.inv = function inv(x) {\n    var s = numeric.dim(x), abs = Math.abs, m = s[0], n = s[1];\n    var A = numeric.clone(x), Ai, Aj;\n    var I = numeric.identity(m), Ii, Ij;\n    var i,j,k,x;\n    for(j=0;j<n;++j) {\n        var i0 = -1;\n        var v0 = -1;\n        for(i=j;i!==m;++i) { k = abs(A[i][j]); if(k>v0) { i0 = i; v0 = k; } }\n        Aj = A[i0]; A[i0] = A[j]; A[j] = Aj;\n        Ij = I[i0]; I[i0] = I[j]; I[j] = Ij;\n        x = Aj[j];\n        for(k=j;k!==n;++k)    Aj[k] /= x; \n        for(k=n-1;k!==-1;--k) Ij[k] /= x;\n        for(i=m-1;i!==-1;--i) {\n            if(i!==j) {\n                Ai = A[i];\n                Ii = I[i];\n                x = Ai[j];\n                for(k=j+1;k!==n;++k)  Ai[k] -= Aj[k]*x;\n                for(k=n-1;k>0;--k) { Ii[k] -= Ij[k]*x; --k; Ii[k] -= Ij[k]*x; }\n                if(k===0) Ii[0] -= Ij[0]*x;\n            }\n        }\n    }\n    return I;\n}\n\nnumeric.det = function det(x) {\n    var s = numeric.dim(x);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: det() only works on square matrices'); }\n    var n = s[0], ret = 1,i,j,k,A = numeric.clone(x),Aj,Ai,alpha,temp,k1,k2,k3;\n    for(j=0;j<n-1;j++) {\n        k=j;\n        for(i=j+1;i<n;i++) { if(Math.abs(A[i][j]) > Math.abs(A[k][j])) { k = i; } }\n        if(k !== j) {\n            temp = A[k]; A[k] = A[j]; A[j] = temp;\n            ret *= -1;\n        }\n        Aj = A[j];\n        for(i=j+1;i<n;i++) {\n            Ai = A[i];\n            alpha = Ai[j]/Aj[j];\n            for(k=j+1;k<n-1;k+=2) {\n                k1 = k+1;\n                Ai[k] -= Aj[k]*alpha;\n                Ai[k1] -= Aj[k1]*alpha;\n            }\n            if(k!==n) { Ai[k] -= Aj[k]*alpha; }\n        }\n        if(Aj[j] === 0) { return 0; }\n        ret *= Aj[j];\n    }\n    return ret*A[j][j];\n}\n\nnumeric.transpose = function transpose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = A1[j]; Bj[i-1] = A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = A1[0]; Bj[i-1] = A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = A0[j];\n            --j;\n            ret[j][0] = A0[j];\n        }\n        if(j===0) { ret[0][0] = A0[0]; }\n    }\n    return ret;\n}\nnumeric.negtranspose = function negtranspose(x) {\n    var i,j,m = x.length,n = x[0].length, ret=Array(n),A0,A1,Bj;\n    for(j=0;j<n;j++) ret[j] = Array(m);\n    for(i=m-1;i>=1;i-=2) {\n        A1 = x[i];\n        A0 = x[i-1];\n        for(j=n-1;j>=1;--j) {\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n            --j;\n            Bj = ret[j]; Bj[i] = -A1[j]; Bj[i-1] = -A0[j];\n        }\n        if(j===0) {\n            Bj = ret[0]; Bj[i] = -A1[0]; Bj[i-1] = -A0[0];\n        }\n    }\n    if(i===0) {\n        A0 = x[0];\n        for(j=n-1;j>=1;--j) {\n            ret[j][0] = -A0[j];\n            --j;\n            ret[j][0] = -A0[j];\n        }\n        if(j===0) { ret[0][0] = -A0[0]; }\n    }\n    return ret;\n}\n\nnumeric._random = function _random(s,k) {\n    var i,n=s[k],ret=Array(n), rnd;\n    if(k === s.length-1) {\n        rnd = Math.random;\n        for(i=n-1;i>=1;i-=2) {\n            ret[i] = rnd();\n            ret[i-1] = rnd();\n        }\n        if(i===0) { ret[0] = rnd(); }\n        return ret;\n    }\n    for(i=n-1;i>=0;i--) ret[i] = _random(s,k+1);\n    return ret;\n}\nnumeric.random = function random(s) { return numeric._random(s,0); }\n\nnumeric.norm2 = function norm2(x) { return Math.sqrt(numeric.norm2Squared(x)); }\n\nnumeric.linspace = function linspace(a,b,n) {\n    if(typeof n === \"undefined\") n = Math.max(Math.round(b-a)+1,1);\n    if(n<2) { return n===1?[a]:[]; }\n    var i,ret = Array(n);\n    n--;\n    for(i=n;i>=0;i--) { ret[i] = (i*b+(n-i)*a)/n; }\n    return ret;\n}\n\nnumeric.getBlock = function getBlock(x,from,to) {\n    var s = numeric.dim(x);\n    function foo(x,k) {\n        var i,a = from[k], n = to[k]-a, ret = Array(n);\n        if(k === s.length-1) {\n            for(i=n;i>=0;i--) { ret[i] = x[i+a]; }\n            return ret;\n        }\n        for(i=n;i>=0;i--) { ret[i] = foo(x[i+a],k+1); }\n        return ret;\n    }\n    return foo(x,0);\n}\n\nnumeric.setBlock = function setBlock(x,from,to,B) {\n    var s = numeric.dim(x);\n    function foo(x,y,k) {\n        var i,a = from[k], n = to[k]-a;\n        if(k === s.length-1) { for(i=n;i>=0;i--) { x[i+a] = y[i]; } }\n        for(i=n;i>=0;i--) { foo(x[i+a],y[i],k+1); }\n    }\n    foo(x,B,0);\n    return x;\n}\n\nnumeric.getRange = function getRange(A,I,J) {\n    var m = I.length, n = J.length;\n    var i,j;\n    var B = Array(m), Bi, AI;\n    for(i=m-1;i!==-1;--i) {\n        B[i] = Array(n);\n        Bi = B[i];\n        AI = A[I[i]];\n        for(j=n-1;j!==-1;--j) Bi[j] = AI[J[j]];\n    }\n    return B;\n}\n\nnumeric.blockMatrix = function blockMatrix(X) {\n    var s = numeric.dim(X);\n    if(s.length<4) return numeric.blockMatrix([X]);\n    var m=s[0],n=s[1],M,N,i,j,Xij;\n    M = 0; N = 0;\n    for(i=0;i<m;++i) M+=X[i][0].length;\n    for(j=0;j<n;++j) N+=X[0][j][0].length;\n    var Z = Array(M);\n    for(i=0;i<M;++i) Z[i] = Array(N);\n    var I=0,J,ZI,k,l,Xijk;\n    for(i=0;i<m;++i) {\n        J=N;\n        for(j=n-1;j!==-1;--j) {\n            Xij = X[i][j];\n            J -= Xij[0].length;\n            for(k=Xij.length-1;k!==-1;--k) {\n                Xijk = Xij[k];\n                ZI = Z[I+k];\n                for(l = Xijk.length-1;l!==-1;--l) ZI[J+l] = Xijk[l];\n            }\n        }\n        I += X[i][0].length;\n    }\n    return Z;\n}\n\nnumeric.tensor = function tensor(x,y) {\n    if(typeof x === \"number\" || typeof y === \"number\") return numeric.mul(x,y);\n    var s1 = numeric.dim(x), s2 = numeric.dim(y);\n    if(s1.length !== 1 || s2.length !== 1) {\n        throw new Error('numeric: tensor product is only defined for vectors');\n    }\n    var m = s1[0], n = s2[0], A = Array(m), Ai, i,j,xi;\n    for(i=m-1;i>=0;i--) {\n        Ai = Array(n);\n        xi = x[i];\n        for(j=n-1;j>=3;--j) {\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n            --j;\n            Ai[j] = xi * y[j];\n        }\n        while(j>=0) { Ai[j] = xi * y[j]; --j; }\n        A[i] = Ai;\n    }\n    return A;\n}\n\n// 3. The Tensor type T\nnumeric.T = function T(x,y) { this.x = x; this.y = y; }\nnumeric.t = function t(x,y) { return new numeric.T(x,y); }\n\nnumeric.Tbinop = function Tbinop(rr,rc,cr,cc,setup) {\n    var io = numeric.indexOf;\n    if(typeof setup !== \"string\") {\n        var k;\n        setup = '';\n        for(k in numeric) {\n            if(numeric.hasOwnProperty(k) && (rr.indexOf(k)>=0 || rc.indexOf(k)>=0 || cr.indexOf(k)>=0 || cc.indexOf(k)>=0) && k.length>1) {\n                setup += 'var '+k+' = numeric.'+k+';\\n';\n            }\n        }\n    }\n    return Function(['y'],\n            'var x = this;\\n'+\n            'if(!(y instanceof numeric.T)) { y = new numeric.T(y); }\\n'+\n            setup+'\\n'+\n            'if(x.y) {'+\n            '  if(y.y) {'+\n            '    return new numeric.T('+cc+');\\n'+\n            '  }\\n'+\n            '  return new numeric.T('+cr+');\\n'+\n            '}\\n'+\n            'if(y.y) {\\n'+\n            '  return new numeric.T('+rc+');\\n'+\n            '}\\n'+\n            'return new numeric.T('+rr+');\\n'\n    );\n}\n\nnumeric.T.prototype.add = numeric.Tbinop(\n        'add(x.x,y.x)',\n        'add(x.x,y.x),y.y',\n        'add(x.x,y.x),x.y',\n        'add(x.x,y.x),add(x.y,y.y)');\nnumeric.T.prototype.sub = numeric.Tbinop(\n        'sub(x.x,y.x)',\n        'sub(x.x,y.x),neg(y.y)',\n        'sub(x.x,y.x),x.y',\n        'sub(x.x,y.x),sub(x.y,y.y)');\nnumeric.T.prototype.mul = numeric.Tbinop(\n        'mul(x.x,y.x)',\n        'mul(x.x,y.x),mul(x.x,y.y)',\n        'mul(x.x,y.x),mul(x.y,y.x)',\n        'sub(mul(x.x,y.x),mul(x.y,y.y)),add(mul(x.x,y.y),mul(x.y,y.x))');\n\nnumeric.T.prototype.reciprocal = function reciprocal() {\n    var mul = numeric.mul, div = numeric.div;\n    if(this.y) {\n        var d = numeric.add(mul(this.x,this.x),mul(this.y,this.y));\n        return new numeric.T(div(this.x,d),div(numeric.neg(this.y),d));\n    }\n    return new T(div(1,this.x));\n}\nnumeric.T.prototype.div = function div(y) {\n    if(!(y instanceof numeric.T)) y = new numeric.T(y);\n    if(y.y) { return this.mul(y.reciprocal()); }\n    var div = numeric.div;\n    if(this.y) { return new numeric.T(div(this.x,y.x),div(this.y,y.x)); }\n    return new numeric.T(div(this.x,y.x));\n}\nnumeric.T.prototype.dot = numeric.Tbinop(\n        'dot(x.x,y.x)',\n        'dot(x.x,y.x),dot(x.x,y.y)',\n        'dot(x.x,y.x),dot(x.y,y.x)',\n        'sub(dot(x.x,y.x),dot(x.y,y.y)),add(dot(x.x,y.y),dot(x.y,y.x))'\n        );\nnumeric.T.prototype.transpose = function transpose() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),t(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.T.prototype.transjugate = function transjugate() {\n    var t = numeric.transpose, x = this.x, y = this.y;\n    if(y) { return new numeric.T(t(x),numeric.negtranspose(y)); }\n    return new numeric.T(t(x));\n}\nnumeric.Tunop = function Tunop(r,c,s) {\n    if(typeof s !== \"string\") { s = ''; }\n    return Function(\n            'var x = this;\\n'+\n            s+'\\n'+\n            'if(x.y) {'+\n            '  '+c+';\\n'+\n            '}\\n'+\n            r+';\\n'\n    );\n}\n\nnumeric.T.prototype.exp = numeric.Tunop(\n        'return new numeric.T(ex)',\n        'return new numeric.T(mul(cos(x.y),ex),mul(sin(x.y),ex))',\n        'var ex = numeric.exp(x.x), cos = numeric.cos, sin = numeric.sin, mul = numeric.mul;');\nnumeric.T.prototype.conj = numeric.Tunop(\n        'return new numeric.T(x.x);',\n        'return new numeric.T(x.x,numeric.neg(x.y));');\nnumeric.T.prototype.neg = numeric.Tunop(\n        'return new numeric.T(neg(x.x));',\n        'return new numeric.T(neg(x.x),neg(x.y));',\n        'var neg = numeric.neg;');\nnumeric.T.prototype.sin = numeric.Tunop(\n        'return new numeric.T(numeric.sin(x.x))',\n        'return x.exp().sub(x.neg().exp()).div(new numeric.T(0,2));');\nnumeric.T.prototype.cos = numeric.Tunop(\n        'return new numeric.T(numeric.cos(x.x))',\n        'return x.exp().add(x.neg().exp()).div(2);');\nnumeric.T.prototype.abs = numeric.Tunop(\n        'return new numeric.T(numeric.abs(x.x));',\n        'return new numeric.T(numeric.sqrt(numeric.add(mul(x.x,x.x),mul(x.y,x.y))));',\n        'var mul = numeric.mul;');\nnumeric.T.prototype.log = numeric.Tunop(\n        'return new numeric.T(numeric.log(x.x));',\n        'var theta = new numeric.T(numeric.atan2(x.y,x.x)), r = x.abs();\\n'+\n        'return new numeric.T(numeric.log(r.x),theta.x);');\nnumeric.T.prototype.norm2 = numeric.Tunop(\n        'return numeric.norm2(x.x);',\n        'var f = numeric.norm2Squared;\\n'+\n        'return Math.sqrt(f(x.x)+f(x.y));');\nnumeric.T.prototype.inv = function inv() {\n    var A = this;\n    if(typeof A.y === \"undefined\") { return new numeric.T(numeric.inv(A.x)); }\n    var n = A.x.length, i, j, k;\n    var Rx = numeric.identity(n),Ry = numeric.rep([n,n],0);\n    var Ax = numeric.clone(A.x), Ay = numeric.clone(A.y);\n    var Aix, Aiy, Ajx, Ajy, Rix, Riy, Rjx, Rjy;\n    var i,j,k,d,d1,ax,ay,bx,by,temp;\n    for(i=0;i<n;i++) {\n        ax = Ax[i][i]; ay = Ay[i][i];\n        d = ax*ax+ay*ay;\n        k = i;\n        for(j=i+1;j<n;j++) {\n            ax = Ax[j][i]; ay = Ay[j][i];\n            d1 = ax*ax+ay*ay;\n            if(d1 > d) { k=j; d = d1; }\n        }\n        if(k!==i) {\n            temp = Ax[i]; Ax[i] = Ax[k]; Ax[k] = temp;\n            temp = Ay[i]; Ay[i] = Ay[k]; Ay[k] = temp;\n            temp = Rx[i]; Rx[i] = Rx[k]; Rx[k] = temp;\n            temp = Ry[i]; Ry[i] = Ry[k]; Ry[k] = temp;\n        }\n        Aix = Ax[i]; Aiy = Ay[i];\n        Rix = Rx[i]; Riy = Ry[i];\n        ax = Aix[i]; ay = Aiy[i];\n        for(j=i+1;j<n;j++) {\n            bx = Aix[j]; by = Aiy[j];\n            Aix[j] = (bx*ax+by*ay)/d;\n            Aiy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=0;j<n;j++) {\n            bx = Rix[j]; by = Riy[j];\n            Rix[j] = (bx*ax+by*ay)/d;\n            Riy[j] = (by*ax-bx*ay)/d;\n        }\n        for(j=i+1;j<n;j++) {\n            Ajx = Ax[j]; Ajy = Ay[j];\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ajx[i]; ay = Ajy[i];\n            for(k=i+1;k<n;k++) {\n                bx = Aix[k]; by = Aiy[k];\n                Ajx[k] -= bx*ax-by*ay;\n                Ajy[k] -= by*ax+bx*ay;\n            }\n            for(k=0;k<n;k++) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= bx*ax-by*ay;\n                Rjy[k] -= by*ax+bx*ay;\n            }\n        }\n    }\n    for(i=n-1;i>0;i--) {\n        Rix = Rx[i]; Riy = Ry[i];\n        for(j=i-1;j>=0;j--) {\n            Rjx = Rx[j]; Rjy = Ry[j];\n            ax = Ax[j][i]; ay = Ay[j][i];\n            for(k=n-1;k>=0;k--) {\n                bx = Rix[k]; by = Riy[k];\n                Rjx[k] -= ax*bx - ay*by;\n                Rjy[k] -= ax*by + ay*bx;\n            }\n        }\n    }\n    return new numeric.T(Rx,Ry);\n}\nnumeric.T.prototype.get = function get(i) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length;\n    if(y) {\n        while(k<n) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        return new numeric.T(x,y);\n    }\n    while(k<n) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    return new numeric.T(x);\n}\nnumeric.T.prototype.set = function set(i,v) {\n    var x = this.x, y = this.y, k = 0, ik, n = i.length, vx = v.x, vy = v.y;\n    if(n===0) {\n        if(vy) { this.y = vy; }\n        else if(y) { this.y = undefined; }\n        this.x = x;\n        return this;\n    }\n    if(vy) {\n        if(y) { /* ok */ }\n        else {\n            y = numeric.rep(numeric.dim(x),0);\n            this.y = y;\n        }\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        y[ik] = vy;\n        return this;\n    }\n    if(y) {\n        while(k<n-1) {\n            ik = i[k];\n            x = x[ik];\n            y = y[ik];\n            k++;\n        }\n        ik = i[k];\n        x[ik] = vx;\n        if(vx instanceof Array) y[ik] = numeric.rep(numeric.dim(vx),0);\n        else y[ik] = 0;\n        return this;\n    }\n    while(k<n-1) {\n        ik = i[k];\n        x = x[ik];\n        k++;\n    }\n    ik = i[k];\n    x[ik] = vx;\n    return this;\n}\nnumeric.T.prototype.getRows = function getRows(i0,i1) {\n    var n = i1-i0+1, j;\n    var rx = Array(n), ry, x = this.x, y = this.y;\n    for(j=i0;j<=i1;j++) { rx[j-i0] = x[j]; }\n    if(y) {\n        ry = Array(n);\n        for(j=i0;j<=i1;j++) { ry[j-i0] = y[j]; }\n        return new numeric.T(rx,ry);\n    }\n    return new numeric.T(rx);\n}\nnumeric.T.prototype.setRows = function setRows(i0,i1,A) {\n    var j;\n    var rx = this.x, ry = this.y, x = A.x, y = A.y;\n    for(j=i0;j<=i1;j++) { rx[j] = x[j-i0]; }\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        for(j=i0;j<=i1;j++) { ry[j] = y[j-i0]; }\n    } else if(ry) {\n        for(j=i0;j<=i1;j++) { ry[j] = numeric.rep([x[j-i0].length],0); }\n    }\n    return this;\n}\nnumeric.T.prototype.getRow = function getRow(k) {\n    var x = this.x, y = this.y;\n    if(y) { return new numeric.T(x[k],y[k]); }\n    return new numeric.T(x[k]);\n}\nnumeric.T.prototype.setRow = function setRow(i,v) {\n    var rx = this.x, ry = this.y, x = v.x, y = v.y;\n    rx[i] = x;\n    if(y) {\n        if(!ry) { ry = numeric.rep(numeric.dim(rx),0); this.y = ry; }\n        ry[i] = y;\n    } else if(ry) {\n        ry = numeric.rep([x.length],0);\n    }\n    return this;\n}\n\nnumeric.T.prototype.getBlock = function getBlock(from,to) {\n    var x = this.x, y = this.y, b = numeric.getBlock;\n    if(y) { return new numeric.T(b(x,from,to),b(y,from,to)); }\n    return new numeric.T(b(x,from,to));\n}\nnumeric.T.prototype.setBlock = function setBlock(from,to,A) {\n    if(!(A instanceof numeric.T)) A = new numeric.T(A);\n    var x = this.x, y = this.y, b = numeric.setBlock, Ax = A.x, Ay = A.y;\n    if(Ay) {\n        if(!y) { this.y = numeric.rep(numeric.dim(this),0); y = this.y; }\n        b(x,from,to,Ax);\n        b(y,from,to,Ay);\n        return this;\n    }\n    b(x,from,to,Ax);\n    if(y) b(y,from,to,numeric.rep(numeric.dim(Ax),0));\n}\nnumeric.T.rep = function rep(s,v) {\n    var T = numeric.T;\n    if(!(v instanceof T)) v = new T(v);\n    var x = v.x, y = v.y, r = numeric.rep;\n    if(y) return new T(r(s,x),r(s,y));\n    return new T(r(s,x));\n}\nnumeric.T.diag = function diag(d) {\n    if(!(d instanceof numeric.T)) d = new numeric.T(d);\n    var x = d.x, y = d.y, diag = numeric.diag;\n    if(y) return new numeric.T(diag(x),diag(y));\n    return new numeric.T(diag(x));\n}\nnumeric.T.eig = function eig() {\n    if(this.y) { throw new Error('eig: not implemented for complex matrices.'); }\n    return numeric.eig(this.x);\n}\nnumeric.T.identity = function identity(n) { return new numeric.T(numeric.identity(n)); }\nnumeric.T.prototype.getDiag = function getDiag() {\n    var n = numeric;\n    var x = this.x, y = this.y;\n    if(y) { return new n.T(n.getDiag(x),n.getDiag(y)); }\n    return new n.T(n.getDiag(x));\n}\n\n// 4. Eigenvalues of real matrices\n\nnumeric.house = function house(x) {\n    var v = numeric.clone(x);\n    var s = x[0] >= 0 ? 1 : -1;\n    var alpha = s*numeric.norm2(x);\n    v[0] += alpha;\n    var foo = numeric.norm2(v);\n    if(foo === 0) { /* this should not happen */ throw new Error('eig: internal error'); }\n    return numeric.div(v,foo);\n}\n\nnumeric.toUpperHessenberg = function toUpperHessenberg(me) {\n    var s = numeric.dim(me);\n    if(s.length !== 2 || s[0] !== s[1]) { throw new Error('numeric: toUpperHessenberg() only works on square matrices'); }\n    var m = s[0], i,j,k,x,v,A = numeric.clone(me),B,C,Ai,Ci,Q = numeric.identity(m),Qi;\n    for(j=0;j<m-2;j++) {\n        x = Array(m-j-1);\n        for(i=j+1;i<m;i++) { x[i-j-1] = A[i][j]; }\n        if(numeric.norm2(x)>0) {\n            v = numeric.house(x);\n            B = numeric.getBlock(A,[j+1,j],[m-1,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Ai = A[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Ai[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(A,[0,j+1],[m-1,m-1]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Ai = A[i]; Ci = C[i]; for(k=j+1;k<m;k++) Ai[k] -= 2*Ci[k-j-1]; }\n            B = Array(m-j-1);\n            for(i=j+1;i<m;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<m;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    return {H:A, Q:Q};\n}\n\nnumeric.epsilon = 2.220446049250313e-16;\n\nnumeric.QRFrancis = function(H,maxiter) {\n    if(typeof maxiter === \"undefined\") { maxiter = 10000; }\n    H = numeric.clone(H);\n    var H0 = numeric.clone(H);\n    var s = numeric.dim(H),m=s[0],x,v,a,b,c,d,det,tr, Hloc, Q = numeric.identity(m), Qi, Hi, B, C, Ci,i,j,k,iter;\n    if(m<3) { return {Q:Q, B:[ [0,m-1] ]}; }\n    var epsilon = numeric.epsilon;\n    for(iter=0;iter<maxiter;iter++) {\n        for(j=0;j<m-1;j++) {\n            if(Math.abs(H[j+1][j]) < epsilon*(Math.abs(H[j][j])+Math.abs(H[j+1][j+1]))) {\n                var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[j,j]),maxiter);\n                var QH2 = numeric.QRFrancis(numeric.getBlock(H,[j+1,j+1],[m-1,m-1]),maxiter);\n                B = Array(j+1);\n                for(i=0;i<=j;i++) { B[i] = Q[i]; }\n                C = numeric.dot(QH1.Q,B);\n                for(i=0;i<=j;i++) { Q[i] = C[i]; }\n                B = Array(m-j-1);\n                for(i=j+1;i<m;i++) { B[i-j-1] = Q[i]; }\n                C = numeric.dot(QH2.Q,B);\n                for(i=j+1;i<m;i++) { Q[i] = C[i-j-1]; }\n                return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,j+1))};\n            }\n        }\n        a = H[m-2][m-2]; b = H[m-2][m-1];\n        c = H[m-1][m-2]; d = H[m-1][m-1];\n        tr = a+d;\n        det = (a*d-b*c);\n        Hloc = numeric.getBlock(H, [0,0], [2,2]);\n        if(tr*tr>=4*det) {\n            var s1,s2;\n            s1 = 0.5*(tr+Math.sqrt(tr*tr-4*det));\n            s2 = 0.5*(tr-Math.sqrt(tr*tr-4*det));\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,s1+s2)),\n                               numeric.diag(numeric.rep([3],s1*s2)));\n        } else {\n            Hloc = numeric.add(numeric.sub(numeric.dot(Hloc,Hloc),\n                                           numeric.mul(Hloc,tr)),\n                               numeric.diag(numeric.rep([3],det)));\n        }\n        x = [Hloc[0][0],Hloc[1][0],Hloc[2][0]];\n        v = numeric.house(x);\n        B = [H[0],H[1],H[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<m;k++) Hi[k] -= 2*Ci[k]; }\n        B = numeric.getBlock(H, [0,0],[m-1,2]);\n        C = numeric.tensor(numeric.dot(B,v),v);\n        for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=0;k<3;k++) Hi[k] -= 2*Ci[k]; }\n        B = [Q[0],Q[1],Q[2]];\n        C = numeric.tensor(v,numeric.dot(v,B));\n        for(i=0;i<3;i++) { Qi = Q[i]; Ci = C[i]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        var J;\n        for(j=0;j<m-2;j++) {\n            for(k=j;k<=j+1;k++) {\n                if(Math.abs(H[k+1][k]) < epsilon*(Math.abs(H[k][k])+Math.abs(H[k+1][k+1]))) {\n                    var QH1 = numeric.QRFrancis(numeric.getBlock(H,[0,0],[k,k]),maxiter);\n                    var QH2 = numeric.QRFrancis(numeric.getBlock(H,[k+1,k+1],[m-1,m-1]),maxiter);\n                    B = Array(k+1);\n                    for(i=0;i<=k;i++) { B[i] = Q[i]; }\n                    C = numeric.dot(QH1.Q,B);\n                    for(i=0;i<=k;i++) { Q[i] = C[i]; }\n                    B = Array(m-k-1);\n                    for(i=k+1;i<m;i++) { B[i-k-1] = Q[i]; }\n                    C = numeric.dot(QH2.Q,B);\n                    for(i=k+1;i<m;i++) { Q[i] = C[i-k-1]; }\n                    return {Q:Q,B:QH1.B.concat(numeric.add(QH2.B,k+1))};\n                }\n            }\n            J = Math.min(m-1,j+3);\n            x = Array(J-j);\n            for(i=j+1;i<=J;i++) { x[i-j-1] = H[i][j]; }\n            v = numeric.house(x);\n            B = numeric.getBlock(H, [j+1,j],[J,m-1]);\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Hi = H[i]; Ci = C[i-j-1]; for(k=j;k<m;k++) Hi[k] -= 2*Ci[k-j]; }\n            B = numeric.getBlock(H, [0,j+1],[m-1,J]);\n            C = numeric.tensor(numeric.dot(B,v),v);\n            for(i=0;i<m;i++) { Hi = H[i]; Ci = C[i]; for(k=j+1;k<=J;k++) Hi[k] -= 2*Ci[k-j-1]; }\n            B = Array(J-j);\n            for(i=j+1;i<=J;i++) B[i-j-1] = Q[i];\n            C = numeric.tensor(v,numeric.dot(v,B));\n            for(i=j+1;i<=J;i++) { Qi = Q[i]; Ci = C[i-j-1]; for(k=0;k<m;k++) Qi[k] -= 2*Ci[k]; }\n        }\n    }\n    throw new Error('numeric: eigenvalue iteration does not converge -- increase maxiter?');\n}\n\nnumeric.eig = function eig(A,maxiter) {\n    var QH = numeric.toUpperHessenberg(A);\n    var QB = numeric.QRFrancis(QH.H,maxiter);\n    var T = numeric.T;\n    var n = A.length,i,k,flag = false,B = QB.B,H = numeric.dot(QB.Q,numeric.dot(QH.H,numeric.transpose(QB.Q)));\n    var Q = new T(numeric.dot(QB.Q,QH.Q)),Q0;\n    var m = B.length,j;\n    var a,b,c,d,p1,p2,disc,x,y,p,q,n1,n2;\n    var sqrt = Math.sqrt;\n    for(k=0;k<m;k++) {\n        i = B[k][0];\n        if(i === B[k][1]) {\n            // nothing\n        } else {\n            j = i+1;\n            a = H[i][i];\n            b = H[i][j];\n            c = H[j][i];\n            d = H[j][j];\n            if(b === 0 && c === 0) continue;\n            p1 = -a-d;\n            p2 = a*d-b*c;\n            disc = p1*p1-4*p2;\n            if(disc>=0) {\n                if(p1<0) x = -0.5*(p1-sqrt(disc));\n                else     x = -0.5*(p1+sqrt(disc));\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                } else {\n                    n2 = sqrt(n2);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                }\n                Q0 = new T([[q,-p],[p,q]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            } else {\n                x = -0.5*p1;\n                y = 0.5*sqrt(-disc);\n                n1 = (a-x)*(a-x)+b*b;\n                n2 = c*c+(d-x)*(d-x);\n                if(n1>n2) {\n                    n1 = sqrt(n1+y*y);\n                    p = (a-x)/n1;\n                    q = b/n1;\n                    x = 0;\n                    y /= n1;\n                } else {\n                    n2 = sqrt(n2+y*y);\n                    p = c/n2;\n                    q = (d-x)/n2;\n                    x = y/n2;\n                    y = 0;\n                }\n                Q0 = new T([[q,-p],[p,q]],[[x,y],[y,-x]]);\n                Q.setRows(i,j,Q0.dot(Q.getRows(i,j)));\n            }\n        }\n    }\n    var R = Q.dot(A).dot(Q.transjugate()), n = A.length, E = numeric.T.identity(n);\n    for(j=0;j<n;j++) {\n        if(j>0) {\n            for(k=j-1;k>=0;k--) {\n                var Rk = R.get([k,k]), Rj = R.get([j,j]);\n                if(numeric.neq(Rk.x,Rj.x) || numeric.neq(Rk.y,Rj.y)) {\n                    x = R.getRow(k).getBlock([k],[j-1]);\n                    y = E.getRow(j).getBlock([k],[j-1]);\n                    E.set([j,k],(R.get([k,j]).neg().sub(x.dot(y))).div(Rk.sub(Rj)));\n                } else {\n                    E.setRow(j,E.getRow(k));\n                    continue;\n                }\n            }\n        }\n    }\n    for(j=0;j<n;j++) {\n        x = E.getRow(j);\n        E.setRow(j,x.div(x.norm2()));\n    }\n    E = E.transpose();\n    E = Q.transjugate().dot(E);\n    return { lambda:R.getDiag(), E:E };\n};\n\n// 5. Compressed Column Storage matrices\nnumeric.ccsSparse = function ccsSparse(A) {\n    var m = A.length,n,foo, i,j, counts = [];\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            j = parseInt(j);\n            while(j>=counts.length) counts[counts.length] = 0;\n            if(foo[j]!==0) counts[j]++;\n        }\n    }\n    var n = counts.length;\n    var Ai = Array(n+1);\n    Ai[0] = 0;\n    for(i=0;i<n;++i) Ai[i+1] = Ai[i] + counts[i];\n    var Aj = Array(Ai[n]), Av = Array(Ai[n]);\n    for(i=m-1;i!==-1;--i) {\n        foo = A[i];\n        for(j in foo) {\n            if(foo[j]!==0) {\n                counts[j]--;\n                Aj[Ai[j]+counts[j]] = i;\n                Av[Ai[j]+counts[j]] = foo[j];\n            }\n        }\n    }\n    return [Ai,Aj,Av];\n}\nnumeric.ccsFull = function ccsFull(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2], s = numeric.ccsDim(A), m = s[0], n = s[1], i,j,j0,j1,k;\n    var B = numeric.rep([m,n],0);\n    for(i=0;i<n;i++) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j<j1;++j) { B[Aj[j]][i] = Av[j]; }\n    }\n    return B;\n}\nnumeric.ccsTSolve = function ccsTSolve(A,b,x,bj,xj) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, max = Math.max,n=0;\n    if(typeof bj === \"undefined\") x = numeric.rep([m],0);\n    if(typeof bj === \"undefined\") bj = numeric.linspace(0,x.length-1);\n    if(typeof xj === \"undefined\") xj = [];\n    function dfs(j) {\n        var k;\n        if(x[j] !== 0) return;\n        x[j] = 1;\n        for(k=Ai[j];k<Ai[j+1];++k) dfs(Aj[k]);\n        xj[n] = j;\n        ++n;\n    }\n    var i,j,j0,j1,k,l,l0,l1,a;\n    for(i=bj.length-1;i!==-1;--i) { dfs(bj[i]); }\n    xj.length = n;\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=bj.length-1;i!==-1;--i) { j = bj[i]; x[j] = b[j]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = max(Ai[j+1],j0);\n        for(k=j0;k!==j1;++k) { if(Aj[k] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k!==j1;++k) {\n            l = Aj[k];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsDFS = function ccsDFS(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[J];\n    k1[0] = k11 = Ai[J+1];\n    while(1) {\n        if(km >= k11) {\n            xj[n] = j[m];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Pinv[Aj[km]];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve = function ccsLPSolve(A,B,x,xj,I,Pinv,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Pinv[Bj[i]],Ai,Aj,x,xj,Pinv); }\n    for(i=xj.length-1;i!==-1;--i) { x[xj[i]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Pinv[Bj[i]]; x[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Pinv[Aj[k]] === j) { x[j] /= Av[k]; break; } }\n        a = x[j];\n        for(k=j0;k<j1;++k) {\n            l = Pinv[Aj[k]];\n            if(l !== j) x[l] -= a*Av[k];\n        }\n    }\n    return x;\n}\nnumeric.ccsLUP1 = function ccsLUP1(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var x = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,x,xj,i,Pinv,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(x[k]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(x[i])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n            a = x[i]; x[i] = x[e]; x[e] = a;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = x[i];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = x[k];\n            xj[j] = 0;\n            x[k] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsDFS0 = function ccsDFS0(n) {\n    this.k = Array(n);\n    this.k1 = Array(n);\n    this.j = Array(n);\n}\nnumeric.ccsDFS0.prototype.dfs = function dfs(J,Ai,Aj,x,xj,Pinv,P) {\n    var m = 0,foo,n=xj.length;\n    var k = this.k, k1 = this.k1, j = this.j,km,k11;\n    if(x[J]!==0) return;\n    x[J] = 1;\n    j[0] = J;\n    k[0] = km = Ai[Pinv[J]];\n    k1[0] = k11 = Ai[Pinv[J]+1];\n    while(1) {\n        if(isNaN(km)) throw new Error(\"Ow!\");\n        if(km >= k11) {\n            xj[n] = Pinv[j[m]];\n            if(m===0) return;\n            ++n;\n            --m;\n            km = k[m];\n            k11 = k1[m];\n        } else {\n            foo = Aj[km];\n            if(x[foo] === 0) {\n                x[foo] = 1;\n                k[m] = km;\n                ++m;\n                j[m] = foo;\n                foo = Pinv[foo];\n                km = Ai[foo];\n                k1[m] = k11 = Ai[foo+1];\n            } else ++km;\n        }\n    }\n}\nnumeric.ccsLPSolve0 = function ccsLPSolve0(A,B,y,xj,I,Pinv,P,dfs) {\n    var Ai = A[0], Aj = A[1], Av = A[2],m = Ai.length-1, n=0;\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    \n    var i,i0,i1,j,J,j0,j1,k,l,l0,l1,a;\n    i0 = Bi[I];\n    i1 = Bi[I+1];\n    xj.length = 0;\n    for(i=i0;i<i1;++i) { dfs.dfs(Bj[i],Ai,Aj,y,xj,Pinv,P); }\n    for(i=xj.length-1;i!==-1;--i) { j = xj[i]; y[P[j]] = 0; }\n    for(i=i0;i!==i1;++i) { j = Bj[i]; y[j] = Bv[i]; }\n    for(i=xj.length-1;i!==-1;--i) {\n        j = xj[i];\n        l = P[j];\n        j0 = Ai[j];\n        j1 = Ai[j+1];\n        for(k=j0;k<j1;++k) { if(Aj[k] === l) { y[l] /= Av[k]; break; } }\n        a = y[l];\n        for(k=j0;k<j1;++k) y[Aj[k]] -= a*Av[k];\n        y[l] = a;\n    }\n}\nnumeric.ccsLUP0 = function ccsLUP0(A,threshold) {\n    var m = A[0].length-1;\n    var L = [numeric.rep([m+1],0),[],[]], U = [numeric.rep([m+1], 0),[],[]];\n    var Li = L[0], Lj = L[1], Lv = L[2], Ui = U[0], Uj = U[1], Uv = U[2];\n    var y = numeric.rep([m],0), xj = numeric.rep([m],0);\n    var i,j,k,j0,j1,a,e,c,d,K;\n    var sol = numeric.ccsLPSolve0, max = Math.max, abs = Math.abs;\n    var P = numeric.linspace(0,m-1),Pinv = numeric.linspace(0,m-1);\n    var dfs = new numeric.ccsDFS0(m);\n    if(typeof threshold === \"undefined\") { threshold = 1; }\n    for(i=0;i<m;++i) {\n        sol(L,A,y,xj,i,Pinv,P,dfs);\n        a = -1;\n        e = -1;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            if(k <= i) continue;\n            c = abs(y[P[k]]);\n            if(c > a) { e = k; a = c; }\n        }\n        if(abs(y[P[i]])<threshold*a) {\n            j = P[i];\n            a = P[e];\n            P[i] = a; Pinv[a] = i;\n            P[e] = j; Pinv[j] = e;\n        }\n        a = Li[i];\n        e = Ui[i];\n        d = y[P[i]];\n        Lj[a] = P[i];\n        Lv[a] = 1;\n        ++a;\n        for(j=xj.length-1;j!==-1;--j) {\n            k = xj[j];\n            c = y[P[k]];\n            xj[j] = 0;\n            y[P[k]] = 0;\n            if(k<=i) { Uj[e] = k; Uv[e] = c;   ++e; }\n            else     { Lj[a] = P[k]; Lv[a] = c/d; ++a; }\n        }\n        Li[i+1] = a;\n        Ui[i+1] = e;\n    }\n    for(j=Lj.length-1;j!==-1;--j) { Lj[j] = Pinv[Lj[j]]; }\n    return {L:L, U:U, P:P, Pinv:Pinv};\n}\nnumeric.ccsLUP = numeric.ccsLUP0;\n\nnumeric.ccsDim = function ccsDim(A) { return [numeric.sup(A[1])+1,A[0].length-1]; }\nnumeric.ccsGetBlock = function ccsGetBlock(A,i,j) {\n    var s = numeric.ccsDim(A),m=s[0],n=s[1];\n    if(typeof i === \"undefined\") { i = numeric.linspace(0,m-1); }\n    else if(typeof i === \"number\") { i = [i]; }\n    if(typeof j === \"undefined\") { j = numeric.linspace(0,n-1); }\n    else if(typeof j === \"number\") { j = [j]; }\n    var p,p0,p1,P = i.length,q,Q = j.length,r,jq,ip;\n    var Bi = numeric.rep([n],0), Bj=[], Bv=[], B = [Bi,Bj,Bv];\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var x = numeric.rep([m],0),count=0,flags = numeric.rep([m],0);\n    for(q=0;q<Q;++q) {\n        jq = j[q];\n        var q0 = Ai[jq];\n        var q1 = Ai[jq+1];\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 1;\n            x[r] = Av[p];\n        }\n        for(p=0;p<P;++p) {\n            ip = i[p];\n            if(flags[ip]) {\n                Bj[count] = p;\n                Bv[count] = x[i[p]];\n                ++count;\n            }\n        }\n        for(p=q0;p<q1;++p) {\n            r = Aj[p];\n            flags[r] = 0;\n        }\n        Bi[q+1] = count;\n    }\n    return B;\n}\n\nnumeric.ccsDot = function ccsDot(A,B) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var Bi = B[0], Bj = B[1], Bv = B[2];\n    var sA = numeric.ccsDim(A), sB = numeric.ccsDim(B);\n    var m = sA[0], n = sA[1], o = sB[1];\n    var x = numeric.rep([m],0), flags = numeric.rep([m],0), xj = Array(m);\n    var Ci = numeric.rep([o],0), Cj = [], Cv = [], C = [Ci,Cj,Cv];\n    var i,j,k,j0,j1,i0,i1,l,p,a,b;\n    for(k=0;k!==o;++k) {\n        j0 = Bi[k];\n        j1 = Bi[k+1];\n        p = 0;\n        for(j=j0;j<j1;++j) {\n            a = Bj[j];\n            b = Bv[j];\n            i0 = Ai[a];\n            i1 = Ai[a+1];\n            for(i=i0;i<i1;++i) {\n                l = Aj[i];\n                if(flags[l]===0) {\n                    xj[p] = l;\n                    flags[l] = 1;\n                    p = p+1;\n                }\n                x[l] = x[l] + Av[i]*b;\n            }\n        }\n        j0 = Ci[k];\n        j1 = j0+p;\n        Ci[k+1] = j1;\n        for(j=p-1;j!==-1;--j) {\n            b = j0+j;\n            i = xj[j];\n            Cj[b] = i;\n            Cv[b] = x[i];\n            flags[i] = 0;\n            x[i] = 0;\n        }\n        Ci[k+1] = Ci[k]+p;\n    }\n    return C;\n}\n\nnumeric.ccsLUPSolve = function ccsLUPSolve(LUP,B) {\n    var L = LUP.L, U = LUP.U, P = LUP.P;\n    var Bi = B[0];\n    var flag = false;\n    if(typeof Bi !== \"object\") { B = [[0,B.length],numeric.linspace(0,B.length-1),B]; Bi = B[0]; flag = true; }\n    var Bj = B[1], Bv = B[2];\n    var n = L[0].length-1, m = Bi.length-1;\n    var x = numeric.rep([n],0), xj = Array(n);\n    var b = numeric.rep([n],0), bj = Array(n);\n    var Xi = numeric.rep([m+1],0), Xj = [], Xv = [];\n    var sol = numeric.ccsTSolve;\n    var i,j,j0,j1,k,J,N=0;\n    for(i=0;i<m;++i) {\n        k = 0;\n        j0 = Bi[i];\n        j1 = Bi[i+1];\n        for(j=j0;j<j1;++j) { \n            J = LUP.Pinv[Bj[j]];\n            bj[k] = J;\n            b[J] = Bv[j];\n            ++k;\n        }\n        bj.length = k;\n        sol(L,b,x,bj,xj);\n        for(j=bj.length-1;j!==-1;--j) b[bj[j]] = 0;\n        sol(U,x,b,xj,bj);\n        if(flag) return b;\n        for(j=xj.length-1;j!==-1;--j) x[xj[j]] = 0;\n        for(j=bj.length-1;j!==-1;--j) {\n            J = bj[j];\n            Xj[N] = J;\n            Xv[N] = b[J];\n            b[J] = 0;\n            ++N;\n        }\n        Xi[i+1] = N;\n    }\n    return [Xi,Xj,Xv];\n}\n\nnumeric.ccsbinop = function ccsbinop(body,setup) {\n    if(typeof setup === \"undefined\") setup='';\n    return Function('X','Y',\n            'var Xi = X[0], Xj = X[1], Xv = X[2];\\n'+\n            'var Yi = Y[0], Yj = Y[1], Yv = Y[2];\\n'+\n            'var n = Xi.length-1,m = Math.max(numeric.sup(Xj),numeric.sup(Yj))+1;\\n'+\n            'var Zi = numeric.rep([n+1],0), Zj = [], Zv = [];\\n'+\n            'var x = numeric.rep([m],0),y = numeric.rep([m],0);\\n'+\n            'var xk,yk,zk;\\n'+\n            'var i,j,j0,j1,k,p=0;\\n'+\n            setup+\n            'for(i=0;i<n;++i) {\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Xj[j];\\n'+\n            '    x[k] = 1;\\n'+\n            '    Zj[p] = k;\\n'+\n            '    ++p;\\n'+\n            '  }\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Yj[j];\\n'+\n            '    y[k] = Yv[j];\\n'+\n            '    if(x[k] === 0) {\\n'+\n            '      Zj[p] = k;\\n'+\n            '      ++p;\\n'+\n            '    }\\n'+\n            '  }\\n'+\n            '  Zi[i+1] = p;\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = Xv[j];\\n'+\n            '  j0 = Zi[i]; j1 = Zi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) {\\n'+\n            '    k = Zj[j];\\n'+\n            '    xk = x[k];\\n'+\n            '    yk = y[k];\\n'+\n            body+'\\n'+\n            '    Zv[j] = zk;\\n'+\n            '  }\\n'+\n            '  j0 = Xi[i]; j1 = Xi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) x[Xj[j]] = 0;\\n'+\n            '  j0 = Yi[i]; j1 = Yi[i+1];\\n'+\n            '  for(j=j0;j!==j1;++j) y[Yj[j]] = 0;\\n'+\n            '}\\n'+\n            'return [Zi,Zj,Zv];'\n            );\n};\n\n(function() {\n    var k,A,B,C;\n    for(k in numeric.ops2) {\n        if(isFinite(eval('1'+numeric.ops2[k]+'0'))) A = '[Y[0],Y[1],numeric.'+k+'(X,Y[2])]';\n        else A = 'NaN';\n        if(isFinite(eval('0'+numeric.ops2[k]+'1'))) B = '[X[0],X[1],numeric.'+k+'(X[2],Y)]';\n        else B = 'NaN';\n        if(isFinite(eval('1'+numeric.ops2[k]+'0')) && isFinite(eval('0'+numeric.ops2[k]+'1'))) C = 'numeric.ccs'+k+'MM(X,Y)';\n        else C = 'NaN';\n        numeric['ccs'+k+'MM'] = numeric.ccsbinop('zk = xk '+numeric.ops2[k]+'yk;');\n        numeric['ccs'+k] = Function('X','Y',\n                'if(typeof X === \"number\") return '+A+';\\n'+\n                'if(typeof Y === \"number\") return '+B+';\\n'+\n                'return '+C+';\\n'\n                );\n    }\n}());\n\nnumeric.ccsScatter = function ccsScatter(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = numeric.sup(Aj)+1,m=Ai.length;\n    var Ri = numeric.rep([n],0),Rj=Array(m), Rv = Array(m);\n    var counts = numeric.rep([n],0),i;\n    for(i=0;i<m;++i) counts[Aj[i]]++;\n    for(i=0;i<n;++i) Ri[i+1] = Ri[i] + counts[i];\n    var ptr = Ri.slice(0),k,Aii;\n    for(i=0;i<m;++i) {\n        Aii = Aj[i];\n        k = ptr[Aii];\n        Rj[k] = Ai[i];\n        Rv[k] = Av[i];\n        ptr[Aii]=ptr[Aii]+1;\n    }\n    return [Ri,Rj,Rv];\n}\n\nnumeric.ccsGather = function ccsGather(A) {\n    var Ai = A[0], Aj = A[1], Av = A[2];\n    var n = Ai.length-1,m = Aj.length;\n    var Ri = Array(m), Rj = Array(m), Rv = Array(m);\n    var i,j,j0,j1,p;\n    p=0;\n    for(i=0;i<n;++i) {\n        j0 = Ai[i];\n        j1 = Ai[i+1];\n        for(j=j0;j!==j1;++j) {\n            Rj[p] = i;\n            Ri[p] = Aj[j];\n            Rv[p] = Av[j];\n            ++p;\n        }\n    }\n    return [Ri,Rj,Rv];\n}\n\n// The following sparse linear algebra routines are deprecated.\n\nnumeric.sdim = function dim(A,ret,k) {\n    if(typeof ret === \"undefined\") { ret = []; }\n    if(typeof A !== \"object\") return ret;\n    if(typeof k === \"undefined\") { k=0; }\n    if(!(k in ret)) { ret[k] = 0; }\n    if(A.length > ret[k]) ret[k] = A.length;\n    var i;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) dim(A[i],ret,k+1);\n    }\n    return ret;\n};\n\nnumeric.sclone = function clone(A,k,n) {\n    if(typeof k === \"undefined\") { k=0; }\n    if(typeof n === \"undefined\") { n = numeric.sdim(A).length; }\n    var i,ret = Array(A.length);\n    if(k === n-1) {\n        for(i in A) { if(A.hasOwnProperty(i)) ret[i] = A[i]; }\n        return ret;\n    }\n    for(i in A) {\n        if(A.hasOwnProperty(i)) ret[i] = clone(A[i],k+1,n);\n    }\n    return ret;\n}\n\nnumeric.sdiag = function diag(d) {\n    var n = d.length,i,ret = Array(n),i1,i2,i3;\n    for(i=n-1;i>=1;i-=2) {\n        i1 = i-1;\n        ret[i] = []; ret[i][i] = d[i];\n        ret[i1] = []; ret[i1][i1] = d[i1];\n    }\n    if(i===0) { ret[0] = []; ret[0][0] = d[i]; }\n    return ret;\n}\n\nnumeric.sidentity = function identity(n) { return numeric.sdiag(numeric.rep([n],1)); }\n\nnumeric.stranspose = function transpose(A) {\n    var ret = [], n = A.length, i,j,Ai;\n    for(i in A) {\n        if(!(A.hasOwnProperty(i))) continue;\n        Ai = A[i];\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(typeof ret[j] !== \"object\") { ret[j] = []; }\n            ret[j][i] = Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sLUP = function LUP(A,tol) {\n    throw new Error(\"The function numeric.sLUP had a bug in it and has been removed. Please use the new numeric.ccsLUP function instead.\");\n};\n\nnumeric.sdotMM = function dotMM(A,B) {\n    var p = A.length, q = B.length, BT = numeric.stranspose(B), r = BT.length, Ai, BTk;\n    var i,j,k,accum;\n    var ret = Array(p),reti;\n    for(i=p-1;i>=0;i--) {\n        reti = [];\n        Ai = A[i];\n        for(k=r-1;k>=0;k--) {\n            accum = 0;\n            BTk = BT[k];\n            for(j in Ai) {\n                if(!(Ai.hasOwnProperty(j))) continue;\n                if(j in BTk) { accum += Ai[j]*BTk[j]; }\n            }\n            if(accum) reti[k] = accum;\n        }\n        ret[i] = reti;\n    }\n    return ret;\n}\n\nnumeric.sdotMV = function dotMV(A,x) {\n    var p = A.length, Ai, i,j;\n    var ret = Array(p), accum;\n    for(i=p-1;i>=0;i--) {\n        Ai = A[i];\n        accum = 0;\n        for(j in Ai) {\n            if(!(Ai.hasOwnProperty(j))) continue;\n            if(x[j]) accum += Ai[j]*x[j];\n        }\n        if(accum) ret[i] = accum;\n    }\n    return ret;\n}\n\nnumeric.sdotVM = function dotMV(x,A) {\n    var i,j,Ai,alpha;\n    var ret = [], accum;\n    for(i in x) {\n        if(!x.hasOwnProperty(i)) continue;\n        Ai = A[i];\n        alpha = x[i];\n        for(j in Ai) {\n            if(!Ai.hasOwnProperty(j)) continue;\n            if(!ret[j]) { ret[j] = 0; }\n            ret[j] += alpha*Ai[j];\n        }\n    }\n    return ret;\n}\n\nnumeric.sdotVV = function dotVV(x,y) {\n    var i,ret=0;\n    for(i in x) { if(x[i] && y[i]) ret+= x[i]*y[i]; }\n    return ret;\n}\n\nnumeric.sdot = function dot(A,B) {\n    var m = numeric.sdim(A).length, n = numeric.sdim(B).length;\n    var k = m*1000+n;\n    switch(k) {\n    case 0: return A*B;\n    case 1001: return numeric.sdotVV(A,B);\n    case 2001: return numeric.sdotMV(A,B);\n    case 1002: return numeric.sdotVM(A,B);\n    case 2002: return numeric.sdotMM(A,B);\n    default: throw new Error('numeric.sdot not implemented for tensors of order '+m+' and '+n);\n    }\n}\n\nnumeric.sscatter = function scatter(V) {\n    var n = V[0].length, Vij, i, j, m = V.length, A = [], Aj;\n    for(i=n-1;i>=0;--i) {\n        if(!V[m-1][i]) continue;\n        Aj = A;\n        for(j=0;j<m-2;j++) {\n            Vij = V[j][i];\n            if(!Aj[Vij]) Aj[Vij] = [];\n            Aj = Aj[Vij];\n        }\n        Aj[V[j][i]] = V[j+1][i];\n    }\n    return A;\n}\n\nnumeric.sgather = function gather(A,ret,k) {\n    if(typeof ret === \"undefined\") ret = [];\n    if(typeof k === \"undefined\") k = [];\n    var n,i,Ai;\n    n = k.length;\n    for(i in A) {\n        if(A.hasOwnProperty(i)) {\n            k[n] = parseInt(i);\n            Ai = A[i];\n            if(typeof Ai === \"number\") {\n                if(Ai) {\n                    if(ret.length === 0) {\n                        for(i=n+1;i>=0;--i) ret[i] = [];\n                    }\n                    for(i=n;i>=0;--i) ret[i].push(k[i]);\n                    ret[n+1].push(Ai);\n                }\n            } else gather(Ai,ret,k);\n        }\n    }\n    if(k.length>n) k.pop();\n    return ret;\n}\n\n// 6. Coordinate matrices\nnumeric.cLU = function LU(A) {\n    var I = A[0], J = A[1], V = A[2];\n    var p = I.length, m=0, i,j,k,a,b,c;\n    for(i=0;i<p;i++) if(I[i]>m) m=I[i];\n    m++;\n    var L = Array(m), U = Array(m), left = numeric.rep([m],Infinity), right = numeric.rep([m],-Infinity);\n    var Ui, Uj,alpha;\n    for(k=0;k<p;k++) {\n        i = I[k];\n        j = J[k];\n        if(j<left[i]) left[i] = j;\n        if(j>right[i]) right[i] = j;\n    }\n    for(i=0;i<m-1;i++) { if(right[i] > right[i+1]) right[i+1] = right[i]; }\n    for(i=m-1;i>=1;i--) { if(left[i]<left[i-1]) left[i-1] = left[i]; }\n    var countL = 0, countU = 0;\n    for(i=0;i<m;i++) {\n        U[i] = numeric.rep([right[i]-left[i]+1],0);\n        L[i] = numeric.rep([i-left[i]],0);\n        countL += i-left[i]+1;\n        countU += right[i]-i+1;\n    }\n    for(k=0;k<p;k++) { i = I[k]; U[i][J[k]-left[i]] = V[k]; }\n    for(i=0;i<m-1;i++) {\n        a = i-left[i];\n        Ui = U[i];\n        for(j=i+1;left[j]<=i && j<m;j++) {\n            b = i-left[j];\n            c = right[i]-i;\n            Uj = U[j];\n            alpha = Uj[b]/Ui[a];\n            if(alpha) {\n                for(k=1;k<=c;k++) { Uj[k+b] -= alpha*Ui[k+a]; }\n                L[j][i-left[j]] = alpha;\n            }\n        }\n    }\n    var Ui = [], Uj = [], Uv = [], Li = [], Lj = [], Lv = [];\n    var p,q,foo;\n    p=0; q=0;\n    for(i=0;i<m;i++) {\n        a = left[i];\n        b = right[i];\n        foo = U[i];\n        for(j=i;j<=b;j++) {\n            if(foo[j-a]) {\n                Ui[p] = i;\n                Uj[p] = j;\n                Uv[p] = foo[j-a];\n                p++;\n            }\n        }\n        foo = L[i];\n        for(j=a;j<i;j++) {\n            if(foo[j-a]) {\n                Li[q] = i;\n                Lj[q] = j;\n                Lv[q] = foo[j-a];\n                q++;\n            }\n        }\n        Li[q] = i;\n        Lj[q] = i;\n        Lv[q] = 1;\n        q++;\n    }\n    return {U:[Ui,Uj,Uv], L:[Li,Lj,Lv]};\n};\n\nnumeric.cLUsolve = function LUsolve(lu,b) {\n    var L = lu.L, U = lu.U, ret = numeric.clone(b);\n    var Li = L[0], Lj = L[1], Lv = L[2];\n    var Ui = U[0], Uj = U[1], Uv = U[2];\n    var p = Ui.length, q = Li.length;\n    var m = ret.length,i,j,k;\n    k = 0;\n    for(i=0;i<m;i++) {\n        while(Lj[k] < i) {\n            ret[i] -= Lv[k]*ret[Lj[k]];\n            k++;\n        }\n        k++;\n    }\n    k = p-1;\n    for(i=m-1;i>=0;i--) {\n        while(Uj[k] > i) {\n            ret[i] -= Uv[k]*ret[Uj[k]];\n            k--;\n        }\n        ret[i] /= Uv[k];\n        k--;\n    }\n    return ret;\n};\n\nnumeric.cgrid = function grid(n,shape) {\n    if(typeof n === \"number\") n = [n,n];\n    var ret = numeric.rep(n,-1);\n    var i,j,count;\n    if(typeof shape !== \"function\") {\n        switch(shape) {\n        case 'L':\n            shape = function(i,j) { return (i>=n[0]/2 || j<n[1]/2); }\n            break;\n        default:\n            shape = function(i,j) { return true; };\n            break;\n        }\n    }\n    count=0;\n    for(i=1;i<n[0]-1;i++) for(j=1;j<n[1]-1;j++) \n        if(shape(i,j)) {\n            ret[i][j] = count;\n            count++;\n        }\n    return ret;\n}\n\nnumeric.cdelsq = function delsq(g) {\n    var dir = [[-1,0],[0,-1],[0,1],[1,0]];\n    var s = numeric.dim(g), m = s[0], n = s[1], i,j,k,p,q;\n    var Li = [], Lj = [], Lv = [];\n    for(i=1;i<m-1;i++) for(j=1;j<n-1;j++) {\n        if(g[i][j]<0) continue;\n        for(k=0;k<4;k++) {\n            p = i+dir[k][0];\n            q = j+dir[k][1];\n            if(g[p][q]<0) continue;\n            Li.push(g[i][j]);\n            Lj.push(g[p][q]);\n            Lv.push(-1);\n        }\n        Li.push(g[i][j]);\n        Lj.push(g[i][j]);\n        Lv.push(4);\n    }\n    return [Li,Lj,Lv];\n}\n\nnumeric.cdotMV = function dotMV(A,x) {\n    var ret, Ai = A[0], Aj = A[1], Av = A[2],k,p=Ai.length,N;\n    N=0;\n    for(k=0;k<p;k++) { if(Ai[k]>N) N = Ai[k]; }\n    N++;\n    ret = numeric.rep([N],0);\n    for(k=0;k<p;k++) { ret[Ai[k]]+=Av[k]*x[Aj[k]]; }\n    return ret;\n}\n\n// 7. Splines\n\nnumeric.Spline = function Spline(x,yl,yr,kl,kr) { this.x = x; this.yl = yl; this.yr = yr; this.kl = kl; this.kr = kr; }\nnumeric.Spline.prototype._at = function _at(x1,p) {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var x1,a,b,t;\n    var add = numeric.add, sub = numeric.sub, mul = numeric.mul;\n    a = sub(mul(kl[p],x[p+1]-x[p]),sub(yr[p+1],yl[p]));\n    b = add(mul(kr[p+1],x[p]-x[p+1]),sub(yr[p+1],yl[p]));\n    t = (x1-x[p])/(x[p+1]-x[p]);\n    var s = t*(1-t);\n    return add(add(add(mul(1-t,yl[p]),mul(t,yr[p+1])),mul(a,s*(1-t))),mul(b,s*t));\n}\nnumeric.Spline.prototype.at = function at(x0) {\n    if(typeof x0 === \"number\") {\n        var x = this.x;\n        var n = x.length;\n        var p,q,mid,floor = Math.floor,a,b,t;\n        p = 0;\n        q = n-1;\n        while(q-p>1) {\n            mid = floor((p+q)/2);\n            if(x[mid] <= x0) p = mid;\n            else q = mid;\n        }\n        return this._at(x0,p);\n    }\n    var n = x0.length, i, ret = Array(n);\n    for(i=n-1;i!==-1;--i) ret[i] = this.at(x0[i]);\n    return ret;\n}\nnumeric.Spline.prototype.diff = function diff() {\n    var x = this.x;\n    var yl = this.yl;\n    var yr = this.yr;\n    var kl = this.kl;\n    var kr = this.kr;\n    var n = yl.length;\n    var i,dx,dy;\n    var zl = kl, zr = kr, pl = Array(n), pr = Array(n);\n    var add = numeric.add, mul = numeric.mul, div = numeric.div, sub = numeric.sub;\n    for(i=n-1;i!==-1;--i) {\n        dx = x[i+1]-x[i];\n        dy = sub(yr[i+1],yl[i]);\n        pl[i] = div(add(mul(dy, 6),mul(kl[i],-4*dx),mul(kr[i+1],-2*dx)),dx*dx);\n        pr[i+1] = div(add(mul(dy,-6),mul(kl[i], 2*dx),mul(kr[i+1], 4*dx)),dx*dx);\n    }\n    return new numeric.Spline(x,zl,zr,pl,pr);\n}\nnumeric.Spline.prototype.roots = function roots() {\n    function sqr(x) { return x*x; }\n    function heval(y0,y1,k0,k1,x) {\n        var A = k0*2-(y1-y0);\n        var B = -k1*2+(y1-y0);\n        var t = (x+1)*0.5;\n        var s = t*(1-t);\n        return (1-t)*y0+t*y1+A*s*(1-t)+B*s*t;\n    }\n    var ret = [];\n    var x = this.x, yl = this.yl, yr = this.yr, kl = this.kl, kr = this.kr;\n    if(typeof yl[0] === \"number\") {\n        yl = [yl];\n        yr = [yr];\n        kl = [kl];\n        kr = [kr];\n    }\n    var m = yl.length,n=x.length-1,i,j,k,y,s,t;\n    var ai,bi,ci,di, ret = Array(m),ri,k0,k1,y0,y1,A,B,D,dx,cx,stops,z0,z1,zm,t0,t1,tm;\n    var sqrt = Math.sqrt;\n    for(i=0;i!==m;++i) {\n        ai = yl[i];\n        bi = yr[i];\n        ci = kl[i];\n        di = kr[i];\n        ri = [];\n        for(j=0;j!==n;j++) {\n            if(j>0 && bi[j]*ai[j]<0) ri.push(x[j]);\n            dx = (x[j+1]-x[j]);\n            cx = x[j];\n            y0 = ai[j];\n            y1 = bi[j+1];\n            k0 = ci[j]/dx;\n            k1 = di[j+1]/dx;\n            D = sqr(k0-k1+3*(y0-y1)) + 12*k1*y0;\n            A = k1+3*y0+2*k0-3*y1;\n            B = 3*(k1+k0+2*(y0-y1));\n            if(D<=0) {\n                z0 = A/B;\n                if(z0>x[j] && z0<x[j+1]) stops = [x[j],z0,x[j+1]];\n                else stops = [x[j],x[j+1]];\n            } else {\n                z0 = (A-sqrt(D))/B;\n                z1 = (A+sqrt(D))/B;\n                stops = [x[j]];\n                if(z0>x[j] && z0<x[j+1]) stops.push(z0);\n                if(z1>x[j] && z1<x[j+1]) stops.push(z1);\n                stops.push(x[j+1]);\n            }\n            t0 = stops[0];\n            z0 = this._at(t0,j);\n            for(k=0;k<stops.length-1;k++) {\n                t1 = stops[k+1];\n                z1 = this._at(t1,j);\n                if(z0 === 0) {\n                    ri.push(t0); \n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                if(z1 === 0 || z0*z1>0) {\n                    t0 = t1;\n                    z0 = z1;\n                    continue;\n                }\n                var side = 0;\n                while(1) {\n                    tm = (z0*t1-z1*t0)/(z0-z1);\n                    if(tm <= t0 || tm >= t1) { break; }\n                    zm = this._at(tm,j);\n                    if(zm*z1>0) {\n                        t1 = tm;\n                        z1 = zm;\n                        if(side === -1) z0*=0.5;\n                        side = -1;\n                    } else if(zm*z0>0) {\n                        t0 = tm;\n                        z0 = zm;\n                        if(side === 1) z1*=0.5;\n                        side = 1;\n                    } else break;\n                }\n                ri.push(tm);\n                t0 = stops[k+1];\n                z0 = this._at(t0, j);\n            }\n            if(z1 === 0) ri.push(t1);\n        }\n        ret[i] = ri;\n    }\n    if(typeof this.yl[0] === \"number\") return ret[0];\n    return ret;\n}\nnumeric.spline = function spline(x,y,k1,kn) {\n    var n = x.length, b = [], dx = [], dy = [];\n    var i;\n    var sub = numeric.sub,mul = numeric.mul,add = numeric.add;\n    for(i=n-2;i>=0;i--) { dx[i] = x[i+1]-x[i]; dy[i] = sub(y[i+1],y[i]); }\n    if(typeof k1 === \"string\" || typeof kn === \"string\") { \n        k1 = kn = \"periodic\";\n    }\n    // Build sparse tridiagonal system\n    var T = [[],[],[]];\n    switch(typeof k1) {\n    case \"undefined\":\n        b[0] = mul(3/(dx[0]*dx[0]),dy[0]);\n        T[0].push(0,0);\n        T[1].push(0,1);\n        T[2].push(2/dx[0],1/dx[0]);\n        break;\n    case \"string\":\n        b[0] = add(mul(3/(dx[n-2]*dx[n-2]),dy[n-2]),mul(3/(dx[0]*dx[0]),dy[0]));\n        T[0].push(0,0,0);\n        T[1].push(n-2,0,1);\n        T[2].push(1/dx[n-2],2/dx[n-2]+2/dx[0],1/dx[0]);\n        break;\n    default:\n        b[0] = k1;\n        T[0].push(0);\n        T[1].push(0);\n        T[2].push(1);\n        break;\n    }\n    for(i=1;i<n-1;i++) {\n        b[i] = add(mul(3/(dx[i-1]*dx[i-1]),dy[i-1]),mul(3/(dx[i]*dx[i]),dy[i]));\n        T[0].push(i,i,i);\n        T[1].push(i-1,i,i+1);\n        T[2].push(1/dx[i-1],2/dx[i-1]+2/dx[i],1/dx[i]);\n    }\n    switch(typeof kn) {\n    case \"undefined\":\n        b[n-1] = mul(3/(dx[n-2]*dx[n-2]),dy[n-2]);\n        T[0].push(n-1,n-1);\n        T[1].push(n-2,n-1);\n        T[2].push(1/dx[n-2],2/dx[n-2]);\n        break;\n    case \"string\":\n        T[1][T[1].length-1] = 0;\n        break;\n    default:\n        b[n-1] = kn;\n        T[0].push(n-1);\n        T[1].push(n-1);\n        T[2].push(1);\n        break;\n    }\n    if(typeof b[0] !== \"number\") b = numeric.transpose(b);\n    else b = [b];\n    var k = Array(b.length);\n    if(typeof k1 === \"string\") {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.ccsLUPSolve(numeric.ccsLUP(numeric.ccsScatter(T)),b[i]);\n            k[i][n-1] = k[i][0];\n        }\n    } else {\n        for(i=k.length-1;i!==-1;--i) {\n            k[i] = numeric.cLUsolve(numeric.cLU(T),b[i]);\n        }\n    }\n    if(typeof y[0] === \"number\") k = k[0];\n    else k = numeric.transpose(k);\n    return new numeric.Spline(x,y,y,k,k);\n}\n\n// 8. FFT\nnumeric.fftpow2 = function fftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    fftpow2(xe,ye);\n    fftpow2(xo,yo);\n    j = n/2;\n    var t,k = (-6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric._ifftpow2 = function _ifftpow2(x,y) {\n    var n = x.length;\n    if(n === 1) return;\n    var cos = Math.cos, sin = Math.sin, i,j;\n    var xe = Array(n/2), ye = Array(n/2), xo = Array(n/2), yo = Array(n/2);\n    j = n/2;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        xo[j] = x[i];\n        yo[j] = y[i];\n        --i;\n        xe[j] = x[i];\n        ye[j] = y[i];\n    }\n    _ifftpow2(xe,ye);\n    _ifftpow2(xo,yo);\n    j = n/2;\n    var t,k = (6.2831853071795864769252867665590057683943387987502116419/n),ci,si;\n    for(i=n-1;i!==-1;--i) {\n        --j;\n        if(j === -1) j = n/2-1;\n        t = k*i;\n        ci = cos(t);\n        si = sin(t);\n        x[i] = xe[j] + ci*xo[j] - si*yo[j];\n        y[i] = ye[j] + ci*yo[j] + si*xo[j];\n    }\n}\nnumeric.ifftpow2 = function ifftpow2(x,y) {\n    numeric._ifftpow2(x,y);\n    numeric.diveq(x,x.length);\n    numeric.diveq(y,y.length);\n}\nnumeric.convpow2 = function convpow2(ax,ay,bx,by) {\n    numeric.fftpow2(ax,ay);\n    numeric.fftpow2(bx,by);\n    var i,n = ax.length,axi,bxi,ayi,byi;\n    for(i=n-1;i!==-1;--i) {\n        axi = ax[i]; ayi = ay[i]; bxi = bx[i]; byi = by[i];\n        ax[i] = axi*bxi-ayi*byi;\n        ay[i] = axi*byi+ayi*bxi;\n    }\n    numeric.ifftpow2(ax,ay);\n}\nnumeric.T.prototype.fft = function fft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (-3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X;\n}\nnumeric.T.prototype.ifft = function ifft() {\n    var x = this.x, y = this.y;\n    var n = x.length, log = Math.log, log2 = log(2),\n        p = Math.ceil(log(2*n-1)/log2), m = Math.pow(2,p);\n    var cx = numeric.rep([m],0), cy = numeric.rep([m],0), cos = Math.cos, sin = Math.sin;\n    var k, c = (3.141592653589793238462643383279502884197169399375105820/n),t;\n    var a = numeric.rep([m],0), b = numeric.rep([m],0),nhalf = Math.floor(n/2);\n    for(k=0;k<n;k++) a[k] = x[k];\n    if(typeof y !== \"undefined\") for(k=0;k<n;k++) b[k] = y[k];\n    cx[0] = 1;\n    for(k=1;k<=m/2;k++) {\n        t = c*k*k;\n        cx[k] = cos(t);\n        cy[k] = sin(t);\n        cx[m-k] = cos(t);\n        cy[m-k] = sin(t)\n    }\n    var X = new numeric.T(a,b), Y = new numeric.T(cx,cy);\n    X = X.mul(Y);\n    numeric.convpow2(X.x,X.y,numeric.clone(Y.x),numeric.neg(Y.y));\n    X = X.mul(Y);\n    X.x.length = n;\n    X.y.length = n;\n    return X.div(n);\n}\n\n//9. Unconstrained optimization\nnumeric.gradient = function gradient(f,x) {\n    var n = x.length;\n    var f0 = f(x);\n    if(isNaN(f0)) throw new Error('gradient: f(x) is a NaN!');\n    var max = Math.max;\n    var i,x0 = numeric.clone(x),f1,f2, J = Array(n);\n    var div = numeric.div, sub = numeric.sub,errest,roundoff,max = Math.max,eps = 1e-3,abs = Math.abs, min = Math.min;\n    var t0,t1,t2,it=0,d1,d2,N;\n    for(i=0;i<n;i++) {\n        var h = max(1e-6*f0,1e-8);\n        while(1) {\n            ++it;\n            if(it>20) { throw new Error(\"Numerical gradient fails\"); }\n            x0[i] = x[i]+h;\n            f1 = f(x0);\n            x0[i] = x[i]-h;\n            f2 = f(x0);\n            x0[i] = x[i];\n            if(isNaN(f1) || isNaN(f2)) { h/=16; continue; }\n            J[i] = (f1-f2)/(2*h);\n            t0 = x[i]-h;\n            t1 = x[i];\n            t2 = x[i]+h;\n            d1 = (f1-f0)/h;\n            d2 = (f0-f2)/h;\n            N = max(abs(J[i]),abs(f0),abs(f1),abs(f2),abs(t0),abs(t1),abs(t2),1e-8);\n            errest = min(max(abs(d1-J[i]),abs(d2-J[i]),abs(d1-d2))/N,h/N);\n            if(errest>eps) { h/=16; }\n            else break;\n            }\n    }\n    return J;\n}\n\nnumeric.uncmin = function uncmin(f,x0,tol,gradient,maxit,callback,options) {\n    var grad = numeric.gradient;\n    if(typeof options === \"undefined\") { options = {}; }\n    if(typeof tol === \"undefined\") { tol = 1e-8; }\n    if(typeof gradient === \"undefined\") { gradient = function(x) { return grad(f,x); }; }\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    x0 = numeric.clone(x0);\n    var n = x0.length;\n    var f0 = f(x0),f1,df0;\n    if(isNaN(f0)) throw new Error('uncmin: f(x0) is a NaN!');\n    var max = Math.max, norm2 = numeric.norm2;\n    tol = max(tol,numeric.epsilon);\n    var step,g0,g1,H1 = options.Hinv || numeric.identity(n);\n    var dot = numeric.dot, inv = numeric.inv, sub = numeric.sub, add = numeric.add, ten = numeric.tensor, div = numeric.div, mul = numeric.mul;\n    var all = numeric.all, isfinite = numeric.isFinite, neg = numeric.neg;\n    var it=0,i,s,x1,y,Hy,Hs,ys,i0,t,nstep,t1,t2;\n    var msg = \"\";\n    g0 = gradient(x0);\n    while(it<maxit) {\n        if(typeof callback === \"function\") { if(callback(it,x0,f0,g0,H1)) { msg = \"Callback returned true\"; break; } }\n        if(!all(isfinite(g0))) { msg = \"Gradient has Infinity or NaN\"; break; }\n        step = neg(dot(H1,g0));\n        if(!all(isfinite(step))) { msg = \"Search direction has Infinity or NaN\"; break; }\n        nstep = norm2(step);\n        if(nstep < tol) { msg=\"Newton step smaller than tol\"; break; }\n        t = 1;\n        df0 = dot(g0,step);\n        // line search\n        x1 = x0;\n        while(it < maxit) {\n            if(t*nstep < tol) { break; }\n            s = mul(step,t);\n            x1 = add(x0,s);\n            f1 = f(x1);\n            if(f1-f0 >= 0.1*t*df0 || isNaN(f1)) {\n                t *= 0.5;\n                ++it;\n                continue;\n            }\n            break;\n        }\n        if(t*nstep < tol) { msg = \"Line search step size smaller than tol\"; break; }\n        if(it === maxit) { msg = \"maxit reached during line search\"; break; }\n        g1 = gradient(x1);\n        y = sub(g1,g0);\n        ys = dot(y,s);\n        Hy = dot(H1,y);\n        H1 = sub(add(H1,\n                mul(\n                        (ys+dot(y,Hy))/(ys*ys),\n                        ten(s,s)    )),\n                div(add(ten(Hy,s),ten(s,Hy)),ys));\n        x0 = x1;\n        f0 = f1;\n        g0 = g1;\n        ++it;\n    }\n    return {solution: x0, f: f0, gradient: g0, invHessian: H1, iterations:it, message: msg};\n}\n\n// 10. Ode solver (Dormand-Prince)\nnumeric.Dopri = function Dopri(x,y,f,ymid,iterations,msg,events) {\n    this.x = x;\n    this.y = y;\n    this.f = f;\n    this.ymid = ymid;\n    this.iterations = iterations;\n    this.events = events;\n    this.message = msg;\n}\nnumeric.Dopri.prototype._at = function _at(xi,j) {\n    function sqr(x) { return x*x; }\n    var sol = this;\n    var xs = sol.x;\n    var ys = sol.y;\n    var k1 = sol.f;\n    var ymid = sol.ymid;\n    var n = xs.length;\n    var x0,x1,xh,y0,y1,yh,xi;\n    var floor = Math.floor,h;\n    var c = 0.5;\n    var add = numeric.add, mul = numeric.mul,sub = numeric.sub, p,q,w;\n    x0 = xs[j];\n    x1 = xs[j+1];\n    y0 = ys[j];\n    y1 = ys[j+1];\n    h  = x1-x0;\n    xh = x0+c*h;\n    yh = ymid[j];\n    p = sub(k1[j  ],mul(y0,1/(x0-xh)+2/(x0-x1)));\n    q = sub(k1[j+1],mul(y1,1/(x1-xh)+2/(x1-x0)));\n    w = [sqr(xi - x1) * (xi - xh) / sqr(x0 - x1) / (x0 - xh),\n         sqr(xi - x0) * sqr(xi - x1) / sqr(x0 - xh) / sqr(x1 - xh),\n         sqr(xi - x0) * (xi - xh) / sqr(x1 - x0) / (x1 - xh),\n         (xi - x0) * sqr(xi - x1) * (xi - xh) / sqr(x0-x1) / (x0 - xh),\n         (xi - x1) * sqr(xi - x0) * (xi - xh) / sqr(x0-x1) / (x1 - xh)];\n    return add(add(add(add(mul(y0,w[0]),\n                           mul(yh,w[1])),\n                           mul(y1,w[2])),\n                           mul( p,w[3])),\n                           mul( q,w[4]));\n}\nnumeric.Dopri.prototype.at = function at(x) {\n    var i,j,k,floor = Math.floor;\n    if(typeof x !== \"number\") {\n        var n = x.length, ret = Array(n);\n        for(i=n-1;i!==-1;--i) {\n            ret[i] = this.at(x[i]);\n        }\n        return ret;\n    }\n    var x0 = this.x;\n    i = 0; j = x0.length-1;\n    while(j-i>1) {\n        k = floor(0.5*(i+j));\n        if(x0[k] <= x) i = k;\n        else j = k;\n    }\n    return this._at(x,i);\n}\n\nnumeric.dopri = function dopri(x0,x1,y0,f,tol,maxit,event) {\n    if(typeof tol === \"undefined\") { tol = 1e-6; }\n    if(typeof maxit === \"undefined\") { maxit = 1000; }\n    var xs = [x0], ys = [y0], k1 = [f(x0,y0)], k2,k3,k4,k5,k6,k7, ymid = [];\n    var A2 = 1/5;\n    var A3 = [3/40,9/40];\n    var A4 = [44/45,-56/15,32/9];\n    var A5 = [19372/6561,-25360/2187,64448/6561,-212/729];\n    var A6 = [9017/3168,-355/33,46732/5247,49/176,-5103/18656];\n    var b = [35/384,0,500/1113,125/192,-2187/6784,11/84];\n    var bm = [0.5*6025192743/30085553152,\n              0,\n              0.5*51252292925/65400821598,\n              0.5*-2691868925/45128329728,\n              0.5*187940372067/1594534317056,\n              0.5*-1776094331/19743644256,\n              0.5*11237099/235043384];\n    var c = [1/5,3/10,4/5,8/9,1,1];\n    var e = [-71/57600,0,71/16695,-71/1920,17253/339200,-22/525,1/40];\n    var i = 0,er,j;\n    var h = (x1-x0)/10;\n    var it = 0;\n    var add = numeric.add, mul = numeric.mul, y1,erinf;\n    var max = Math.max, min = Math.min, abs = Math.abs, norminf = numeric.norminf,pow = Math.pow;\n    var any = numeric.any, lt = numeric.lt, and = numeric.and, sub = numeric.sub;\n    var e0, e1, ev;\n    var ret = new numeric.Dopri(xs,ys,k1,ymid,-1,\"\");\n    if(typeof event === \"function\") e0 = event(x0,y0);\n    while(x0<x1 && it<maxit) {\n        ++it;\n        if(x0+h>x1) h = x1-x0;\n        k2 = f(x0+c[0]*h,                add(y0,mul(   A2*h,k1[i])));\n        k3 = f(x0+c[1]*h,            add(add(y0,mul(A3[0]*h,k1[i])),mul(A3[1]*h,k2)));\n        k4 = f(x0+c[2]*h,        add(add(add(y0,mul(A4[0]*h,k1[i])),mul(A4[1]*h,k2)),mul(A4[2]*h,k3)));\n        k5 = f(x0+c[3]*h,    add(add(add(add(y0,mul(A5[0]*h,k1[i])),mul(A5[1]*h,k2)),mul(A5[2]*h,k3)),mul(A5[3]*h,k4)));\n        k6 = f(x0+c[4]*h,add(add(add(add(add(y0,mul(A6[0]*h,k1[i])),mul(A6[1]*h,k2)),mul(A6[2]*h,k3)),mul(A6[3]*h,k4)),mul(A6[4]*h,k5)));\n        y1 = add(add(add(add(add(y0,mul(k1[i],h*b[0])),mul(k3,h*b[2])),mul(k4,h*b[3])),mul(k5,h*b[4])),mul(k6,h*b[5]));\n        k7 = f(x0+h,y1);\n        er = add(add(add(add(add(mul(k1[i],h*e[0]),mul(k3,h*e[2])),mul(k4,h*e[3])),mul(k5,h*e[4])),mul(k6,h*e[5])),mul(k7,h*e[6]));\n        if(typeof er === \"number\") erinf = abs(er);\n        else erinf = norminf(er);\n        if(erinf > tol) { // reject\n            h = 0.2*h*pow(tol/erinf,0.25);\n            if(x0+h === x0) {\n                ret.msg = \"Step size became too small\";\n                break;\n            }\n            continue;\n        }\n        ymid[i] = add(add(add(add(add(add(y0,\n                mul(k1[i],h*bm[0])),\n                mul(k3   ,h*bm[2])),\n                mul(k4   ,h*bm[3])),\n                mul(k5   ,h*bm[4])),\n                mul(k6   ,h*bm[5])),\n                mul(k7   ,h*bm[6]));\n        ++i;\n        xs[i] = x0+h;\n        ys[i] = y1;\n        k1[i] = k7;\n        if(typeof event === \"function\") {\n            var yi,xl = x0,xr = x0+0.5*h,xi;\n            e1 = event(xr,ymid[i-1]);\n            ev = and(lt(e0,0),lt(0,e1));\n            if(!any(ev)) { xl = xr; xr = x0+h; e0 = e1; e1 = event(xr,y1); ev = and(lt(e0,0),lt(0,e1)); }\n            if(any(ev)) {\n                var xc, yc, en,ei;\n                var side=0, sl = 1.0, sr = 1.0;\n                while(1) {\n                    if(typeof e0 === \"number\") xi = (sr*e1*xl-sl*e0*xr)/(sr*e1-sl*e0);\n                    else {\n                        xi = xr;\n                        for(j=e0.length-1;j!==-1;--j) {\n                            if(e0[j]<0 && e1[j]>0) xi = min(xi,(sr*e1[j]*xl-sl*e0[j]*xr)/(sr*e1[j]-sl*e0[j]));\n                        }\n                    }\n                    if(xi <= xl || xi >= xr) break;\n                    yi = ret._at(xi, i-1);\n                    ei = event(xi,yi);\n                    en = and(lt(e0,0),lt(0,ei));\n                    if(any(en)) {\n                        xr = xi;\n                        e1 = ei;\n                        ev = en;\n                        sr = 1.0;\n                        if(side === -1) sl *= 0.5;\n                        else sl = 1.0;\n                        side = -1;\n                    } else {\n                        xl = xi;\n                        e0 = ei;\n                        sl = 1.0;\n                        if(side === 1) sr *= 0.5;\n                        else sr = 1.0;\n                        side = 1;\n                    }\n                }\n                y1 = ret._at(0.5*(x0+xi),i-1);\n                ret.f[i] = f(xi,yi);\n                ret.x[i] = xi;\n                ret.y[i] = yi;\n                ret.ymid[i-1] = y1;\n                ret.events = ev;\n                ret.iterations = it;\n                return ret;\n            }\n        }\n        x0 += h;\n        y0 = y1;\n        e0 = e1;\n        h = min(0.8*h*pow(tol/erinf,0.25),4*h);\n    }\n    ret.iterations = it;\n    return ret;\n}\n\n// 11. Ax = b\nnumeric.LU = function(A, fast) {\n  fast = fast || false;\n\n  var abs = Math.abs;\n  var i, j, k, absAjk, Akk, Ak, Pk, Ai;\n  var max;\n  var n = A.length, n1 = n-1;\n  var P = new Array(n);\n  if(!fast) A = numeric.clone(A);\n\n  for (k = 0; k < n; ++k) {\n    Pk = k;\n    Ak = A[k];\n    max = abs(Ak[k]);\n    for (j = k + 1; j < n; ++j) {\n      absAjk = abs(A[j][k]);\n      if (max < absAjk) {\n        max = absAjk;\n        Pk = j;\n      }\n    }\n    P[k] = Pk;\n\n    if (Pk != k) {\n      A[k] = A[Pk];\n      A[Pk] = Ak;\n      Ak = A[k];\n    }\n\n    Akk = Ak[k];\n\n    for (i = k + 1; i < n; ++i) {\n      A[i][k] /= Akk;\n    }\n\n    for (i = k + 1; i < n; ++i) {\n      Ai = A[i];\n      for (j = k + 1; j < n1; ++j) {\n        Ai[j] -= Ai[k] * Ak[j];\n        ++j;\n        Ai[j] -= Ai[k] * Ak[j];\n      }\n      if(j===n1) Ai[j] -= Ai[k] * Ak[j];\n    }\n  }\n\n  return {\n    LU: A,\n    P:  P\n  };\n}\n\nnumeric.LUsolve = function LUsolve(LUP, b) {\n  var i, j;\n  var LU = LUP.LU;\n  var n   = LU.length;\n  var x = numeric.clone(b);\n  var P   = LUP.P;\n  var Pi, LUi, LUii, tmp;\n\n  for (i=n-1;i!==-1;--i) x[i] = b[i];\n  for (i = 0; i < n; ++i) {\n    Pi = P[i];\n    if (P[i] !== i) {\n      tmp = x[i];\n      x[i] = x[Pi];\n      x[Pi] = tmp;\n    }\n\n    LUi = LU[i];\n    for (j = 0; j < i; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n  }\n\n  for (i = n - 1; i >= 0; --i) {\n    LUi = LU[i];\n    for (j = i + 1; j < n; ++j) {\n      x[i] -= x[j] * LUi[j];\n    }\n\n    x[i] /= LUi[i];\n  }\n\n  return x;\n}\n\nnumeric.solve = function solve(A,b,fast) { return numeric.LUsolve(numeric.LU(A,fast), b); }\n\n// 12. Linear programming\nnumeric.echelonize = function echelonize(A) {\n    var s = numeric.dim(A), m = s[0], n = s[1];\n    var I = numeric.identity(m);\n    var P = Array(m);\n    var i,j,k,l,Ai,Ii,Z,a;\n    var abs = Math.abs;\n    var diveq = numeric.diveq;\n    A = numeric.clone(A);\n    for(i=0;i<m;++i) {\n        k = 0;\n        Ai = A[i];\n        Ii = I[i];\n        for(j=1;j<n;++j) if(abs(Ai[k])<abs(Ai[j])) k=j;\n        P[i] = k;\n        diveq(Ii,Ai[k]);\n        diveq(Ai,Ai[k]);\n        for(j=0;j<m;++j) if(j!==i) {\n            Z = A[j]; a = Z[k];\n            for(l=n-1;l!==-1;--l) Z[l] -= Ai[l]*a;\n            Z = I[j];\n            for(l=m-1;l!==-1;--l) Z[l] -= Ii[l]*a;\n        }\n    }\n    return {I:I, A:A, P:P};\n}\n\nnumeric.__solveLP = function __solveLP(c,A,b,tol,maxit,x,flag) {\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var m = c.length, n = b.length,y;\n    var unbounded = false, cb,i0=0;\n    var alpha = 1.0;\n    var f0,df0,AT = numeric.transpose(A), svd = numeric.svd,transpose = numeric.transpose,leq = numeric.leq, sqrt = Math.sqrt, abs = Math.abs;\n    var muleq = numeric.muleq;\n    var norm = numeric.norminf, any = numeric.any,min = Math.min;\n    var all = numeric.all, gt = numeric.gt;\n    var p = Array(m), A0 = Array(n),e=numeric.rep([n],1), H;\n    var solve = numeric.solve, z = sub(b,dot(A,x)),count;\n    var dotcc = dot(c,c);\n    var g;\n    for(count=i0;count<maxit;++count) {\n        var i,j,d;\n        for(i=n-1;i!==-1;--i) A0[i] = div(A[i],z[i]);\n        var A1 = transpose(A0);\n        for(i=m-1;i!==-1;--i) p[i] = (/*x[i]+*/sum(A1[i]));\n        alpha = 0.25*abs(dotcc/dot(c,p));\n        var a1 = 100*sqrt(dotcc/dot(p,p));\n        if(!isFinite(alpha) || alpha>a1) alpha = a1;\n        g = add(c,mul(alpha,p));\n        H = dot(A1,A0);\n        for(i=m-1;i!==-1;--i) H[i][i] += 1;\n        d = solve(H,div(g,alpha),true);\n        var t0 = div(z,dot(A,d));\n        var t = 1.0;\n        for(i=n-1;i!==-1;--i) if(t0[i]<0) t = min(t,-0.999*t0[i]);\n        y = sub(x,mul(d,t));\n        z = sub(b,dot(A,y));\n        if(!all(gt(z,0))) return { solution: x, message: \"\", iterations: count };\n        x = y;\n        if(alpha<tol) return { solution: y, message: \"\", iterations: count };\n        if(flag) {\n            var s = dot(c,g), Ag = dot(A,g);\n            unbounded = true;\n            for(i=n-1;i!==-1;--i) if(s*Ag[i]<0) { unbounded = false; break; }\n        } else {\n            if(x[m-1]>=0) unbounded = false;\n            else unbounded = true;\n        }\n        if(unbounded) return { solution: y, message: \"Unbounded\", iterations: count };\n    }\n    return { solution: x, message: \"maximum iteration count exceeded\", iterations:count };\n}\n\nnumeric._solveLP = function _solveLP(c,A,b,tol,maxit) {\n    var m = c.length, n = b.length,y;\n    var sum = numeric.sum, log = numeric.log, mul = numeric.mul, sub = numeric.sub, dot = numeric.dot, div = numeric.div, add = numeric.add;\n    var c0 = numeric.rep([m],0).concat([1]);\n    var J = numeric.rep([n,1],-1);\n    var A0 = numeric.blockMatrix([[A                   ,   J  ]]);\n    var b0 = b;\n    var y = numeric.rep([m],0).concat(Math.max(0,numeric.sup(numeric.neg(b)))+1);\n    var x0 = numeric.__solveLP(c0,A0,b0,tol,maxit,y,false);\n    var x = numeric.clone(x0.solution);\n    x.length = m;\n    var foo = numeric.inf(sub(b,dot(A,x)));\n    if(foo<0) { return { solution: NaN, message: \"Infeasible\", iterations: x0.iterations }; }\n    var ret = numeric.__solveLP(c, A, b, tol, maxit-x0.iterations, x, true);\n    ret.iterations += x0.iterations;\n    return ret;\n};\n\nnumeric.solveLP = function solveLP(c,A,b,Aeq,beq,tol,maxit) {\n    if(typeof maxit === \"undefined\") maxit = 1000;\n    if(typeof tol === \"undefined\") tol = numeric.epsilon;\n    if(typeof Aeq === \"undefined\") return numeric._solveLP(c,A,b,tol,maxit);\n    var m = Aeq.length, n = Aeq[0].length, o = A.length;\n    var B = numeric.echelonize(Aeq);\n    var flags = numeric.rep([n],0);\n    var P = B.P;\n    var Q = [];\n    var i;\n    for(i=P.length-1;i!==-1;--i) flags[P[i]] = 1;\n    for(i=n-1;i!==-1;--i) if(flags[i]===0) Q.push(i);\n    var g = numeric.getRange;\n    var I = numeric.linspace(0,m-1), J = numeric.linspace(0,o-1);\n    var Aeq2 = g(Aeq,I,Q), A1 = g(A,J,P), A2 = g(A,J,Q), dot = numeric.dot, sub = numeric.sub;\n    var A3 = dot(A1,B.I);\n    var A4 = sub(A2,dot(A3,Aeq2)), b4 = sub(b,dot(A3,beq));\n    var c1 = Array(P.length), c2 = Array(Q.length);\n    for(i=P.length-1;i!==-1;--i) c1[i] = c[P[i]];\n    for(i=Q.length-1;i!==-1;--i) c2[i] = c[Q[i]];\n    var c4 = sub(c2,dot(c1,dot(B.I,Aeq2)));\n    var S = numeric._solveLP(c4,A4,b4,tol,maxit);\n    var x2 = S.solution;\n    if(x2!==x2) return S;\n    var x1 = dot(B.I,sub(beq,dot(Aeq2,x2)));\n    var x = Array(c.length);\n    for(i=P.length-1;i!==-1;--i) x[P[i]] = x1[i];\n    for(i=Q.length-1;i!==-1;--i) x[Q[i]] = x2[i];\n    return { solution: x, message:S.message, iterations: S.iterations };\n}\n\nnumeric.MPStoLP = function MPStoLP(MPS) {\n    if(MPS instanceof String) { MPS.split('\\n'); }\n    var state = 0;\n    var states = ['Initial state','NAME','ROWS','COLUMNS','RHS','BOUNDS','ENDATA'];\n    var n = MPS.length;\n    var i,j,z,N=0,rows = {}, sign = [], rl = 0, vars = {}, nv = 0;\n    var name;\n    var c = [], A = [], b = [];\n    function err(e) { throw new Error('MPStoLP: '+e+'\\nLine '+i+': '+MPS[i]+'\\nCurrent state: '+states[state]+'\\n'); }\n    for(i=0;i<n;++i) {\n        z = MPS[i];\n        var w0 = z.match(/\\S*/g);\n        var w = [];\n        for(j=0;j<w0.length;++j) if(w0[j]!==\"\") w.push(w0[j]);\n        if(w.length === 0) continue;\n        for(j=0;j<states.length;++j) if(z.substr(0,states[j].length) === states[j]) break;\n        if(j<states.length) {\n            state = j;\n            if(j===1) { name = w[1]; }\n            if(j===6) return { name:name, c:c, A:numeric.transpose(A), b:b, rows:rows, vars:vars };\n            continue;\n        }\n        switch(state) {\n        case 0: case 1: err('Unexpected line');\n        case 2: \n            switch(w[0]) {\n            case 'N': if(N===0) N = w[1]; else err('Two or more N rows'); break;\n            case 'L': rows[w[1]] = rl; sign[rl] = 1; b[rl] = 0; ++rl; break;\n            case 'G': rows[w[1]] = rl; sign[rl] = -1;b[rl] = 0; ++rl; break;\n            case 'E': rows[w[1]] = rl; sign[rl] = 0;b[rl] = 0; ++rl; break;\n            default: err('Parse error '+numeric.prettyPrint(w));\n            }\n            break;\n        case 3:\n            if(!vars.hasOwnProperty(w[0])) { vars[w[0]] = nv; c[nv] = 0; A[nv] = numeric.rep([rl],0); ++nv; }\n            var p = vars[w[0]];\n            for(j=1;j<w.length;j+=2) {\n                if(w[j] === N) { c[p] = parseFloat(w[j+1]); continue; }\n                var q = rows[w[j]];\n                A[p][q] = (sign[q]<0?-1:1)*parseFloat(w[j+1]);\n            }\n            break;\n        case 4:\n            for(j=1;j<w.length;j+=2) b[rows[w[j]]] = (sign[rows[w[j]]]<0?-1:1)*parseFloat(w[j+1]);\n            break;\n        case 5: /*FIXME*/ break;\n        case 6: err('Internal error');\n        }\n    }\n    err('Reached end of file without ENDATA');\n}\n// seedrandom.js version 2.0.\n// Author: David Bau 4/2/2011\n//\n// Defines a method Math.seedrandom() that, when called, substitutes\n// an explicitly seeded RC4-based algorithm for Math.random().  Also\n// supports automatic seeding from local or network sources of entropy.\n//\n// Usage:\n//\n//   <script src=http://davidbau.com/encode/seedrandom-min.js></script>\n//\n//   Math.seedrandom('yipee'); Sets Math.random to a function that is\n//                             initialized using the given explicit seed.\n//\n//   Math.seedrandom();        Sets Math.random to a function that is\n//                             seeded using the current time, dom state,\n//                             and other accumulated local entropy.\n//                             The generated seed string is returned.\n//\n//   Math.seedrandom('yowza', true);\n//                             Seeds using the given explicit seed mixed\n//                             together with accumulated entropy.\n//\n//   <script src=\"http://bit.ly/srandom-512\"></script>\n//                             Seeds using physical random bits downloaded\n//                             from random.org.\n//\n//   <script src=\"https://jsonlib.appspot.com/urandom?callback=Math.seedrandom\">\n//   </script>                 Seeds using urandom bits from call.jsonlib.com,\n//                             which is faster than random.org.\n//\n// Examples:\n//\n//   Math.seedrandom(\"hello\");            // Use \"hello\" as the seed.\n//   document.write(Math.random());       // Always 0.5463663768140734\n//   document.write(Math.random());       // Always 0.43973793770592234\n//   var rng1 = Math.random;              // Remember the current prng.\n//\n//   var autoseed = Math.seedrandom();    // New prng with an automatic seed.\n//   document.write(Math.random());       // Pretty much unpredictable.\n//\n//   Math.random = rng1;                  // Continue \"hello\" prng sequence.\n//   document.write(Math.random());       // Always 0.554769432473455\n//\n//   Math.seedrandom(autoseed);           // Restart at the previous seed.\n//   document.write(Math.random());       // Repeat the 'unpredictable' value.\n//\n// Notes:\n//\n// Each time seedrandom('arg') is called, entropy from the passed seed\n// is accumulated in a pool to help generate future seeds for the\n// zero-argument form of Math.seedrandom, so entropy can be injected over\n// time by calling seedrandom with explicit data repeatedly.\n//\n// On speed - This javascript implementation of Math.random() is about\n// 3-10x slower than the built-in Math.random() because it is not native\n// code, but this is typically fast enough anyway.  Seeding is more expensive,\n// especially if you use auto-seeding.  Some details (timings on Chrome 4):\n//\n// Our Math.random()            - avg less than 0.002 milliseconds per call\n// seedrandom('explicit')       - avg less than 0.5 milliseconds per call\n// seedrandom('explicit', true) - avg less than 2 milliseconds per call\n// seedrandom()                 - avg about 38 milliseconds per call\n//\n// LICENSE (BSD):\n//\n// Copyright 2010 David Bau, all rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n// \n//   1. Redistributions of source code must retain the above copyright\n//      notice, this list of conditions and the following disclaimer.\n//\n//   2. Redistributions in binary form must reproduce the above copyright\n//      notice, this list of conditions and the following disclaimer in the\n//      documentation and/or other materials provided with the distribution.\n// \n//   3. Neither the name of this module nor the names of its contributors may\n//      be used to endorse or promote products derived from this software\n//      without specific prior written permission.\n// \n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n// \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n// LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n// A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n// OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n// SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n// LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n// THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n// (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n// OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n//\n/**\n * All code is in an anonymous closure to keep the global namespace clean.\n *\n * @param {number=} overflow \n * @param {number=} startdenom\n */\n\n// Patched by Seb so that seedrandom.js does not pollute the Math object.\n// My tests suggest that doing Math.trouble = 1 makes Math lookups about 5%\n// slower.\nnumeric.seedrandom = { pow:Math.pow, random:Math.random };\n\n(function (pool, math, width, chunks, significance, overflow, startdenom) {\n\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nmath['seedrandom'] = function seedrandom(seed, use_entropy) {\n  var key = [];\n  var arc4;\n\n  // Flatten the seed string or build one from local entropy if needed.\n  seed = mixkey(flatten(\n    use_entropy ? [seed, pool] :\n    arguments.length ? seed :\n    [new Date().getTime(), pool, window], 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  arc4 = new ARC4(key);\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(arc4.S, pool);\n\n  // Override Math.random\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n\n  math['random'] = function random() {  // Closure to return a random double:\n    var n = arc4.g(chunks);             // Start with a numerator n < 2 ^ 48\n    var d = startdenom;                 //   and denominator d = 2 ^ 48.\n    var x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  // Return the seed that was used\n  return seed;\n};\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\n/** @constructor */\nfunction ARC4(key) {\n  var t, u, me = this, keylen = key.length;\n  var i = 0, j = me.i = me.j = me.m = 0;\n  me.S = [];\n  me.c = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) { me.S[i] = i++; }\n  for (i = 0; i < width; i++) {\n    t = me.S[i];\n    j = lowbits(j + t + key[i % keylen]);\n    u = me.S[j];\n    me.S[i] = u;\n    me.S[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  me.g = function getnext(count) {\n    var s = me.S;\n    var i = lowbits(me.i + 1); var t = s[i];\n    var j = lowbits(me.j + t); var u = s[j];\n    s[i] = u;\n    s[j] = t;\n    var r = s[lowbits(t + u)];\n    while (--count) {\n      i = lowbits(i + 1); t = s[i];\n      j = lowbits(j + t); u = s[j];\n      s[i] = u;\n      s[j] = t;\n      r = r * width + s[lowbits(t + u)];\n    }\n    me.i = i;\n    me.j = j;\n    return r;\n  };\n  // For robust unpredictability discard an initial batch of values.\n  // See http://www.rsa.com/rsalabs/node.asp?id=2009\n  me.g(width);\n}\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\n/** @param {Object=} result \n  * @param {string=} prop\n  * @param {string=} typ */\nfunction flatten(obj, depth, result, prop, typ) {\n  result = [];\n  typ = typeof(obj);\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      if (prop.indexOf('S') < 5) {    // Avoid FF3 bug (local/sessionStorage)\n        try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n      }\n    }\n  }\n  return (result.length ? result : obj + (typ != 'string' ? '\\0' : ''));\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\n/** @param {number=} smear \n  * @param {number=} j */\nfunction mixkey(seed, key, smear, j) {\n  seed += '';                         // Ensure the seed is a string\n  smear = 0;\n  for (j = 0; j < seed.length; j++) {\n    key[lowbits(j)] =\n      lowbits((smear ^= key[lowbits(j)] * 19) + seed.charCodeAt(j));\n  }\n  seed = '';\n  for (j in key) { seed += String.fromCharCode(key[j]); }\n  return seed;\n}\n\n//\n// lowbits()\n// A quick \"n mod width\" for width a power of 2.\n//\nfunction lowbits(n) { return n & (width - 1); }\n\n//\n// The following constants are related to IEEE 754 limits.\n//\nstartdenom = math.pow(width, chunks);\nsignificance = math.pow(2, significance);\noverflow = significance * 2;\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to intefere with determinstic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n// End anonymous scope, and pass initial values.\n}(\n  [],   // pool: entropy pool starts empty\n  numeric.seedrandom, // math: package containing random, pow, and seedrandom\n  256,  // width: each RC4 output is 0 <= x < 256\n  6,    // chunks: at least six RC4 outputs for each double\n  52    // significance: there are 52 significant digits in a double\n  ));\n/* This file is a slightly modified version of quadprog.js from Alberto Santini.\n * It has been slightly modified by Sébastien Loisel to make sure that it handles\n * 0-based Arrays instead of 1-based Arrays.\n * License is in resources/LICENSE.quadprog */\n(function(exports) {\n\nfunction base0to1(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=0;i<n;i++) ret[i+1] = base0to1(A[i]);\n    return ret;\n}\nfunction base1to0(A) {\n    if(typeof A !== \"object\") { return A; }\n    var ret = [], i,n=A.length;\n    for(i=1;i<n;i++) ret[i-1] = base1to0(A[i]);\n    return ret;\n}\n\nfunction dpori(a, lda, n) {\n    var i, j, k, kp1, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        a[k][k] = 1 / a[k][k];\n        t = -a[k][k];\n        //~ dscal(k - 1, t, a[1][k], 1);\n        for (i = 1; i < k; i = i + 1) {\n            a[i][k] = t * a[i][k];\n        }\n\n        kp1 = k + 1;\n        if (n < kp1) {\n            break;\n        }\n        for (j = kp1; j <= n; j = j + 1) {\n            t = a[k][j];\n            a[k][j] = 0;\n            //~ daxpy(k, t, a[1][k], 1, a[1][j], 1);\n            for (i = 1; i <= k; i = i + 1) {\n                a[i][j] = a[i][j] + (t * a[i][k]);\n            }\n        }\n    }\n\n}\n\nfunction dposl(a, lda, n, b) {\n    var i, k, kb, t;\n\n    for (k = 1; k <= n; k = k + 1) {\n        //~ t = ddot(k - 1, a[1][k], 1, b[1], 1);\n        t = 0;\n        for (i = 1; i < k; i = i + 1) {\n            t = t + (a[i][k] * b[i]);\n        }\n\n        b[k] = (b[k] - t) / a[k][k];\n    }\n\n    for (kb = 1; kb <= n; kb = kb + 1) {\n        k = n + 1 - kb;\n        b[k] = b[k] / a[k][k];\n        t = -b[k];\n        //~ daxpy(k - 1, t, a[1][k], 1, b[1], 1);\n        for (i = 1; i < k; i = i + 1) {\n            b[i] = b[i] + (t * a[i][k]);\n        }\n    }\n}\n\nfunction dpofa(a, lda, n, info) {\n    var i, j, jm1, k, t, s;\n\n    for (j = 1; j <= n; j = j + 1) {\n        info[1] = j;\n        s = 0;\n        jm1 = j - 1;\n        if (jm1 < 1) {\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        } else {\n            for (k = 1; k <= jm1; k = k + 1) {\n                //~ t = a[k][j] - ddot(k - 1, a[1][k], 1, a[1][j], 1);\n                t = a[k][j];\n                for (i = 1; i < k; i = i + 1) {\n                    t = t - (a[i][j] * a[i][k]);\n                }\n                t = t / a[k][k];\n                a[k][j] = t;\n                s = s + t * t;\n            }\n            s = a[j][j] - s;\n            if (s <= 0) {\n                break;\n            }\n            a[j][j] = Math.sqrt(s);\n        }\n        info[1] = 0;\n    }\n}\n\nfunction qpgen2(dmat, dvec, fddmat, n, sol, crval, amat,\n    bvec, fdamat, q, meq, iact, nact, iter, work, ierr) {\n\n    var i, j, l, l1, info, it1, iwzv, iwrv, iwrm, iwsv, iwuv, nvl, r, iwnbv,\n        temp, sum, t1, tt, gc, gs, nu,\n        t1inf, t2min,\n        vsmall, tmpa, tmpb,\n        go;\n\n    r = Math.min(n, q);\n    l = 2 * n + (r * (r + 5)) / 2 + 2 * q + 1;\n\n    vsmall = 1.0e-60;\n    do {\n        vsmall = vsmall + vsmall;\n        tmpa = 1 + 0.1 * vsmall;\n        tmpb = 1 + 0.2 * vsmall;\n    } while (tmpa <= 1 || tmpb <= 1);\n\n    for (i = 1; i <= n; i = i + 1) {\n        work[i] = dvec[i];\n    }\n    for (i = n + 1; i <= l; i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n\n    info = [];\n\n    if (ierr[1] === 0) {\n        dpofa(dmat, fddmat, n, info);\n        if (info[1] !== 0) {\n            ierr[1] = 2;\n            return;\n        }\n        dposl(dmat, fddmat, n, dvec);\n        dpori(dmat, fddmat, n);\n    } else {\n        for (j = 1; j <= n; j = j + 1) {\n            sol[j] = 0;\n            for (i = 1; i <= j; i = i + 1) {\n                sol[j] = sol[j] + dmat[i][j] * dvec[i];\n            }\n        }\n        for (j = 1; j <= n; j = j + 1) {\n            dvec[j] = 0;\n            for (i = j; i <= n; i = i + 1) {\n                dvec[j] = dvec[j] + dmat[j][i] * sol[i];\n            }\n        }\n    }\n\n    crval[1] = 0;\n    for (j = 1; j <= n; j = j + 1) {\n        sol[j] = dvec[j];\n        crval[1] = crval[1] + work[j] * sol[j];\n        work[j] = 0;\n        for (i = j + 1; i <= n; i = i + 1) {\n            dmat[i][j] = 0;\n        }\n    }\n    crval[1] = -crval[1] / 2;\n    ierr[1] = 0;\n\n    iwzv = n;\n    iwrv = iwzv + n;\n    iwuv = iwrv + r;\n    iwrm = iwuv + r + 1;\n    iwsv = iwrm + (r * (r + 1)) / 2;\n    iwnbv = iwsv + q;\n\n    for (i = 1; i <= q; i = i + 1) {\n        sum = 0;\n        for (j = 1; j <= n; j = j + 1) {\n            sum = sum + amat[j][i] * amat[j][i];\n        }\n        work[iwnbv + i] = Math.sqrt(sum);\n    }\n    nact = 0;\n    iter[1] = 0;\n    iter[2] = 0;\n\n    function fn_goto_50() {\n        iter[1] = iter[1] + 1;\n\n        l = iwsv;\n        for (i = 1; i <= q; i = i + 1) {\n            l = l + 1;\n            sum = -bvec[i];\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + amat[j][i] * sol[j];\n            }\n            if (Math.abs(sum) < vsmall) {\n                sum = 0;\n            }\n            if (i > meq) {\n                work[l] = sum;\n            } else {\n                work[l] = -Math.abs(sum);\n                if (sum > 0) {\n                    for (j = 1; j <= n; j = j + 1) {\n                        amat[j][i] = -amat[j][i];\n                    }\n                    bvec[i] = -bvec[i];\n                }\n            }\n        }\n\n        for (i = 1; i <= nact; i = i + 1) {\n            work[iwsv + iact[i]] = 0;\n        }\n\n        nvl = 0;\n        temp = 0;\n        for (i = 1; i <= q; i = i + 1) {\n            if (work[iwsv + i] < temp * work[iwnbv + i]) {\n                nvl = i;\n                temp = work[iwsv + i] / work[iwnbv + i];\n            }\n        }\n        if (nvl === 0) {\n            return 999;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_55() {\n        for (i = 1; i <= n; i = i + 1) {\n            sum = 0;\n            for (j = 1; j <= n; j = j + 1) {\n                sum = sum + dmat[j][i] * amat[j][nvl];\n            }\n            work[i] = sum;\n        }\n\n        l1 = iwzv;\n        for (i = 1; i <= n; i = i + 1) {\n            work[l1 + i] = 0;\n        }\n        for (j = nact + 1; j <= n; j = j + 1) {\n            for (i = 1; i <= n; i = i + 1) {\n                work[l1 + i] = work[l1 + i] + dmat[i][j] * work[j];\n            }\n        }\n\n        t1inf = true;\n        for (i = nact; i >= 1; i = i - 1) {\n            sum = work[i];\n            l = iwrm + (i * (i + 3)) / 2;\n            l1 = l - i;\n            for (j = i + 1; j <= nact; j = j + 1) {\n                sum = sum - work[l] * work[iwrv + j];\n                l = l + j;\n            }\n            sum = sum / work[l1];\n            work[iwrv + i] = sum;\n            if (iact[i] < meq) {\n                // continue;\n                break;\n            }\n            if (sum < 0) {\n                // continue;\n                break;\n            }\n            t1inf = false;\n            it1 = i;\n        }\n\n        if (!t1inf) {\n            t1 = work[iwuv + it1] / work[iwrv + it1];\n            for (i = 1; i <= nact; i = i + 1) {\n                if (iact[i] < meq) {\n                    // continue;\n                    break;\n                }\n                if (work[iwrv + i] < 0) {\n                    // continue;\n                    break;\n                }\n                temp = work[iwuv + i] / work[iwrv + i];\n                if (temp < t1) {\n                    t1 = temp;\n                    it1 = i;\n                }\n            }\n        }\n\n        sum = 0;\n        for (i = iwzv + 1; i <= iwzv + n; i = i + 1) {\n            sum = sum + work[i] * work[i];\n        }\n        if (Math.abs(sum) <= vsmall) {\n            if (t1inf) {\n                ierr[1] = 1;\n                // GOTO 999\n                return 999;\n            } else {\n                for (i = 1; i <= nact; i = i + 1) {\n                    work[iwuv + i] = work[iwuv + i] - t1 * work[iwrv + i];\n                }\n                work[iwuv + nact + 1] = work[iwuv + nact + 1] + t1;\n                // GOTO 700\n                return 700;\n            }\n        } else {\n            sum = 0;\n            for (i = 1; i <= n; i = i + 1) {\n                sum = sum + work[iwzv + i] * amat[i][nvl];\n            }\n            tt = -work[iwsv + nvl] / sum;\n            t2min = true;\n            if (!t1inf) {\n                if (t1 < tt) {\n                    tt = t1;\n                    t2min = false;\n                }\n            }\n\n            for (i = 1; i <= n; i = i + 1) {\n                sol[i] = sol[i] + tt * work[iwzv + i];\n                if (Math.abs(sol[i]) < vsmall) {\n                    sol[i] = 0;\n                }\n            }\n\n            crval[1] = crval[1] + tt * sum * (tt / 2 + work[iwuv + nact + 1]);\n            for (i = 1; i <= nact; i = i + 1) {\n                work[iwuv + i] = work[iwuv + i] - tt * work[iwrv + i];\n            }\n            work[iwuv + nact + 1] = work[iwuv + nact + 1] + tt;\n\n            if (t2min) {\n                nact = nact + 1;\n                iact[nact] = nvl;\n\n                l = iwrm + ((nact - 1) * nact) / 2 + 1;\n                for (i = 1; i <= nact - 1; i = i + 1) {\n                    work[l] = work[i];\n                    l = l + 1;\n                }\n\n                if (nact === n) {\n                    work[l] = work[n];\n                } else {\n                    for (i = n; i >= nact + 1; i = i - 1) {\n                        if (work[i] === 0) {\n                            // continue;\n                            break;\n                        }\n                        gc = Math.max(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        gs = Math.min(Math.abs(work[i - 1]), Math.abs(work[i]));\n                        if (work[i - 1] >= 0) {\n                            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        } else {\n                            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n                        }\n                        gc = work[i - 1] / temp;\n                        gs = work[i] / temp;\n\n                        if (gc === 1) {\n                            // continue;\n                            break;\n                        }\n                        if (gc === 0) {\n                            work[i - 1] = gs * temp;\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = dmat[j][i - 1];\n                                dmat[j][i - 1] = dmat[j][i];\n                                dmat[j][i] = temp;\n                            }\n                        } else {\n                            work[i - 1] = temp;\n                            nu = gs / (1 + gc);\n                            for (j = 1; j <= n; j = j + 1) {\n                                temp = gc * dmat[j][i - 1] + gs * dmat[j][i];\n                                dmat[j][i] = nu * (dmat[j][i - 1] + temp) - dmat[j][i];\n                                dmat[j][i - 1] = temp;\n\n                            }\n                        }\n                    }\n                    work[l] = work[nact];\n                }\n            } else {\n                sum = -bvec[nvl];\n                for (j = 1; j <= n; j = j + 1) {\n                    sum = sum + sol[j] * amat[j][nvl];\n                }\n                if (nvl > meq) {\n                    work[iwsv + nvl] = sum;\n                } else {\n                    work[iwsv + nvl] = -Math.abs(sum);\n                    if (sum > 0) {\n                        for (j = 1; j <= n; j = j + 1) {\n                            amat[j][nvl] = -amat[j][nvl];\n                        }\n                        bvec[nvl] = -bvec[nvl];\n                    }\n                }\n                // GOTO 700\n                return 700;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_797() {\n        l = iwrm + (it1 * (it1 + 1)) / 2 + 1;\n        l1 = l + it1;\n        if (work[l1] === 0) {\n            // GOTO 798\n            return 798;\n        }\n        gc = Math.max(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        gs = Math.min(Math.abs(work[l1 - 1]), Math.abs(work[l1]));\n        if (work[l1 - 1] >= 0) {\n            temp = Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        } else {\n            temp = -Math.abs(gc * Math.sqrt(1 + gs * gs / (gc * gc)));\n        }\n        gc = work[l1 - 1] / temp;\n        gs = work[l1] / temp;\n\n        if (gc === 1) {\n            // GOTO 798\n            return 798;\n        }\n        if (gc === 0) {\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = work[l1 - 1];\n                work[l1 - 1] = work[l1];\n                work[l1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = dmat[i][it1];\n                dmat[i][it1] = dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = temp;\n            }\n        } else {\n            nu = gs / (1 + gc);\n            for (i = it1 + 1; i <= nact; i = i + 1) {\n                temp = gc * work[l1 - 1] + gs * work[l1];\n                work[l1] = nu * (work[l1 - 1] + temp) - work[l1];\n                work[l1 - 1] = temp;\n                l1 = l1 + i;\n            }\n            for (i = 1; i <= n; i = i + 1) {\n                temp = gc * dmat[i][it1] + gs * dmat[i][it1 + 1];\n                dmat[i][it1 + 1] = nu * (dmat[i][it1] + temp) - dmat[i][it1 + 1];\n                dmat[i][it1] = temp;\n            }\n        }\n\n        return 0;\n    }\n\n    function fn_goto_798() {\n        l1 = l - it1;\n        for (i = 1; i <= it1; i = i + 1) {\n            work[l1] = work[l];\n            l = l + 1;\n            l1 = l1 + 1;\n        }\n\n        work[iwuv + it1] = work[iwuv + it1 + 1];\n        iact[it1] = iact[it1 + 1];\n        it1 = it1 + 1;\n        if (it1 < nact) {\n            // GOTO 797\n            return 797;\n        }\n\n        return 0;\n    }\n\n    function fn_goto_799() {\n        work[iwuv + nact] = work[iwuv + nact + 1];\n        work[iwuv + nact + 1] = 0;\n        iact[nact] = 0;\n        nact = nact - 1;\n        iter[2] = iter[2] + 1;\n\n        return 0;\n    }\n\n    go = 0;\n    while (true) {\n        go = fn_goto_50();\n        if (go === 999) {\n            return;\n        }\n        while (true) {\n            go = fn_goto_55();\n            if (go === 0) {\n                break;\n            }\n            if (go === 999) {\n                return;\n            }\n            if (go === 700) {\n                if (it1 === nact) {\n                    fn_goto_799();\n                } else {\n                    while (true) {\n                        fn_goto_797();\n                        go = fn_goto_798();\n                        if (go !== 797) {\n                            break;\n                        }\n                    }\n                    fn_goto_799();\n                }\n            }\n        }\n    }\n\n}\n\nfunction solveQP(Dmat, dvec, Amat, bvec, meq, factorized) {\n    Dmat = base0to1(Dmat);\n    dvec = base0to1(dvec);\n    Amat = base0to1(Amat);\n    var i, n, q,\n        nact, r,\n        crval = [], iact = [], sol = [], work = [], iter = [],\n        message;\n\n    meq = meq || 0;\n    factorized = factorized ? base0to1(factorized) : [undefined, 0];\n    bvec = bvec ? base0to1(bvec) : [];\n\n    // In Fortran the array index starts from 1\n    n = Dmat.length - 1;\n    q = Amat[1].length - 1;\n\n    if (!bvec) {\n        for (i = 1; i <= q; i = i + 1) {\n            bvec[i] = 0;\n        }\n    }\n    for (i = 1; i <= q; i = i + 1) {\n        iact[i] = 0;\n    }\n    nact = 0;\n    r = Math.min(n, q);\n    for (i = 1; i <= n; i = i + 1) {\n        sol[i] = 0;\n    }\n    crval[1] = 0;\n    for (i = 1; i <= (2 * n + (r * (r + 5)) / 2 + 2 * q + 1); i = i + 1) {\n        work[i] = 0;\n    }\n    for (i = 1; i <= 2; i = i + 1) {\n        iter[i] = 0;\n    }\n\n    qpgen2(Dmat, dvec, n, n, sol, crval, Amat,\n        bvec, n, q, meq, iact, nact, iter, work, factorized);\n\n    message = \"\";\n    if (factorized[1] === 1) {\n        message = \"constraints are inconsistent, no solution!\";\n    }\n    if (factorized[1] === 2) {\n        message = \"matrix D in quadratic function is not positive definite!\";\n    }\n\n    return {\n        solution: base1to0(sol),\n        value: base1to0(crval),\n        unconstrained_solution: base1to0(dvec),\n        iterations: base1to0(iter),\n        iact: base1to0(iact),\n        message: message\n    };\n}\nexports.solveQP = solveQP;\n}(numeric));\n/*\r\nShanti Rao sent me this routine by private email. I had to modify it\r\nslightly to work on Arrays instead of using a Matrix object.\r\nIt is apparently translated from http://stitchpanorama.sourceforge.net/Python/svd.py\r\n*/\r\n\r\nnumeric.svd= function svd(A) {\r\n    var temp;\r\n//Compute the thin SVD from G. H. Golub and C. Reinsch, Numer. Math. 14, 403-420 (1970)\r\n\tvar prec= numeric.epsilon; //Math.pow(2,-52) // assumes double prec\r\n\tvar tolerance= 1.e-64/prec;\r\n\tvar itmax= 50;\r\n\tvar c=0;\r\n\tvar i=0;\r\n\tvar j=0;\r\n\tvar k=0;\r\n\tvar l=0;\r\n\t\r\n\tvar u= numeric.clone(A);\r\n\tvar m= u.length;\r\n\t\r\n\tvar n= u[0].length;\r\n\t\r\n\tif (m < n) throw \"Need more rows than columns\"\r\n\t\r\n\tvar e = new Array(n);\r\n\tvar q = new Array(n);\r\n\tfor (i=0; i<n; i++) e[i] = q[i] = 0.0;\r\n\tvar v = numeric.rep([n,n],0);\r\n//\tv.zero();\r\n\t\r\n \tfunction pythag(a,b)\r\n \t{\r\n\t\ta = Math.abs(a)\r\n\t\tb = Math.abs(b)\r\n\t\tif (a > b)\r\n\t\t\treturn a*Math.sqrt(1.0+(b*b/a/a))\r\n\t\telse if (b == 0.0) \r\n\t\t\treturn a\r\n\t\treturn b*Math.sqrt(1.0+(a*a/b/b))\r\n\t}\r\n\r\n\t//Householder's reduction to bidiagonal form\r\n\r\n\tvar f= 0.0;\r\n\tvar g= 0.0;\r\n\tvar h= 0.0;\r\n\tvar x= 0.0;\r\n\tvar y= 0.0;\r\n\tvar z= 0.0;\r\n\tvar s= 0.0;\r\n\t\r\n\tfor (i=0; i < n; i++)\r\n\t{\t\r\n\t\te[i]= g;\r\n\t\ts= 0.0;\r\n\t\tl= i+1;\r\n\t\tfor (j=i; j < m; j++) \r\n\t\t\ts += (u[j][i]*u[j][i]);\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0;\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i];\r\n\t\t\tg= Math.sqrt(s);\r\n\t\t\tif (f >= 0.0) g= -g;\r\n\t\t\th= f*g-s\r\n\t\t\tu[i][i]=f-g;\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts= 0.0\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\ts += u[k][i]*u[k][j]\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) \r\n\t\t\t\t\tu[k][j]+=f*u[k][i]\r\n\t\t\t}\r\n\t\t}\r\n\t\tq[i]= g\r\n\t\ts= 0.0\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\ts= s + u[i][j]*u[i][j]\r\n\t\tif (s <= tolerance)\r\n\t\t\tg= 0.0\r\n\t\telse\r\n\t\t{\t\r\n\t\t\tf= u[i][i+1]\r\n\t\t\tg= Math.sqrt(s)\r\n\t\t\tif (f >= 0.0) g= -g\r\n\t\t\th= f*g - s\r\n\t\t\tu[i][i+1] = f-g;\r\n\t\t\tfor (j=l; j < n; j++) e[j]= u[i][j]/h\r\n\t\t\tfor (j=l; j < m; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += (u[j][k]*u[i][k])\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tu[j][k]+=s*e[k]\r\n\t\t\t}\t\r\n\t\t}\r\n\t\ty= Math.abs(q[i])+Math.abs(e[i])\r\n\t\tif (y>x) \r\n\t\t\tx=y\r\n\t}\r\n\t\r\n\t// accumulation of right hand gtransformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t \th= g*u[i][i+1]\r\n\t\t\tfor (j=l; j < n; j++) \r\n\t\t\t\tv[j][i]=u[i][j]/h\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\t\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\ts += u[i][k]*v[k][j]\r\n\t\t\t\tfor (k=l; k < n; k++) \r\n\t\t\t\t\tv[k][j]+=(s*v[k][i])\r\n\t\t\t}\t\r\n\t\t}\r\n\t\tfor (j=l; j < n; j++)\r\n\t\t{\r\n\t\t\tv[i][j] = 0;\r\n\t\t\tv[j][i] = 0;\r\n\t\t}\r\n\t\tv[i][i] = 1;\r\n\t\tg= e[i]\r\n\t\tl= i\r\n\t}\r\n\t\r\n\t// accumulation of left hand transformations\r\n\tfor (i=n-1; i != -1; i+= -1)\r\n\t{\t\r\n\t\tl= i+1\r\n\t\tg= q[i]\r\n\t\tfor (j=l; j < n; j++) \r\n\t\t\tu[i][j] = 0;\r\n\t\tif (g != 0.0)\r\n\t\t{\r\n\t\t\th= u[i][i]*g\r\n\t\t\tfor (j=l; j < n; j++)\r\n\t\t\t{\r\n\t\t\t\ts=0.0\r\n\t\t\t\tfor (k=l; k < m; k++) s += u[k][i]*u[k][j];\r\n\t\t\t\tf= s/h\r\n\t\t\t\tfor (k=i; k < m; k++) u[k][j]+=f*u[k][i];\r\n\t\t\t}\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = u[j][i]/g;\r\n\t\t}\r\n\t\telse\r\n\t\t\tfor (j=i; j < m; j++) u[j][i] = 0;\r\n\t\tu[i][i] += 1;\r\n\t}\r\n\t\r\n\t// diagonalization of the bidiagonal form\r\n\tprec= prec*x\r\n\tfor (k=n-1; k != -1; k+= -1)\r\n\t{\r\n\t\tfor (var iteration=0; iteration < itmax; iteration++)\r\n\t\t{\t// test f splitting\r\n\t\t\tvar test_convergence = false\r\n\t\t\tfor (l=k; l != -1; l+= -1)\r\n\t\t\t{\t\r\n\t\t\t\tif (Math.abs(e[l]) <= prec)\r\n\t\t\t\t{\ttest_convergence= true\r\n\t\t\t\t\tbreak \r\n\t\t\t\t}\r\n\t\t\t\tif (Math.abs(q[l-1]) <= prec)\r\n\t\t\t\t\tbreak \r\n\t\t\t}\r\n\t\t\tif (!test_convergence)\r\n\t\t\t{\t// cancellation of e[l] if l>0\r\n\t\t\t\tc= 0.0\r\n\t\t\t\ts= 1.0\r\n\t\t\t\tvar l1= l-1\r\n\t\t\t\tfor (i =l; i<k+1; i++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tf= s*e[i]\r\n\t\t\t\t\te[i]= c*e[i]\r\n\t\t\t\t\tif (Math.abs(f) <= prec)\r\n\t\t\t\t\t\tbreak\r\n\t\t\t\t\tg= q[i]\r\n\t\t\t\t\th= pythag(f,g)\r\n\t\t\t\t\tq[i]= h\r\n\t\t\t\t\tc= g/h\r\n\t\t\t\t\ts= -f/h\r\n\t\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t\t{\t\r\n\t\t\t\t\t\ty= u[j][l1]\r\n\t\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\t\tu[j][l1] =  y*c+(z*s)\r\n\t\t\t\t\t\tu[j][i] = -y*s+(z*c)\r\n\t\t\t\t\t} \r\n\t\t\t\t}\t\r\n\t\t\t}\r\n\t\t\t// test f convergence\r\n\t\t\tz= q[k]\r\n\t\t\tif (l== k)\r\n\t\t\t{\t//convergence\r\n\t\t\t\tif (z<0.0)\r\n\t\t\t\t{\t//q[k] is made non-negative\r\n\t\t\t\t\tq[k]= -z\r\n\t\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t\t\tv[j][k] = -v[j][k]\r\n\t\t\t\t}\r\n\t\t\t\tbreak  //break out of iteration loop and move on to next k value\r\n\t\t\t}\r\n\t\t\tif (iteration >= itmax-1)\r\n\t\t\t\tthrow 'Error: no convergence.'\r\n\t\t\t// shift from bottom 2x2 minor\r\n\t\t\tx= q[l]\r\n\t\t\ty= q[k-1]\r\n\t\t\tg= e[k-1]\r\n\t\t\th= e[k]\r\n\t\t\tf= ((y-z)*(y+z)+(g-h)*(g+h))/(2.0*h*y)\r\n\t\t\tg= pythag(f,1.0)\r\n\t\t\tif (f < 0.0)\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f-g)-h))/x\r\n\t\t\telse\r\n\t\t\t\tf= ((x-z)*(x+z)+h*(y/(f+g)-h))/x\r\n\t\t\t// next QR transformation\r\n\t\t\tc= 1.0\r\n\t\t\ts= 1.0\r\n\t\t\tfor (i=l+1; i< k+1; i++)\r\n\t\t\t{\t\r\n\t\t\t\tg= e[i]\r\n\t\t\t\ty= q[i]\r\n\t\t\t\th= s*g\r\n\t\t\t\tg= c*g\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\te[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= x*c+g*s\r\n\t\t\t\tg= -x*s+g*c\r\n\t\t\t\th= y*s\r\n\t\t\t\ty= y*c\r\n\t\t\t\tfor (j=0; j < n; j++)\r\n\t\t\t\t{\t\r\n\t\t\t\t\tx= v[j][i-1]\r\n\t\t\t\t\tz= v[j][i]\r\n\t\t\t\t\tv[j][i-1] = x*c+z*s\r\n\t\t\t\t\tv[j][i] = -x*s+z*c\r\n\t\t\t\t}\r\n\t\t\t\tz= pythag(f,h)\r\n\t\t\t\tq[i-1]= z\r\n\t\t\t\tc= f/z\r\n\t\t\t\ts= h/z\r\n\t\t\t\tf= c*g+s*y\r\n\t\t\t\tx= -s*g+c*y\r\n\t\t\t\tfor (j=0; j < m; j++)\r\n\t\t\t\t{\r\n\t\t\t\t\ty= u[j][i-1]\r\n\t\t\t\t\tz= u[j][i]\r\n\t\t\t\t\tu[j][i-1] = y*c+z*s\r\n\t\t\t\t\tu[j][i] = -y*s+z*c\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\te[l]= 0.0\r\n\t\t\te[k]= f\r\n\t\t\tq[k]= x\r\n\t\t} \r\n\t}\r\n\t\t\r\n\t//vt= transpose(v)\r\n\t//return (u,q,vt)\r\n\tfor (i=0;i<q.length; i++) \r\n\t  if (q[i] < prec) q[i] = 0\r\n\t  \r\n\t//sort eigenvalues\t\r\n\tfor (i=0; i< n; i++)\r\n\t{\t \r\n\t//writeln(q)\r\n\t for (j=i-1; j >= 0; j--)\r\n\t {\r\n\t  if (q[j] < q[i])\r\n\t  {\r\n\t//  writeln(i,'-',j)\r\n\t   c = q[j]\r\n\t   q[j] = q[i]\r\n\t   q[i] = c\r\n\t   for(k=0;k<u.length;k++) { temp = u[k][i]; u[k][i] = u[k][j]; u[k][j] = temp; }\r\n\t   for(k=0;k<v.length;k++) { temp = v[k][i]; v[k][i] = v[k][j]; v[k][j] = temp; }\r\n//\t   u.swapCols(i,j)\r\n//\t   v.swapCols(i,j)\r\n\t   i = j\t   \r\n\t  }\r\n\t }\t\r\n\t}\r\n\t\r\n\treturn {U:u,S:q,V:v}\r\n};\r\n\r\n","var arrayWithHoles = require(\"./arrayWithHoles\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableRest = require(\"./nonIterableRest\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray;","function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nmodule.exports = _classCallCheck;","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nmodule.exports = _createClass;","function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    module.exports = _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    module.exports = _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nmodule.exports = _typeof;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","var setPrototypeOf = require(\"./setPrototypeOf\");\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}\n\nmodule.exports = _inherits;","function _getPrototypeOf(o) {\n  module.exports = _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nmodule.exports = _getPrototypeOf;","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray;","var _typeof = require(\"../helpers/typeof\");\n\nvar assertThisInitialized = require(\"./assertThisInitialized\");\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}\n\nmodule.exports = _possibleConstructorReturn;","\nvar mvtdstpack = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  return (\nfunction(mvtdstpack) {\n  mvtdstpack = mvtdstpack || {};\n\nvar Module=typeof mvtdstpack!==\"undefined\"?mvtdstpack:{};var moduleOverrides={};var key;for(key in Module){if(Module.hasOwnProperty(key)){moduleOverrides[key]=Module[key]}}Module[\"arguments\"]=[];Module[\"thisProgram\"]=\"./this.program\";Module[\"quit\"]=function(status,toThrow){throw toThrow};Module[\"preRun\"]=[];Module[\"postRun\"]=[];var ENVIRONMENT_IS_WEB=false;var ENVIRONMENT_IS_WORKER=false;var ENVIRONMENT_IS_NODE=false;var ENVIRONMENT_IS_SHELL=false;ENVIRONMENT_IS_WEB=typeof window===\"object\";ENVIRONMENT_IS_WORKER=typeof importScripts===\"function\";ENVIRONMENT_IS_NODE=typeof process===\"object\"&&typeof require===\"function\"&&!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_WORKER;ENVIRONMENT_IS_SHELL=!ENVIRONMENT_IS_WEB&&!ENVIRONMENT_IS_NODE&&!ENVIRONMENT_IS_WORKER;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}else{return scriptDirectory+path}}if(ENVIRONMENT_IS_NODE){scriptDirectory=__dirname+\"/\";var nodeFS;var nodePath;Module[\"read\"]=function shell_read(filename,binary){var ret;if(!nodeFS)nodeFS=require(\"fs\");if(!nodePath)nodePath=require(\"path\");filename=nodePath[\"normalize\"](filename);ret=nodeFS[\"readFileSync\"](filename);return binary?ret:ret.toString()};Module[\"readBinary\"]=function readBinary(filename){var ret=Module[\"read\"](filename,true);if(!ret.buffer){ret=new Uint8Array(ret)}assert(ret.buffer);return ret};if(process[\"argv\"].length>1){Module[\"thisProgram\"]=process[\"argv\"][1].replace(/\\\\/g,\"/\")}Module[\"arguments\"]=process[\"argv\"].slice(2);process[\"on\"](\"uncaughtException\",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process[\"on\"](\"unhandledRejection\",abort);Module[\"quit\"]=function(status){process[\"exit\"](status)};Module[\"inspect\"]=function(){return\"[Emscripten Module object]\"}}else if(ENVIRONMENT_IS_SHELL){if(typeof read!=\"undefined\"){Module[\"read\"]=function shell_read(f){return read(f)}}Module[\"readBinary\"]=function readBinary(f){var data;if(typeof readbuffer===\"function\"){return new Uint8Array(readbuffer(f))}data=read(f,\"binary\");assert(typeof data===\"object\");return data};if(typeof scriptArgs!=\"undefined\"){Module[\"arguments\"]=scriptArgs}else if(typeof arguments!=\"undefined\"){Module[\"arguments\"]=arguments}if(typeof quit===\"function\"){Module[\"quit\"]=function(status){quit(status)}}}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}Module[\"read\"]=function shell_read(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){Module[\"readBinary\"]=function readBinary(url){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}Module[\"readAsync\"]=function readAsync(url,onload,onerror){var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=function xhr_onload(){if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)};Module[\"setWindowTitle\"]=function(title){document.title=title}}else{}var out=Module[\"print\"]||(typeof console!==\"undefined\"?console.log.bind(console):typeof print!==\"undefined\"?print:null);var err=Module[\"printErr\"]||(typeof printErr!==\"undefined\"?printErr:typeof console!==\"undefined\"&&console.warn.bind(console)||out);for(key in moduleOverrides){if(moduleOverrides.hasOwnProperty(key)){Module[key]=moduleOverrides[key]}}moduleOverrides=undefined;var asm2wasmImports={\"f64-rem\":function(x,y){return x%y},\"debugger\":function(){debugger}};var functionPointers=new Array(0);var tempRet0=0;var setTempRet0=function(value){tempRet0=value};if(typeof WebAssembly!==\"object\"){err(\"no native wasm support detected\")}var wasmMemory;var wasmTable;var ABORT=false;var EXITSTATUS=0;function assert(condition,text){if(!condition){abort(\"Assertion failed: \"+text)}}var UTF8Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(u8Array,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(u8Array[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&u8Array.subarray&&UTF8Decoder){return UTF8Decoder.decode(u8Array.subarray(idx,endPtr))}else{var str=\"\";while(idx<endPtr){var u0=u8Array[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=u8Array[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=u8Array[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|u8Array[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}function stringToUTF8Array(str,outU8Array,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;outU8Array[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;outU8Array[outIdx++]=192|u>>6;outU8Array[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;outU8Array[outIdx++]=224|u>>12;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;outU8Array[outIdx++]=240|u>>18;outU8Array[outIdx++]=128|u>>12&63;outU8Array[outIdx++]=128|u>>6&63;outU8Array[outIdx++]=128|u&63}}outU8Array[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}function lengthBytesUTF8(str){var len=0;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343)u=65536+((u&1023)<<10)|str.charCodeAt(++i)&1023;if(u<=127)++len;else if(u<=2047)len+=2;else if(u<=65535)len+=3;else len+=4}return len}var UTF16Decoder=typeof TextDecoder!==\"undefined\"?new TextDecoder(\"utf-16le\"):undefined;var WASM_PAGE_SIZE=65536;var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferViews(){Module[\"HEAP8\"]=HEAP8=new Int8Array(buffer);Module[\"HEAP16\"]=HEAP16=new Int16Array(buffer);Module[\"HEAP32\"]=HEAP32=new Int32Array(buffer);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(buffer);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(buffer);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(buffer);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(buffer);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(buffer)}var DYNAMIC_BASE=9531216,DYNAMICTOP_PTR=4288304;var TOTAL_STACK=5242880;var INITIAL_TOTAL_MEMORY=Module[\"TOTAL_MEMORY\"]||16777216;if(INITIAL_TOTAL_MEMORY<TOTAL_STACK)err(\"TOTAL_MEMORY should be larger than TOTAL_STACK, was \"+INITIAL_TOTAL_MEMORY+\"! (TOTAL_STACK=\"+TOTAL_STACK+\")\");if(Module[\"buffer\"]){buffer=Module[\"buffer\"]}else{if(typeof WebAssembly===\"object\"&&typeof WebAssembly.Memory===\"function\"){wasmMemory=new WebAssembly.Memory({\"initial\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE,\"maximum\":INITIAL_TOTAL_MEMORY/WASM_PAGE_SIZE});buffer=wasmMemory.buffer}else{buffer=new ArrayBuffer(INITIAL_TOTAL_MEMORY)}}updateGlobalBufferViews();HEAP32[DYNAMICTOP_PTR>>2]=DYNAMIC_BASE;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){var callback=callbacks.shift();if(typeof callback==\"function\"){callback();continue}var func=callback.func;if(typeof func===\"number\"){if(callback.arg===undefined){Module[\"dynCall_v\"](func)}else{Module[\"dynCall_vi\"](func,callback.arg)}}else{func(callback.arg===undefined?null:callback.arg)}}}var __ATPRERUN__=[];var __ATINIT__=[];var __ATMAIN__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function ensureInitRuntime(){if(runtimeInitialized)return;runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function preMain(){callRuntimeCallbacks(__ATMAIN__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}Module[\"preloadedImages\"]={};Module[\"preloadedAudios\"]={};var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return String.prototype.startsWith?filename.startsWith(dataURIPrefix):filename.indexOf(dataURIPrefix)===0}var wasmBinaryFile=\"mvtdstpack.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(){try{if(Module[\"wasmBinary\"]){return new Uint8Array(Module[\"wasmBinary\"])}if(Module[\"readBinary\"]){return Module[\"readBinary\"](wasmBinaryFile)}else{throw\"both async and sync fetching of the wasm failed\"}}catch(err){abort(err)}}function getBinaryPromise(){if(!Module[\"wasmBinary\"]&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)&&typeof fetch===\"function\"){return fetch(wasmBinaryFile,{credentials:\"same-origin\"}).then(function(response){if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+wasmBinaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(function(){return getBinary()})}return new Promise(function(resolve,reject){resolve(getBinary())})}function createWasm(env){var info={\"env\":env,\"global\":{\"NaN\":NaN,Infinity:Infinity},\"global.Math\":Math,\"asm2wasm\":asm2wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;removeRunDependency(\"wasm-instantiate\")}addRunDependency(\"wasm-instantiate\");if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);return false}}function receiveInstantiatedSource(output){receiveInstance(output[\"instance\"])}function instantiateArrayBuffer(receiver){getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(receiver,function(reason){err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}if(!Module[\"wasmBinary\"]&&typeof WebAssembly.instantiateStreaming===\"function\"&&!isDataURI(wasmBinaryFile)&&typeof fetch===\"function\"){WebAssembly.instantiateStreaming(fetch(wasmBinaryFile,{credentials:\"same-origin\"}),info).then(receiveInstantiatedSource,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");instantiateArrayBuffer(receiveInstantiatedSource)})}else{instantiateArrayBuffer(receiveInstantiatedSource)}return{}}Module[\"asm\"]=function(global,env,providedBuffer){env[\"memory\"]=wasmMemory;env[\"table\"]=wasmTable=new WebAssembly.Table({\"initial\":110,\"maximum\":110,\"element\":\"anyfunc\"});env[\"__memory_base\"]=1024;env[\"__table_base\"]=0;var exports=createWasm(env);return exports};__ATINIT__.push({func:function(){globalCtors()}});function ___cxa_allocate_exception(size){return _malloc(size)}function __ZSt18uncaught_exceptionv(){return!!__ZSt18uncaught_exceptionv.uncaught_exception}function ___cxa_free_exception(ptr){try{return _free(ptr)}catch(e){}}var EXCEPTIONS={last:0,caught:[],infos:{},deAdjust:function(adjusted){if(!adjusted||EXCEPTIONS.infos[adjusted])return adjusted;for(var key in EXCEPTIONS.infos){var ptr=+key;var adj=EXCEPTIONS.infos[ptr].adjusted;var len=adj.length;for(var i=0;i<len;i++){if(adj[i]===adjusted){return ptr}}}return adjusted},addRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount++},decRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];assert(info.refcount>0);info.refcount--;if(info.refcount===0&&!info.rethrown){if(info.destructor){Module[\"dynCall_vi\"](info.destructor,ptr)}delete EXCEPTIONS.infos[ptr];___cxa_free_exception(ptr)}},clearRef:function(ptr){if(!ptr)return;var info=EXCEPTIONS.infos[ptr];info.refcount=0}};function ___cxa_throw(ptr,type,destructor){EXCEPTIONS.infos[ptr]={ptr:ptr,adjusted:[ptr],type:type,destructor:destructor,refcount:0,caught:false,rethrown:false};EXCEPTIONS.last=ptr;if(!(\"uncaught_exception\"in __ZSt18uncaught_exceptionv)){__ZSt18uncaught_exceptionv.uncaught_exception=1}else{__ZSt18uncaught_exceptionv.uncaught_exception++}throw ptr}var SYSCALLS={buffers:[null,[],[]],printChar:function(stream,curr){var buffer=SYSCALLS.buffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}},varargs:0,get:function(varargs){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(){var ret=UTF8ToString(SYSCALLS.get());return ret},get64:function(){var low=SYSCALLS.get(),high=SYSCALLS.get();return low},getZero:function(){SYSCALLS.get()}};function ___syscall140(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD(),offset_high=SYSCALLS.get(),offset_low=SYSCALLS.get(),result=SYSCALLS.get(),whence=SYSCALLS.get();return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall146(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.get(),iov=SYSCALLS.get(),iovcnt=SYSCALLS.get();var ret=0;for(var i=0;i<iovcnt;i++){var ptr=HEAP32[iov+i*8>>2];var len=HEAP32[iov+(i*8+4)>>2];for(var j=0;j<len;j++){SYSCALLS.printChar(stream,HEAPU8[ptr+j])}ret+=len}return ret}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}function ___syscall6(which,varargs){SYSCALLS.varargs=varargs;try{var stream=SYSCALLS.getStreamFromFD();return 0}catch(e){if(typeof FS===\"undefined\"||!(e instanceof FS.ErrnoError))abort(e);return-e.errno}}var structRegistrations={};function runDestructors(destructors){while(destructors.length){var ptr=destructors.pop();var del=destructors.pop();del(ptr)}}function simpleReadValueFromPointer(pointer){return this[\"fromWireType\"](HEAPU32[pointer>>2])}var awaitingDependencies={};var registeredTypes={};var typeDependencies={};var char_0=48;var char_9=57;function makeLegalFunctionName(name){if(undefined===name){return\"_unknown\"}name=name.replace(/[^a-zA-Z0-9_]/g,\"$\");var f=name.charCodeAt(0);if(f>=char_0&&f<=char_9){return\"_\"+name}else{return name}}function createNamedFunction(name,body){name=makeLegalFunctionName(name);return new Function(\"body\",\"return function \"+name+\"() {\\n\"+'    \"use strict\";'+\"    return body.apply(this, arguments);\\n\"+\"};\\n\")(body)}function extendError(baseErrorType,errorName){var errorClass=createNamedFunction(errorName,function(message){this.name=errorName;this.message=message;var stack=new Error(message).stack;if(stack!==undefined){this.stack=this.toString()+\"\\n\"+stack.replace(/^Error(:[^\\n]*)?\\n/,\"\")}});errorClass.prototype=Object.create(baseErrorType.prototype);errorClass.prototype.constructor=errorClass;errorClass.prototype.toString=function(){if(this.message===undefined){return this.name}else{return this.name+\": \"+this.message}};return errorClass}var InternalError=undefined;function throwInternalError(message){throw new InternalError(message)}function whenDependentTypesAreResolved(myTypes,dependentTypes,getTypeConverters){myTypes.forEach(function(type){typeDependencies[type]=dependentTypes});function onComplete(typeConverters){var myTypeConverters=getTypeConverters(typeConverters);if(myTypeConverters.length!==myTypes.length){throwInternalError(\"Mismatched type converter count\")}for(var i=0;i<myTypes.length;++i){registerType(myTypes[i],myTypeConverters[i])}}var typeConverters=new Array(dependentTypes.length);var unregisteredTypes=[];var registered=0;dependentTypes.forEach(function(dt,i){if(registeredTypes.hasOwnProperty(dt)){typeConverters[i]=registeredTypes[dt]}else{unregisteredTypes.push(dt);if(!awaitingDependencies.hasOwnProperty(dt)){awaitingDependencies[dt]=[]}awaitingDependencies[dt].push(function(){typeConverters[i]=registeredTypes[dt];++registered;if(registered===unregisteredTypes.length){onComplete(typeConverters)}})}});if(0===unregisteredTypes.length){onComplete(typeConverters)}}function __embind_finalize_value_object(structType){var reg=structRegistrations[structType];delete structRegistrations[structType];var rawConstructor=reg.rawConstructor;var rawDestructor=reg.rawDestructor;var fieldRecords=reg.fields;var fieldTypes=fieldRecords.map(function(field){return field.getterReturnType}).concat(fieldRecords.map(function(field){return field.setterArgumentType}));whenDependentTypesAreResolved([structType],fieldTypes,function(fieldTypes){var fields={};fieldRecords.forEach(function(field,i){var fieldName=field.fieldName;var getterReturnType=fieldTypes[i];var getter=field.getter;var getterContext=field.getterContext;var setterArgumentType=fieldTypes[i+fieldRecords.length];var setter=field.setter;var setterContext=field.setterContext;fields[fieldName]={read:function(ptr){return getterReturnType[\"fromWireType\"](getter(getterContext,ptr))},write:function(ptr,o){var destructors=[];setter(setterContext,ptr,setterArgumentType[\"toWireType\"](destructors,o));runDestructors(destructors)}}});return[{name:reg.name,\"fromWireType\":function(ptr){var rv={};for(var i in fields){rv[i]=fields[i].read(ptr)}rawDestructor(ptr);return rv},\"toWireType\":function(destructors,o){for(var fieldName in fields){if(!(fieldName in o)){throw new TypeError(\"Missing field\")}}var ptr=rawConstructor();for(fieldName in fields){fields[fieldName].write(ptr,o[fieldName])}if(destructors!==null){destructors.push(rawDestructor,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:rawDestructor}]})}function getShiftFromSize(size){switch(size){case 1:return 0;case 2:return 1;case 4:return 2;case 8:return 3;default:throw new TypeError(\"Unknown type size: \"+size)}}function embind_init_charCodes(){var codes=new Array(256);for(var i=0;i<256;++i){codes[i]=String.fromCharCode(i)}embind_charCodes=codes}var embind_charCodes=undefined;function readLatin1String(ptr){var ret=\"\";var c=ptr;while(HEAPU8[c]){ret+=embind_charCodes[HEAPU8[c++]]}return ret}var BindingError=undefined;function throwBindingError(message){throw new BindingError(message)}function registerType(rawType,registeredInstance,options){options=options||{};if(!(\"argPackAdvance\"in registeredInstance)){throw new TypeError(\"registerType registeredInstance requires argPackAdvance\")}var name=registeredInstance.name;if(!rawType){throwBindingError('type \"'+name+'\" must have a positive integer typeid pointer')}if(registeredTypes.hasOwnProperty(rawType)){if(options.ignoreDuplicateRegistrations){return}else{throwBindingError(\"Cannot register type '\"+name+\"' twice\")}}registeredTypes[rawType]=registeredInstance;delete typeDependencies[rawType];if(awaitingDependencies.hasOwnProperty(rawType)){var callbacks=awaitingDependencies[rawType];delete awaitingDependencies[rawType];callbacks.forEach(function(cb){cb()})}}function __embind_register_bool(rawType,name,size,trueValue,falseValue){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(wt){return!!wt},\"toWireType\":function(destructors,o){return o?trueValue:falseValue},\"argPackAdvance\":8,\"readValueFromPointer\":function(pointer){var heap;if(size===1){heap=HEAP8}else if(size===2){heap=HEAP16}else if(size===4){heap=HEAP32}else{throw new TypeError(\"Unknown boolean type size: \"+name)}return this[\"fromWireType\"](heap[pointer>>shift])},destructorFunction:null})}function ClassHandle_isAliasOf(other){if(!(this instanceof ClassHandle)){return false}if(!(other instanceof ClassHandle)){return false}var leftClass=this.$$.ptrType.registeredClass;var left=this.$$.ptr;var rightClass=other.$$.ptrType.registeredClass;var right=other.$$.ptr;while(leftClass.baseClass){left=leftClass.upcast(left);leftClass=leftClass.baseClass}while(rightClass.baseClass){right=rightClass.upcast(right);rightClass=rightClass.baseClass}return leftClass===rightClass&&left===right}function shallowCopyInternalPointer(o){return{count:o.count,deleteScheduled:o.deleteScheduled,preservePointerOnDelete:o.preservePointerOnDelete,ptr:o.ptr,ptrType:o.ptrType,smartPtr:o.smartPtr,smartPtrType:o.smartPtrType}}function throwInstanceAlreadyDeleted(obj){function getInstanceTypeName(handle){return handle.$$.ptrType.registeredClass.name}throwBindingError(getInstanceTypeName(obj)+\" instance already deleted\")}function ClassHandle_clone(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.preservePointerOnDelete){this.$$.count.value+=1;return this}else{var clone=Object.create(Object.getPrototypeOf(this),{$$:{value:shallowCopyInternalPointer(this.$$)}});clone.$$.count.value+=1;clone.$$.deleteScheduled=false;return clone}}function runDestructor(handle){var $$=handle.$$;if($$.smartPtr){$$.smartPtrType.rawDestructor($$.smartPtr)}else{$$.ptrType.registeredClass.rawDestructor($$.ptr)}}function ClassHandle_delete(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}this.$$.count.value-=1;var toDelete=0===this.$$.count.value;if(toDelete){runDestructor(this)}if(!this.$$.preservePointerOnDelete){this.$$.smartPtr=undefined;this.$$.ptr=undefined}}function ClassHandle_isDeleted(){return!this.$$.ptr}var delayFunction=undefined;var deletionQueue=[];function flushPendingDeletes(){while(deletionQueue.length){var obj=deletionQueue.pop();obj.$$.deleteScheduled=false;obj[\"delete\"]()}}function ClassHandle_deleteLater(){if(!this.$$.ptr){throwInstanceAlreadyDeleted(this)}if(this.$$.deleteScheduled&&!this.$$.preservePointerOnDelete){throwBindingError(\"Object already scheduled for deletion\")}deletionQueue.push(this);if(deletionQueue.length===1&&delayFunction){delayFunction(flushPendingDeletes)}this.$$.deleteScheduled=true;return this}function init_ClassHandle(){ClassHandle.prototype[\"isAliasOf\"]=ClassHandle_isAliasOf;ClassHandle.prototype[\"clone\"]=ClassHandle_clone;ClassHandle.prototype[\"delete\"]=ClassHandle_delete;ClassHandle.prototype[\"isDeleted\"]=ClassHandle_isDeleted;ClassHandle.prototype[\"deleteLater\"]=ClassHandle_deleteLater}function ClassHandle(){}var registeredPointers={};function ensureOverloadTable(proto,methodName,humanName){if(undefined===proto[methodName].overloadTable){var prevFunc=proto[methodName];proto[methodName]=function(){if(!proto[methodName].overloadTable.hasOwnProperty(arguments.length)){throwBindingError(\"Function '\"+humanName+\"' called with an invalid number of arguments (\"+arguments.length+\") - expects one of (\"+proto[methodName].overloadTable+\")!\")}return proto[methodName].overloadTable[arguments.length].apply(this,arguments)};proto[methodName].overloadTable=[];proto[methodName].overloadTable[prevFunc.argCount]=prevFunc}}function exposePublicSymbol(name,value,numArguments){if(Module.hasOwnProperty(name)){if(undefined===numArguments||undefined!==Module[name].overloadTable&&undefined!==Module[name].overloadTable[numArguments]){throwBindingError(\"Cannot register public name '\"+name+\"' twice\")}ensureOverloadTable(Module,name,name);if(Module.hasOwnProperty(numArguments)){throwBindingError(\"Cannot register multiple overloads of a function with the same number of arguments (\"+numArguments+\")!\")}Module[name].overloadTable[numArguments]=value}else{Module[name]=value;if(undefined!==numArguments){Module[name].numArguments=numArguments}}}function RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast){this.name=name;this.constructor=constructor;this.instancePrototype=instancePrototype;this.rawDestructor=rawDestructor;this.baseClass=baseClass;this.getActualType=getActualType;this.upcast=upcast;this.downcast=downcast;this.pureVirtualFunctions=[]}function upcastPointer(ptr,ptrClass,desiredClass){while(ptrClass!==desiredClass){if(!ptrClass.upcast){throwBindingError(\"Expected null or instance of \"+desiredClass.name+\", got an instance of \"+ptrClass.name)}ptr=ptrClass.upcast(ptr);ptrClass=ptrClass.baseClass}return ptr}function constNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function genericPointerToWireType(destructors,handle){var ptr;if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}if(this.isSmartPointer){ptr=this.rawConstructor();if(destructors!==null){destructors.push(this.rawDestructor,ptr)}return ptr}else{return 0}}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(!this.isConst&&handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);if(this.isSmartPointer){if(undefined===handle.$$.smartPtr){throwBindingError(\"Passing raw pointer to smart pointer is illegal\")}switch(this.sharingPolicy){case 0:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{throwBindingError(\"Cannot convert argument of type \"+(handle.$$.smartPtrType?handle.$$.smartPtrType.name:handle.$$.ptrType.name)+\" to parameter type \"+this.name)}break;case 1:ptr=handle.$$.smartPtr;break;case 2:if(handle.$$.smartPtrType===this){ptr=handle.$$.smartPtr}else{var clonedHandle=handle[\"clone\"]();ptr=this.rawShare(ptr,__emval_register(function(){clonedHandle[\"delete\"]()}));if(destructors!==null){destructors.push(this.rawDestructor,ptr)}}break;default:throwBindingError(\"Unsupporting sharing policy\")}}return ptr}function nonConstNoSmartPtrRawPointerToWireType(destructors,handle){if(handle===null){if(this.isReference){throwBindingError(\"null is not a valid \"+this.name)}return 0}if(!handle.$$){throwBindingError('Cannot pass \"'+_embind_repr(handle)+'\" as a '+this.name)}if(!handle.$$.ptr){throwBindingError(\"Cannot pass deleted object as a pointer of type \"+this.name)}if(handle.$$.ptrType.isConst){throwBindingError(\"Cannot convert argument of type \"+handle.$$.ptrType.name+\" to parameter type \"+this.name)}var handleClass=handle.$$.ptrType.registeredClass;var ptr=upcastPointer(handle.$$.ptr,handleClass,this.registeredClass);return ptr}function RegisteredPointer_getPointee(ptr){if(this.rawGetPointee){ptr=this.rawGetPointee(ptr)}return ptr}function RegisteredPointer_destructor(ptr){if(this.rawDestructor){this.rawDestructor(ptr)}}function RegisteredPointer_deleteObject(handle){if(handle!==null){handle[\"delete\"]()}}function downcastPointer(ptr,ptrClass,desiredClass){if(ptrClass===desiredClass){return ptr}if(undefined===desiredClass.baseClass){return null}var rv=downcastPointer(ptr,ptrClass,desiredClass.baseClass);if(rv===null){return null}return desiredClass.downcast(rv)}function getInheritedInstanceCount(){return Object.keys(registeredInstances).length}function getLiveInheritedInstances(){var rv=[];for(var k in registeredInstances){if(registeredInstances.hasOwnProperty(k)){rv.push(registeredInstances[k])}}return rv}function setDelayFunction(fn){delayFunction=fn;if(deletionQueue.length&&delayFunction){delayFunction(flushPendingDeletes)}}function init_embind(){Module[\"getInheritedInstanceCount\"]=getInheritedInstanceCount;Module[\"getLiveInheritedInstances\"]=getLiveInheritedInstances;Module[\"flushPendingDeletes\"]=flushPendingDeletes;Module[\"setDelayFunction\"]=setDelayFunction}var registeredInstances={};function getBasestPointer(class_,ptr){if(ptr===undefined){throwBindingError(\"ptr should not be undefined\")}while(class_.baseClass){ptr=class_.upcast(ptr);class_=class_.baseClass}return ptr}function getInheritedInstance(class_,ptr){ptr=getBasestPointer(class_,ptr);return registeredInstances[ptr]}function makeClassHandle(prototype,record){if(!record.ptrType||!record.ptr){throwInternalError(\"makeClassHandle requires ptr and ptrType\")}var hasSmartPtrType=!!record.smartPtrType;var hasSmartPtr=!!record.smartPtr;if(hasSmartPtrType!==hasSmartPtr){throwInternalError(\"Both smartPtrType and smartPtr must be specified\")}record.count={value:1};return Object.create(prototype,{$$:{value:record}})}function RegisteredPointer_fromWireType(ptr){var rawPointer=this.getPointee(ptr);if(!rawPointer){this.destructor(ptr);return null}var registeredInstance=getInheritedInstance(this.registeredClass,rawPointer);if(undefined!==registeredInstance){if(0===registeredInstance.$$.count.value){registeredInstance.$$.ptr=rawPointer;registeredInstance.$$.smartPtr=ptr;return registeredInstance[\"clone\"]()}else{var rv=registeredInstance[\"clone\"]();this.destructor(ptr);return rv}}function makeDefaultHandle(){if(this.isSmartPointer){return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this.pointeeType,ptr:rawPointer,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(this.registeredClass.instancePrototype,{ptrType:this,ptr:ptr})}}var actualType=this.registeredClass.getActualType(rawPointer);var registeredPointerRecord=registeredPointers[actualType];if(!registeredPointerRecord){return makeDefaultHandle.call(this)}var toType;if(this.isConst){toType=registeredPointerRecord.constPointerType}else{toType=registeredPointerRecord.pointerType}var dp=downcastPointer(rawPointer,this.registeredClass,toType.registeredClass);if(dp===null){return makeDefaultHandle.call(this)}if(this.isSmartPointer){return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp,smartPtrType:this,smartPtr:ptr})}else{return makeClassHandle(toType.registeredClass.instancePrototype,{ptrType:toType,ptr:dp})}}function init_RegisteredPointer(){RegisteredPointer.prototype.getPointee=RegisteredPointer_getPointee;RegisteredPointer.prototype.destructor=RegisteredPointer_destructor;RegisteredPointer.prototype[\"argPackAdvance\"]=8;RegisteredPointer.prototype[\"readValueFromPointer\"]=simpleReadValueFromPointer;RegisteredPointer.prototype[\"deleteObject\"]=RegisteredPointer_deleteObject;RegisteredPointer.prototype[\"fromWireType\"]=RegisteredPointer_fromWireType}function RegisteredPointer(name,registeredClass,isReference,isConst,isSmartPointer,pointeeType,sharingPolicy,rawGetPointee,rawConstructor,rawShare,rawDestructor){this.name=name;this.registeredClass=registeredClass;this.isReference=isReference;this.isConst=isConst;this.isSmartPointer=isSmartPointer;this.pointeeType=pointeeType;this.sharingPolicy=sharingPolicy;this.rawGetPointee=rawGetPointee;this.rawConstructor=rawConstructor;this.rawShare=rawShare;this.rawDestructor=rawDestructor;if(!isSmartPointer&&registeredClass.baseClass===undefined){if(isConst){this[\"toWireType\"]=constNoSmartPtrRawPointerToWireType;this.destructorFunction=null}else{this[\"toWireType\"]=nonConstNoSmartPtrRawPointerToWireType;this.destructorFunction=null}}else{this[\"toWireType\"]=genericPointerToWireType}}function replacePublicSymbol(name,value,numArguments){if(!Module.hasOwnProperty(name)){throwInternalError(\"Replacing nonexistant public symbol\")}if(undefined!==Module[name].overloadTable&&undefined!==numArguments){Module[name].overloadTable[numArguments]=value}else{Module[name]=value;Module[name].argCount=numArguments}}function embind__requireFunction(signature,rawFunction){signature=readLatin1String(signature);function makeDynCaller(dynCall){var args=[];for(var i=1;i<signature.length;++i){args.push(\"a\"+i)}var name=\"dynCall_\"+signature+\"_\"+rawFunction;var body=\"return function \"+name+\"(\"+args.join(\", \")+\") {\\n\";body+=\"    return dynCall(rawFunction\"+(args.length?\", \":\"\")+args.join(\", \")+\");\\n\";body+=\"};\\n\";return new Function(\"dynCall\",\"rawFunction\",body)(dynCall,rawFunction)}var fp;if(Module[\"FUNCTION_TABLE_\"+signature]!==undefined){fp=Module[\"FUNCTION_TABLE_\"+signature][rawFunction]}else if(typeof FUNCTION_TABLE!==\"undefined\"){fp=FUNCTION_TABLE[rawFunction]}else{var dc=Module[\"dynCall_\"+signature];if(dc===undefined){dc=Module[\"dynCall_\"+signature.replace(/f/g,\"d\")];if(dc===undefined){throwBindingError(\"No dynCall invoker for signature: \"+signature)}}fp=makeDynCaller(dc)}if(typeof fp!==\"function\"){throwBindingError(\"unknown function pointer with signature \"+signature+\": \"+rawFunction)}return fp}var UnboundTypeError=undefined;function getTypeName(type){var ptr=___getTypeName(type);var rv=readLatin1String(ptr);_free(ptr);return rv}function throwUnboundTypeError(message,types){var unboundTypes=[];var seen={};function visit(type){if(seen[type]){return}if(registeredTypes[type]){return}if(typeDependencies[type]){typeDependencies[type].forEach(visit);return}unboundTypes.push(type);seen[type]=true}types.forEach(visit);throw new UnboundTypeError(message+\": \"+unboundTypes.map(getTypeName).join([\", \"]))}function __embind_register_class(rawType,rawPointerType,rawConstPointerType,baseClassRawType,getActualTypeSignature,getActualType,upcastSignature,upcast,downcastSignature,downcast,name,destructorSignature,rawDestructor){name=readLatin1String(name);getActualType=embind__requireFunction(getActualTypeSignature,getActualType);if(upcast){upcast=embind__requireFunction(upcastSignature,upcast)}if(downcast){downcast=embind__requireFunction(downcastSignature,downcast)}rawDestructor=embind__requireFunction(destructorSignature,rawDestructor);var legalFunctionName=makeLegalFunctionName(name);exposePublicSymbol(legalFunctionName,function(){throwUnboundTypeError(\"Cannot construct \"+name+\" due to unbound types\",[baseClassRawType])});whenDependentTypesAreResolved([rawType,rawPointerType,rawConstPointerType],baseClassRawType?[baseClassRawType]:[],function(base){base=base[0];var baseClass;var basePrototype;if(baseClassRawType){baseClass=base.registeredClass;basePrototype=baseClass.instancePrototype}else{basePrototype=ClassHandle.prototype}var constructor=createNamedFunction(legalFunctionName,function(){if(Object.getPrototypeOf(this)!==instancePrototype){throw new BindingError(\"Use 'new' to construct \"+name)}if(undefined===registeredClass.constructor_body){throw new BindingError(name+\" has no accessible constructor\")}var body=registeredClass.constructor_body[arguments.length];if(undefined===body){throw new BindingError(\"Tried to invoke ctor of \"+name+\" with invalid number of parameters (\"+arguments.length+\") - expected (\"+Object.keys(registeredClass.constructor_body).toString()+\") parameters instead!\")}return body.apply(this,arguments)});var instancePrototype=Object.create(basePrototype,{constructor:{value:constructor}});constructor.prototype=instancePrototype;var registeredClass=new RegisteredClass(name,constructor,instancePrototype,rawDestructor,baseClass,getActualType,upcast,downcast);var referenceConverter=new RegisteredPointer(name,registeredClass,true,false,false);var pointerConverter=new RegisteredPointer(name+\"*\",registeredClass,false,false,false);var constPointerConverter=new RegisteredPointer(name+\" const*\",registeredClass,false,true,false);registeredPointers[rawType]={pointerType:pointerConverter,constPointerType:constPointerConverter};replacePublicSymbol(legalFunctionName,constructor);return[referenceConverter,pointerConverter,constPointerConverter]})}function heap32VectorToArray(count,firstElement){var array=[];for(var i=0;i<count;i++){array.push(HEAP32[(firstElement>>2)+i])}return array}function __embind_register_class_constructor(rawClassType,argCount,rawArgTypesAddr,invokerSignature,invoker,rawConstructor){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);invoker=embind__requireFunction(invokerSignature,invoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=\"constructor \"+classType.name;if(undefined===classType.registeredClass.constructor_body){classType.registeredClass.constructor_body=[]}if(undefined!==classType.registeredClass.constructor_body[argCount-1]){throw new BindingError(\"Cannot register multiple constructors with identical number of parameters (\"+(argCount-1)+\") for class '\"+classType.name+\"'! Overload resolution is currently only performed using the parameter count, not actual type info!\")}classType.registeredClass.constructor_body[argCount-1]=function unboundTypeHandler(){throwUnboundTypeError(\"Cannot construct \"+classType.name+\" due to unbound types\",rawArgTypes)};whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){classType.registeredClass.constructor_body[argCount-1]=function constructor_body(){if(arguments.length!==argCount-1){throwBindingError(humanName+\" called with \"+arguments.length+\" arguments, expected \"+(argCount-1))}var destructors=[];var args=new Array(argCount);args[0]=rawConstructor;for(var i=1;i<argCount;++i){args[i]=argTypes[i][\"toWireType\"](destructors,arguments[i-1])}var ptr=invoker.apply(null,args);runDestructors(destructors);return argTypes[0][\"fromWireType\"](ptr)};return[]});return[]})}function new_(constructor,argumentList){if(!(constructor instanceof Function)){throw new TypeError(\"new_ called with constructor type \"+typeof constructor+\" which is not a function\")}var dummy=createNamedFunction(constructor.name||\"unknownFunctionName\",function(){});dummy.prototype=constructor.prototype;var obj=new dummy;var r=constructor.apply(obj,argumentList);return r instanceof Object?r:obj}function craftInvokerFunction(humanName,argTypes,classType,cppInvokerFunc,cppTargetFunc){var argCount=argTypes.length;if(argCount<2){throwBindingError(\"argTypes array size mismatch! Must at least get return value and 'this' types!\")}var isClassMethodFunc=argTypes[1]!==null&&classType!==null;var needsDestructorStack=false;for(var i=1;i<argTypes.length;++i){if(argTypes[i]!==null&&argTypes[i].destructorFunction===undefined){needsDestructorStack=true;break}}var returns=argTypes[0].name!==\"void\";var argsList=\"\";var argsListWired=\"\";for(var i=0;i<argCount-2;++i){argsList+=(i!==0?\", \":\"\")+\"arg\"+i;argsListWired+=(i!==0?\", \":\"\")+\"arg\"+i+\"Wired\"}var invokerFnBody=\"return function \"+makeLegalFunctionName(humanName)+\"(\"+argsList+\") {\\n\"+\"if (arguments.length !== \"+(argCount-2)+\") {\\n\"+\"throwBindingError('function \"+humanName+\" called with ' + arguments.length + ' arguments, expected \"+(argCount-2)+\" args!');\\n\"+\"}\\n\";if(needsDestructorStack){invokerFnBody+=\"var destructors = [];\\n\"}var dtorStack=needsDestructorStack?\"destructors\":\"null\";var args1=[\"throwBindingError\",\"invoker\",\"fn\",\"runDestructors\",\"retType\",\"classParam\"];var args2=[throwBindingError,cppInvokerFunc,cppTargetFunc,runDestructors,argTypes[0],argTypes[1]];if(isClassMethodFunc){invokerFnBody+=\"var thisWired = classParam.toWireType(\"+dtorStack+\", this);\\n\"}for(var i=0;i<argCount-2;++i){invokerFnBody+=\"var arg\"+i+\"Wired = argType\"+i+\".toWireType(\"+dtorStack+\", arg\"+i+\"); // \"+argTypes[i+2].name+\"\\n\";args1.push(\"argType\"+i);args2.push(argTypes[i+2])}if(isClassMethodFunc){argsListWired=\"thisWired\"+(argsListWired.length>0?\", \":\"\")+argsListWired}invokerFnBody+=(returns?\"var rv = \":\"\")+\"invoker(fn\"+(argsListWired.length>0?\", \":\"\")+argsListWired+\");\\n\";if(needsDestructorStack){invokerFnBody+=\"runDestructors(destructors);\\n\"}else{for(var i=isClassMethodFunc?1:2;i<argTypes.length;++i){var paramName=i===1?\"thisWired\":\"arg\"+(i-2)+\"Wired\";if(argTypes[i].destructorFunction!==null){invokerFnBody+=paramName+\"_dtor(\"+paramName+\"); // \"+argTypes[i].name+\"\\n\";args1.push(paramName+\"_dtor\");args2.push(argTypes[i].destructorFunction)}}}if(returns){invokerFnBody+=\"var ret = retType.fromWireType(rv);\\n\"+\"return ret;\\n\"}else{}invokerFnBody+=\"}\\n\";args1.push(invokerFnBody);var invokerFunction=new_(Function,args1).apply(null,args2);return invokerFunction}function __embind_register_class_function(rawClassType,methodName,argCount,rawArgTypesAddr,invokerSignature,rawInvoker,context,isPureVirtual){var rawArgTypes=heap32VectorToArray(argCount,rawArgTypesAddr);methodName=readLatin1String(methodName);rawInvoker=embind__requireFunction(invokerSignature,rawInvoker);whenDependentTypesAreResolved([],[rawClassType],function(classType){classType=classType[0];var humanName=classType.name+\".\"+methodName;if(isPureVirtual){classType.registeredClass.pureVirtualFunctions.push(methodName)}function unboundTypesHandler(){throwUnboundTypeError(\"Cannot call \"+humanName+\" due to unbound types\",rawArgTypes)}var proto=classType.registeredClass.instancePrototype;var method=proto[methodName];if(undefined===method||undefined===method.overloadTable&&method.className!==classType.name&&method.argCount===argCount-2){unboundTypesHandler.argCount=argCount-2;unboundTypesHandler.className=classType.name;proto[methodName]=unboundTypesHandler}else{ensureOverloadTable(proto,methodName,humanName);proto[methodName].overloadTable[argCount-2]=unboundTypesHandler}whenDependentTypesAreResolved([],rawArgTypes,function(argTypes){var memberFunction=craftInvokerFunction(humanName,argTypes,classType,rawInvoker,context);if(undefined===proto[methodName].overloadTable){memberFunction.argCount=argCount-2;proto[methodName]=memberFunction}else{proto[methodName].overloadTable[argCount-2]=memberFunction}return[]});return[]})}var emval_free_list=[];var emval_handle_array=[{},{value:undefined},{value:null},{value:true},{value:false}];function __emval_decref(handle){if(handle>4&&0===--emval_handle_array[handle].refcount){emval_handle_array[handle]=undefined;emval_free_list.push(handle)}}function count_emval_handles(){var count=0;for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){++count}}return count}function get_first_emval(){for(var i=5;i<emval_handle_array.length;++i){if(emval_handle_array[i]!==undefined){return emval_handle_array[i]}}return null}function init_emval(){Module[\"count_emval_handles\"]=count_emval_handles;Module[\"get_first_emval\"]=get_first_emval}function __emval_register(value){switch(value){case undefined:{return 1}case null:{return 2}case true:{return 3}case false:{return 4}default:{var handle=emval_free_list.length?emval_free_list.pop():emval_handle_array.length;emval_handle_array[handle]={refcount:1,value:value};return handle}}}function __embind_register_emval(rawType,name){name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(handle){var rv=emval_handle_array[handle].value;__emval_decref(handle);return rv},\"toWireType\":function(destructors,value){return __emval_register(value)},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:null})}function _embind_repr(v){if(v===null){return\"null\"}var t=typeof v;if(t===\"object\"||t===\"array\"||t===\"function\"){return v.toString()}else{return\"\"+v}}function floatReadValueFromPointer(name,shift){switch(shift){case 2:return function(pointer){return this[\"fromWireType\"](HEAPF32[pointer>>2])};case 3:return function(pointer){return this[\"fromWireType\"](HEAPF64[pointer>>3])};default:throw new TypeError(\"Unknown float type: \"+name)}}function __embind_register_float(rawType,name,size){var shift=getShiftFromSize(size);name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":function(value){return value},\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}return value},\"argPackAdvance\":8,\"readValueFromPointer\":floatReadValueFromPointer(name,shift),destructorFunction:null})}function __embind_register_function(name,argCount,rawArgTypesAddr,signature,rawInvoker,fn){var argTypes=heap32VectorToArray(argCount,rawArgTypesAddr);name=readLatin1String(name);rawInvoker=embind__requireFunction(signature,rawInvoker);exposePublicSymbol(name,function(){throwUnboundTypeError(\"Cannot call \"+name+\" due to unbound types\",argTypes)},argCount-1);whenDependentTypesAreResolved([],argTypes,function(argTypes){var invokerArgsArray=[argTypes[0],null].concat(argTypes.slice(1));replacePublicSymbol(name,craftInvokerFunction(name,invokerArgsArray,null,rawInvoker,fn),argCount-1);return[]})}function integerReadValueFromPointer(name,shift,signed){switch(shift){case 0:return signed?function readS8FromPointer(pointer){return HEAP8[pointer]}:function readU8FromPointer(pointer){return HEAPU8[pointer]};case 1:return signed?function readS16FromPointer(pointer){return HEAP16[pointer>>1]}:function readU16FromPointer(pointer){return HEAPU16[pointer>>1]};case 2:return signed?function readS32FromPointer(pointer){return HEAP32[pointer>>2]}:function readU32FromPointer(pointer){return HEAPU32[pointer>>2]};default:throw new TypeError(\"Unknown integer type: \"+name)}}function __embind_register_integer(primitiveType,name,size,minRange,maxRange){name=readLatin1String(name);if(maxRange===-1){maxRange=4294967295}var shift=getShiftFromSize(size);var fromWireType=function(value){return value};if(minRange===0){var bitshift=32-8*size;fromWireType=function(value){return value<<bitshift>>>bitshift}}var isUnsignedType=name.indexOf(\"unsigned\")!=-1;registerType(primitiveType,{name:name,\"fromWireType\":fromWireType,\"toWireType\":function(destructors,value){if(typeof value!==\"number\"&&typeof value!==\"boolean\"){throw new TypeError('Cannot convert \"'+_embind_repr(value)+'\" to '+this.name)}if(value<minRange||value>maxRange){throw new TypeError('Passing a number \"'+_embind_repr(value)+'\" from JS side to C/C++ side to an argument of type \"'+name+'\", which is outside the valid range ['+minRange+\", \"+maxRange+\"]!\")}return isUnsignedType?value>>>0:value|0},\"argPackAdvance\":8,\"readValueFromPointer\":integerReadValueFromPointer(name,shift,minRange!==0),destructorFunction:null})}function __embind_register_memory_view(rawType,dataTypeIndex,name){var typeMapping=[Int8Array,Uint8Array,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array];var TA=typeMapping[dataTypeIndex];function decodeMemoryView(handle){handle=handle>>2;var heap=HEAPU32;var size=heap[handle];var data=heap[handle+1];return new TA(heap[\"buffer\"],data,size)}name=readLatin1String(name);registerType(rawType,{name:name,\"fromWireType\":decodeMemoryView,\"argPackAdvance\":8,\"readValueFromPointer\":decodeMemoryView},{ignoreDuplicateRegistrations:true})}function __embind_register_std_string(rawType,name){name=readLatin1String(name);var stdStringIsUTF8=name===\"std::string\";registerType(rawType,{name:name,\"fromWireType\":function(value){var length=HEAPU32[value>>2];var str;if(stdStringIsUTF8){var endChar=HEAPU8[value+4+length];var endCharSwap=0;if(endChar!=0){endCharSwap=endChar;HEAPU8[value+4+length]=0}var decodeStartPtr=value+4;for(var i=0;i<=length;++i){var currentBytePtr=value+4+i;if(HEAPU8[currentBytePtr]==0){var stringSegment=UTF8ToString(decodeStartPtr);if(str===undefined)str=stringSegment;else{str+=String.fromCharCode(0);str+=stringSegment}decodeStartPtr=currentBytePtr+1}}if(endCharSwap!=0)HEAPU8[value+4+length]=endCharSwap}else{var a=new Array(length);for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAPU8[value+4+i])}str=a.join(\"\")}_free(value);return str},\"toWireType\":function(destructors,value){if(value instanceof ArrayBuffer){value=new Uint8Array(value)}var getLength;var valueIsOfTypeString=typeof value===\"string\";if(!(valueIsOfTypeString||value instanceof Uint8Array||value instanceof Uint8ClampedArray||value instanceof Int8Array)){throwBindingError(\"Cannot pass non-string to std::string\")}if(stdStringIsUTF8&&valueIsOfTypeString){getLength=function(){return lengthBytesUTF8(value)}}else{getLength=function(){return value.length}}var length=getLength();var ptr=_malloc(4+length+1);HEAPU32[ptr>>2]=length;if(stdStringIsUTF8&&valueIsOfTypeString){stringToUTF8(value,ptr+4,length+1)}else{if(valueIsOfTypeString){for(var i=0;i<length;++i){var charCode=value.charCodeAt(i);if(charCode>255){_free(ptr);throwBindingError(\"String has UTF-16 code units that do not fit in 8 bits\")}HEAPU8[ptr+4+i]=charCode}}else{for(var i=0;i<length;++i){HEAPU8[ptr+4+i]=value[i]}}}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_std_wstring(rawType,charSize,name){name=readLatin1String(name);var getHeap,shift;if(charSize===2){getHeap=function(){return HEAPU16};shift=1}else if(charSize===4){getHeap=function(){return HEAPU32};shift=2}registerType(rawType,{name:name,\"fromWireType\":function(value){var HEAP=getHeap();var length=HEAPU32[value>>2];var a=new Array(length);var start=value+4>>shift;for(var i=0;i<length;++i){a[i]=String.fromCharCode(HEAP[start+i])}_free(value);return a.join(\"\")},\"toWireType\":function(destructors,value){var HEAP=getHeap();var length=value.length;var ptr=_malloc(4+length*charSize);HEAPU32[ptr>>2]=length;var start=ptr+4>>shift;for(var i=0;i<length;++i){HEAP[start+i]=value.charCodeAt(i)}if(destructors!==null){destructors.push(_free,ptr)}return ptr},\"argPackAdvance\":8,\"readValueFromPointer\":simpleReadValueFromPointer,destructorFunction:function(ptr){_free(ptr)}})}function __embind_register_value_object(rawType,name,constructorSignature,rawConstructor,destructorSignature,rawDestructor){structRegistrations[rawType]={name:readLatin1String(name),rawConstructor:embind__requireFunction(constructorSignature,rawConstructor),rawDestructor:embind__requireFunction(destructorSignature,rawDestructor),fields:[]}}function __embind_register_value_object_field(structType,fieldName,getterReturnType,getterSignature,getter,getterContext,setterArgumentType,setterSignature,setter,setterContext){structRegistrations[structType].fields.push({fieldName:readLatin1String(fieldName),getterReturnType:getterReturnType,getter:embind__requireFunction(getterSignature,getter),getterContext:getterContext,setterArgumentType:setterArgumentType,setter:embind__requireFunction(setterSignature,setter),setterContext:setterContext})}function __embind_register_void(rawType,name){name=readLatin1String(name);registerType(rawType,{isVoid:true,name:name,\"argPackAdvance\":0,\"fromWireType\":function(){return undefined},\"toWireType\":function(destructors,o){return undefined}})}function __emval_incref(handle){if(handle>4){emval_handle_array[handle].refcount+=1}}function requireRegisteredType(rawType,humanName){var impl=registeredTypes[rawType];if(undefined===impl){throwBindingError(humanName+\" has unknown type \"+getTypeName(rawType))}return impl}function __emval_take_value(type,argv){type=requireRegisteredType(type,\"_emval_take_value\");var v=type[\"readValueFromPointer\"](argv);return __emval_register(v)}function _abort(){Module[\"abort\"]()}function _emscripten_get_heap_size(){return HEAP8.length}function abortOnCannotGrowMemory(requestedSize){abort(\"OOM\")}function _emscripten_resize_heap(requestedSize){abortOnCannotGrowMemory(requestedSize)}function _emscripten_memcpy_big(dest,src,num){HEAPU8.set(HEAPU8.subarray(src,src+num),dest)}function ___setErrNo(value){if(Module[\"___errno_location\"])HEAP32[Module[\"___errno_location\"]()>>2]=value;return value}InternalError=Module[\"InternalError\"]=extendError(Error,\"InternalError\");embind_init_charCodes();BindingError=Module[\"BindingError\"]=extendError(Error,\"BindingError\");init_ClassHandle();init_RegisteredPointer();init_embind();UnboundTypeError=Module[\"UnboundTypeError\"]=extendError(Error,\"UnboundTypeError\");init_emval();var asmGlobalArg={};var asmLibraryArg={\"b\":abort,\"u\":setTempRet0,\"p\":___cxa_allocate_exception,\"l\":___cxa_throw,\"i\":___setErrNo,\"t\":___syscall140,\"h\":___syscall146,\"s\":___syscall6,\"r\":__embind_finalize_value_object,\"q\":__embind_register_bool,\"g\":__embind_register_class,\"o\":__embind_register_class_constructor,\"d\":__embind_register_class_function,\"F\":__embind_register_emval,\"n\":__embind_register_float,\"E\":__embind_register_function,\"e\":__embind_register_integer,\"c\":__embind_register_memory_view,\"m\":__embind_register_std_string,\"D\":__embind_register_std_wstring,\"C\":__embind_register_value_object,\"k\":__embind_register_value_object_field,\"B\":__embind_register_void,\"A\":__emval_decref,\"z\":__emval_incref,\"j\":__emval_take_value,\"f\":_abort,\"y\":_emscripten_get_heap_size,\"x\":_emscripten_memcpy_big,\"w\":_emscripten_resize_heap,\"v\":abortOnCannotGrowMemory,\"a\":DYNAMICTOP_PTR};var asm=Module[\"asm\"](asmGlobalArg,asmLibraryArg,buffer);Module[\"asm\"]=asm;var ___errno_location=Module[\"___errno_location\"]=function(){return Module[\"asm\"][\"G\"].apply(null,arguments)};var ___getTypeName=Module[\"___getTypeName\"]=function(){return Module[\"asm\"][\"H\"].apply(null,arguments)};var _free=Module[\"_free\"]=function(){return Module[\"asm\"][\"I\"].apply(null,arguments)};var _malloc=Module[\"_malloc\"]=function(){return Module[\"asm\"][\"J\"].apply(null,arguments)};var globalCtors=Module[\"globalCtors\"]=function(){return Module[\"asm\"][\"ca\"].apply(null,arguments)};var dynCall_dii=Module[\"dynCall_dii\"]=function(){return Module[\"asm\"][\"K\"].apply(null,arguments)};var dynCall_i=Module[\"dynCall_i\"]=function(){return Module[\"asm\"][\"L\"].apply(null,arguments)};var dynCall_ii=Module[\"dynCall_ii\"]=function(){return Module[\"asm\"][\"M\"].apply(null,arguments)};var dynCall_iidiiii=Module[\"dynCall_iidiiii\"]=function(){return Module[\"asm\"][\"N\"].apply(null,arguments)};var dynCall_iii=Module[\"dynCall_iii\"]=function(){return Module[\"asm\"][\"O\"].apply(null,arguments)};var dynCall_iiii=Module[\"dynCall_iiii\"]=function(){return Module[\"asm\"][\"P\"].apply(null,arguments)};var dynCall_iiiid=Module[\"dynCall_iiiid\"]=function(){return Module[\"asm\"][\"Q\"].apply(null,arguments)};var dynCall_iiiii=Module[\"dynCall_iiiii\"]=function(){return Module[\"asm\"][\"R\"].apply(null,arguments)};var dynCall_iiiiiiiiiidd=Module[\"dynCall_iiiiiiiiiidd\"]=function(){return Module[\"asm\"][\"S\"].apply(null,arguments)};var dynCall_jiji=Module[\"dynCall_jiji\"]=function(){return Module[\"asm\"][\"T\"].apply(null,arguments)};var dynCall_v=Module[\"dynCall_v\"]=function(){return Module[\"asm\"][\"U\"].apply(null,arguments)};var dynCall_vi=Module[\"dynCall_vi\"]=function(){return Module[\"asm\"][\"V\"].apply(null,arguments)};var dynCall_vii=Module[\"dynCall_vii\"]=function(){return Module[\"asm\"][\"W\"].apply(null,arguments)};var dynCall_viid=Module[\"dynCall_viid\"]=function(){return Module[\"asm\"][\"X\"].apply(null,arguments)};var dynCall_viii=Module[\"dynCall_viii\"]=function(){return Module[\"asm\"][\"Y\"].apply(null,arguments)};var dynCall_viiid=Module[\"dynCall_viiid\"]=function(){return Module[\"asm\"][\"Z\"].apply(null,arguments)};var dynCall_viiii=Module[\"dynCall_viiii\"]=function(){return Module[\"asm\"][\"_\"].apply(null,arguments)};var dynCall_viiiii=Module[\"dynCall_viiiii\"]=function(){return Module[\"asm\"][\"$\"].apply(null,arguments)};var dynCall_viiiiii=Module[\"dynCall_viiiiii\"]=function(){return Module[\"asm\"][\"aa\"].apply(null,arguments)};var dynCall_viiiiiiiiidd=Module[\"dynCall_viiiiiiiiidd\"]=function(){return Module[\"asm\"][\"ba\"].apply(null,arguments)};Module[\"asm\"]=asm;Module[\"then\"]=function(func){if(Module[\"calledRun\"]){func(Module)}else{var old=Module[\"onRuntimeInitialized\"];Module[\"onRuntimeInitialized\"]=function(){if(old)old();func(Module)}}return Module};function ExitStatus(status){this.name=\"ExitStatus\";this.message=\"Program terminated with exit(\"+status+\")\";this.status=status}ExitStatus.prototype=new Error;ExitStatus.prototype.constructor=ExitStatus;dependenciesFulfilled=function runCaller(){if(!Module[\"calledRun\"])run();if(!Module[\"calledRun\"])dependenciesFulfilled=runCaller};function run(args){args=args||Module[\"arguments\"];if(runDependencies>0){return}preRun();if(runDependencies>0)return;if(Module[\"calledRun\"])return;function doRun(){if(Module[\"calledRun\"])return;Module[\"calledRun\"]=true;if(ABORT)return;ensureInitRuntime();preMain();if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}Module[\"run\"]=run;function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}if(what!==undefined){out(what);err(what);what=JSON.stringify(what)}else{what=\"\"}ABORT=true;EXITSTATUS=1;throw\"abort(\"+what+\"). Build with -s ASSERTIONS=1 for more info.\"}Module[\"abort\"]=abort;if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}Module[\"noExitRuntime\"]=true;run();\n\n\n  return mvtdstpack\n}\n);\n})();\nexport default mvtdstpack;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles;","function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest;","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","function _setPrototypeOf(o, p) {\n  module.exports = _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nmodule.exports = _setPrototypeOf;","function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nmodule.exports = _assertThisInitialized;","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","const REGEX_EPACTS = new RegExp('(?:chr)?(.+):(\\\\d+)_?(\\\\w+)?/?([^_]+)?_?(.*)?');\nconst REGEX_REGION = new RegExp('(?:chr)?(.+):(\\\\d+)-(\\\\d+)');\nexport { REGEX_EPACTS, REGEX_REGION };\n","import numeric from 'numeric';\n\n/**\n * Return the cholesky decomposition A = GG'. The matrix G is returned.\n * @param A\n * @return {*}\n */\nexport function cholesky(A) {\n  const n = A.length;\n  const G = numeric.rep([n, n], 0);\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j <= i; j++) {\n      let s = A[j][i];\n      for (let k = 0; k <= j - 1; k++) {\n        s = s - G[j][k] * G[i][k];\n      }\n      if (j < i) {\n        G[i][j] = s / G[j][j];\n      } else {\n        G[i][i] = Math.sqrt(s);\n      }\n    }\n  }\n  return G;\n}\n","/**\n * A port of Robert Davies' method for computing the distribution\n * of a linear combination of chi-squared random variables.\n *\n * <p>\n *\n * Publication: \n * {@link https://www.jstor.org/stable/2346911|The distribution of a linear combination of chi‐squared random variables. Applied Statistics 29 323‐333.}\n *\n * <p>\n *\n * Original C code:\n * {@link http://www.robertnz.net/QF.htm}\n *\n * @module qfc\n * @license MIT\n */\n\nconst pi = Math.PI;\nconst log28 = 0.0866;\n\nlet count = 0;\nlet sigsq, lmax, lmin, mean, c,\n  intl, ersm, r, lim, ndtsrt,\n  fail, n, th, lb, nc;\n\nfunction exp1(x) {\n  return x < -50.0 ? 0.0 : Math.exp(x);\n}\n\nfunction counter() {\n  count += 1;\n  if (count > lim) {\n    throw new RangeError(\"Exceeded limit of \" + lim + \" calls\");\n  }\n}\n\nfunction square(x) { return x * x }\n\nfunction cube(x) { return x * x * x }\n\nfunction log1(x,first) {\n  if (Math.abs(x) > 0.1) {\n    return (first ? Math.log(1.0 + x) : (Math.log(1.0 + x) - x));\n  }\n  else {\n    let s, s1, term, y, k;\n    y = x / (2.0 + x);\n    term = 2.0 * cube(y);\n    k = 3.0;\n    s = (first ? 2.0 : -x) * y;\n    y = square(y);\n    for (s1 = s + term / k; s1 !== s; s1 = s + term / k) {\n      k = k + 2.0;\n      term = term * y;\n      s = s1;\n    }\n    return s;\n  }\n}\n\nfunction order() {\n  let j, k;\n  outer:\n  for (let j = 0; j < r; j++) {\n    let lj = Math.abs(lb[j]);\n    for (let k = j - 1; k >= 0; k--) {\n      if (lj > Math.abs(lb[th[k]])) {\n        th[k + 1] = th[k];\n      }\n      else {\n        th[k + 1] = j;\n        continue outer;\n      }\n    }\n    k = -1;\n    th[k + 1] = j;\n  }\n  ndtsrt = false;\n}\n\nfunction errbd(u) {\n  let sum1, lj, ncj, x, y, xconst, j, nj;\n  counter();\n  xconst = u * sigsq;\n  sum1 = u * xconst;\n  u = 2.0 * u;\n  for (j = r - 1; j >= 0; j--) {\n    nj = n[j];\n    lj = lb[j];\n    ncj = nc[j];\n    x = u * lj;\n    y = 1.0 - x;\n    xconst = xconst + lj * (ncj / y + nj) / y;\n    sum1 = sum1 + ncj * square(x / y) + nj * (square(x) / y + log1(-x,false));\n  }\n  return [exp1(-0.5 * sum1), xconst]\n}\n\nfunction ctff(accx, u2) {\n  let u1, u, rb, xconst, c1, c2, rerr;\n  u1 = 0.0;\n  c1 = mean;\n  rb = 2.0 * ((u2 > 0.0) ? lmax : lmin);\n\n  function calc_err(u) {\n    [rerr, c2] = errbd(u);\n    return rerr;\n  }\n\n  for (u = u2 / (1.0 + u2 * rb); calc_err(u) > accx; u = u2 / (1.0 + u2 * rb)) {\n    u1 = u2;\n    c1 = c2;\n    u2 = 2.0 * u2;\n  }\n\n  for (u = (c1 - mean) / (c2 - mean); u < 0.9; u = (c1 - mean) / (c2 - mean)) {\n    u = (u1 + u2) / 2.0;\n    [rerr, xconst] = errbd(u / (1.0 + u * rb))\n    if (rerr > accx) {\n      u1 = u;\n      c1 = xconst;\n    }\n    else {\n      u2 = u;\n      c2 = xconst;\n    }\n  }\n  return [c2, u2];\n}\n\nfunction truncation(u, tausq) {\n  let sum1, sum2, prod1, prod2, prod3, lj, ncj, x, y, err1, err2;\n  let j, nj, s;\n  counter();\n  sum1 = 0.0;\n  prod2 = 0.0;\n  prod3 = 0.0;\n  s = 0;\n  sum2 = (sigsq + tausq) * square(u);\n  prod1 = 2.0 * sum2;\n  u = 2.0 * u;\n  for (j = 0; j < r; j++) {\n    lj = lb[j];\n    ncj = nc[j];\n    nj = n[j];\n    x = square(u * lj);\n    sum1 = sum1 + ncj * x / (1.0 + x);\n    if (x > 1.0) {\n      prod2 = prod2 + nj * Math.log(x);\n      prod3 = prod3 + nj * log1(x,true);\n      s = s + nj;\n    }\n    else {\n      prod1 = prod1 + nj * log1(x,true);\n    }\n  }\n  sum1 = 0.5 * sum1;\n  prod2 = prod1 + prod2;\n  prod3 = prod1 + prod3;\n  x = exp1(-sum1 - 0.25 * prod2) / pi;\n  y = exp1(-sum1 - 0.25 * prod3) / pi;\n  err1 = (s == 0) ? 1.0 : x * 2.0 / s;\n  err2 = (prod3 > 1.0) ? 2.5 * y : 1.0;\n  if (err2 < err1) { err1 = err2; }\n  x = 0.5 * sum2;\n  err2 = (x <= y) ? 1.0 : y / x;\n  return (err1 < err2) ? err1 : err2;\n}\n\nfunction findu(ut, accx) {\n  let u, i;\n  let divis = [2.0, 1.4, 1.2, 1.1];\n  u = ut / 4.0;\n  if (truncation(u, 0.0) > accx) {\n    for (u = ut; truncation(u, 0.0) > accx; u = ut) { ut = ut * 4.0 }\n  }\n  else {\n    ut = u;\n    for (u = u / 4.0; truncation(u, 0.0) <= accx; u = u / 4.0) { ut = u; }\n  }\n  for (i = 0; i < 4; i++) {\n    u = ut / divis[i];\n    if (truncation(u, 0.0) <= accx) { ut = u; }\n  }\n  return ut;\n}\n\nfunction integrate(nterm, interv, tausq, mainx) {\n  let inpi, u, sum1, sum2, sum3, x, y, z;\n  let k, j, nj;\n  inpi = interv / pi;\n  for (k = nterm; k >= 0; k--) {\n    u = (k + 0.5) * interv;\n    sum1 = -2.0 * u * c;\n    sum2 = Math.abs(sum1);\n    sum3 = -0.5 * sigsq * square(u);\n    for (j = r - 1; j >= 0; j--) {\n      nj = n[j];\n      x = 2.0 * lb[j] * u;\n      y = square(x);\n      sum3 = sum3 - 0.25 * nj * log1(y, true);\n      y = nc[j] * x / (1.0 + y);\n      z = nj * Math.atan(x) + y;\n      sum1 = sum1 + z;\n      sum2 = sum2 + Math.abs(z);\n      sum3 = sum3 - 0.5 * x * y;\n    }\n    x = inpi * exp1(sum3) / u;\n    if (!mainx) { x = x * (1.0 - exp1(-0.5 * tausq * square(u))) }\n    sum1 = Math.sin(0.5 * sum1) * x;\n    sum2 = 0.5 * sum2 * x;\n    intl = intl + sum1;\n    ersm = ersm + sum2;\n  }\n}\n\nfunction cfe(x) {\n  let axl, axl1, axl2, sxl, sum1, lj;\n  let j, k, t;\n  counter();\n  if (ndtsrt) order();\n  axl = Math.abs(x);\n  sxl = (x > 0.0) ? 1.0 : -1.0;\n  sum1 = 0.0;\n  for (j = r - 1; j >= 0; j--) {\n    t = th[j];\n    if (lb[t] * sxl > 0.0) {\n      lj = Math.abs(lb[t]);\n      axl1 = axl - lj * (n[t] + nc[t]);\n      axl2 = lj / log28;\n      if (axl1 > axl2) {\n        axl = axl1;\n      }\n      else {\n        if (axl1 > axl2) axl = axl2;\n        sum1 = (axl - axl1) / lj;\n        for (k = j - 1; k >= 0; k--) sum1 = sum1 + (n[th[k]] + nc[th[k]]);\n        break;\n      }\n    }\n  }\n  if (sum1 > 100.0) {\n    fail = true;\n    return 1.0;\n  }\n  else {\n    return Math.pow(2.0,(sum1 / 4.0)) / (pi * square(axl));\n  }\n}\n\n/**\n * Mixture chi-square distribution function. <p>\n *\n * This is the cumulative distribution for a linear mixture of chi-squared random variables, each having\n * its own degrees of freedom and non-centrality parameter: <p>\n *\n * c1 = sum(lb1[j] * x_j) + sigma * X0, where each x_j is non-central chi-squared, and X0 is a standard normal variable.\n *\n * @param lb1 {number[]} Coefficient of each chi-squared variable.\n * @param nc1 {number[]} Non-centrality parameter for each chi-squared variable x_j.\n * @param n1 {number[]} Degrees of freedom for each chi-squared variable x_j.\n * @param r1 {number} Number of chi-squared variables.\n * @param sigma {number} Coefficient of standard normal variable.\n * @param c1 {number[]} Mixture chi-squared statistic value (point at which function should be evaluated).\n * @param lim1 {number} Maximum number of terms in integrations.\n * @param acc {number} Maximum error.\n * @return {number} Cumulative lower-tail probability.\n */\nfunction qf(lb1, nc1, n1, r1, sigma, c1, lim1, acc)  {\n\n/*  distribution function of a linear combination of non-central\n    chi-squared random variables :\n\n    input:\n    lb[j]            coefficient of j-th chi-squared variable\n    nc[j]            non-centrality parameter\n    n[j]             degrees of freedom\n    j = 0, 2 ... r-1\n    sigma            coefficient of standard normal variable\n    c                point at which df is to be evaluated\n    lim              maximum number of terms in integration\n    acc              maximum error\n\n    output:\n    ifault = 1       required accuracy NOT achieved\n    2       round-off error possibly significant\n    3       invalid parameters\n    4       unable to locate integration parameters\n    5       out of memory\n\n    trace[0]         absolute sum\n    trace[1]         total number of integration terms\n    trace[2]         number of integrations\n    trace[3]         integration interval in final integration\n    trace[4]         truncation point in initial integration\n    trace[5]         s.d. of initial convergence factor\n    trace[6]         cycles to locate integration parameters     */\n\n  let j, nj, nt, ntm;\n  let acc1, almx, xlim, xnt, xntm;\n  let utx, tausq, sd, intv, intv1, x, up, un, d1, d2, lj, ncj;\n  let qfval, ifault;\n  let trace = new Array(7).fill(0.0);\n  let rats = [1, 2, 4, 8];\n\n  function done() {\n    trace[6] = count;\n    return [qfval, ifault, trace];\n  }\n\n  count = 0;\n  r = r1;\n  lim = lim1;\n  c = c1;\n  n = n1;\n  lb = lb1;\n  nc = nc1;\n  ifault = 0;\n  intl = 0.0;\n  ersm = 0.0;\n  qfval = -1.0;\n  acc1 = acc;\n  ndtsrt = true;\n  fail = false;\n  xlim = lim;\n  th = new Array(r).fill(NaN);\n\n  /* find mean, sd, max and min of lb,\n     check that parameter values are valid */\n  sigsq = square(sigma);\n  sd = sigsq;\n  lmax = 0.0;\n  lmin = 0.0;\n  mean = 0.0;\n  for (j = 0; j < r; j++) {\n    nj = n[j];\n    lj = lb[j];\n    ncj = nc[j];\n    if (nj < 0 || ncj < 0.0) {\n      ifault = 3;\n      return done();\n    }\n    sd = sd + square(lj) * (2 * nj + 4.0 * ncj);\n    mean = mean + lj * (nj + ncj);\n    if (lmax < lj)\n      lmax = lj;\n    else if (lmin > lj)\n      lmin = lj;\n  }\n  if (sd == 0.0) {\n    qfval = (c > 0.0) ? 1.0 : 0.0;\n    return done();\n  }\n  if (lmin == 0.0 && lmax == 0.0 && sigma == 0.0) {\n    ifault = 3;\n    return done();\n  }\n  sd = Math.sqrt(sd);\n  almx = (lmax < -lmin) ? -lmin : lmax;\n\n  /* starting values for findu, ctff */\n  utx = 16.0 / sd;\n  up = 4.5 / sd;\n  un = -up;\n\n  try {\n    /* truncation point with no convergence factor */\n    utx = findu(utx, 0.5 * acc1);\n\n    /* does convergence factor help */\n    if (c != 0.0 && (almx > 0.07 * sd)) {\n      tausq = .25 * acc1 / cfe(c);\n      if (fail)\n        fail = false;\n      else if (truncation(utx, tausq) < .2 * acc1) {\n        sigsq = sigsq + tausq;\n        utx = findu(utx, 0.25 * acc1);\n        trace[5] = Math.sqrt(tausq);\n      }\n    }\n    trace[4] = utx;\n    acc1 = 0.5 * acc1;\n\n    /* find RANGE of distribution, quit if outside this */\n    let ctffx;\n\n    function l1() {\n      [ctffx, up] = ctff(acc1, up);\n      d1 = ctffx - c;\n      if (d1 < 0.0) {\n        qfval = 1.0;\n        return done();\n      }\n      [ctffx, un] = ctff(acc1, un);\n      d2 = c - ctffx;\n      if (d2 < 0.0) {\n        qfval = 0.0;\n        return done();\n      }\n\n      /* find integration interval */\n      intv = 2.0 * pi / ((d1 > d2) ? d1 : d2);\n\n      /* calculate number of terms required for main and\n         auxillary integrations */\n      xnt = utx / intv;\n      xntm = 3.0 / Math.sqrt(acc1);\n      if (xnt > xntm * 1.5) {\n        /* parameters for auxillary integration */\n        if (xntm > xlim) {\n          ifault = 1;\n          return done();\n        }\n        ntm = Math.floor(xntm + 0.5);\n        intv1 = utx / ntm;\n        x = 2.0 * pi / intv1;\n        if (x <= Math.abs(c)) return l2();\n\n        /* calculate convergence factor */\n        tausq = .33 * acc1 / (1.1 * (cfe(c - x) + cfe(c + x)));\n        if (fail) return l2();\n        acc1 = .67 * acc1;\n\n        /* auxillary integration */\n        integrate(ntm, intv1, tausq, false);\n        xlim = xlim - xntm;\n        sigsq = sigsq + tausq;\n        trace[2] = trace[2] + 1;\n        trace[1] = trace[1] + ntm + 1;\n\n        /* find truncation point with new convergence factor */\n        utx = findu(utx, .25 * acc1);\n        acc1 = 0.75 * acc1;\n        return l1();\n      }\n\n      return l2();\n    }\n\n    /* main integration */\n    function l2() {\n      trace[3] = intv;\n      if (xnt > xlim) {\n        ifault = 1;\n        return done();\n      }\n      nt = Math.floor(xnt + 0.5);\n      integrate(nt, intv, 0.0, true);\n      trace[2] = trace[2] + 1;\n      trace[1] = trace[1] + nt + 1;\n      qfval = 0.5 - intl;\n      trace[0] = ersm;\n\n      /* test whether round-off error could be significant\n         allow for radix 8 or 16 machines */\n      up = ersm;\n      x = up + acc / 10.0;\n      for (j = 0; j < 4; j++) {\n        if (rats[j] * x === rats[j] * up) ifault = 2;\n      }\n\n      return done();\n    }\n\n    return l1();\n  }\n  catch (error) {\n    if (error.name === \"RangeError\") {\n      ifault = 4;\n      return done();\n    }\n    else {\n      throw error;\n    }\n  }\n}\n\nexport { qf };","/**\n * A port of Boost's Gauss-Kronrod and double exponential quadrature procedures. Original license header is:\n *\n *   Copyright John Maddock 2017.\n *   Copyright Nick Thompson 2017.\n *   Use, modification and distribution are subject to the\n *   Boost Software License, Version 1.0. (See accompanying file\n *   LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)\n *\n * @module quadrature\n * @license Boost\n */\n\nconst GAUSS_KRONROD_ABSCISSA = {\n  21: [\n    0.00000000000000000000000000000000000e+00,\n    1.48874338981631210884826001129719985e-01,\n    2.94392862701460198131126603103865566e-01,\n    4.33395394129247190799265943165784162e-01,\n    5.62757134668604683339000099272694141e-01,\n    6.79409568299024406234327365114873576e-01,\n    7.80817726586416897063717578345042377e-01,\n    8.65063366688984510732096688423493049e-01,\n    9.30157491355708226001207180059508346e-01,\n    9.73906528517171720077964012084452053e-01,\n    9.95657163025808080735527280689002848e-01,\n  ],\n  31: [\n    0.00000000000000000000000000000000000e+00,\n    1.01142066918717499027074231447392339e-01,\n    2.01194093997434522300628303394596208e-01,\n    2.99180007153168812166780024266388963e-01,\n    3.94151347077563369897207370981045468e-01,\n    4.85081863640239680693655740232350613e-01,\n    5.70972172608538847537226737253910641e-01,\n    6.50996741297416970533735895313274693e-01,\n    7.24417731360170047416186054613938010e-01,\n    7.90418501442465932967649294817947347e-01,\n    8.48206583410427216200648320774216851e-01,\n    8.97264532344081900882509656454495883e-01,\n    9.37273392400705904307758947710209471e-01,\n    9.67739075679139134257347978784337225e-01,\n    9.87992518020485428489565718586612581e-01,\n    9.98002298693397060285172840152271209e-01,\n  ],\n  61: [\n    0.00000000000000000000000000000000000e+00,\n    5.14718425553176958330252131667225737e-02,\n    1.02806937966737030147096751318000592e-01,\n    1.53869913608583546963794672743255920e-01,\n    2.04525116682309891438957671002024710e-01,\n    2.54636926167889846439805129817805108e-01,\n    3.04073202273625077372677107199256554e-01,\n    3.52704725530878113471037207089373861e-01,\n    4.00401254830394392535476211542660634e-01,\n    4.47033769538089176780609900322854000e-01,\n    4.92480467861778574993693061207708796e-01,\n    5.36624148142019899264169793311072794e-01,\n    5.79345235826361691756024932172540496e-01,\n    6.20526182989242861140477556431189299e-01,\n    6.60061064126626961370053668149270753e-01,\n    6.97850494793315796932292388026640068e-01,\n    7.33790062453226804726171131369527646e-01,\n    7.67777432104826194917977340974503132e-01,\n    7.99727835821839083013668942322683241e-01,\n    8.29565762382768397442898119732501916e-01,\n    8.57205233546061098958658510658943857e-01,\n    8.82560535792052681543116462530225590e-01,\n    9.05573307699907798546522558925958320e-01,\n    9.26200047429274325879324277080474004e-01,\n    9.44374444748559979415831324037439122e-01,\n    9.60021864968307512216871025581797663e-01,\n    9.73116322501126268374693868423706885e-01,\n    9.83668123279747209970032581605662802e-01,\n    9.91630996870404594858628366109485725e-01,\n    9.96893484074649540271630050918695283e-01,\n    9.99484410050490637571325895705810819e-01,\n  ],\n};\n\nconst GAUSS_KRONROD_WEIGHTS = {\n  21: [\n    1.49445554002916905664936468389821204e-01,\n    1.47739104901338491374841515972068046e-01,\n    1.42775938577060080797094273138717061e-01,\n    1.34709217311473325928054001771706833e-01,\n    1.23491976262065851077958109831074160e-01,\n    1.09387158802297641899210590325804960e-01,\n    9.31254545836976055350654650833663444e-02,\n    7.50396748109199527670431409161900094e-02,\n    5.47558965743519960313813002445801764e-02,\n    3.25581623079647274788189724593897606e-02,\n    1.16946388673718742780643960621920484e-02,\n  ],\n  31: [\n    1.01330007014791549017374792767492547e-01,\n    1.00769845523875595044946662617569722e-01,\n    9.91735987217919593323931734846031311e-02,\n    9.66427269836236785051799076275893351e-02,\n    9.31265981708253212254868727473457186e-02,\n    8.85644430562117706472754436937743032e-02,\n    8.30805028231330210382892472861037896e-02,\n    7.68496807577203788944327774826590067e-02,\n    6.98541213187282587095200770991474758e-02,\n    6.20095678006706402851392309608029322e-02,\n    5.34815246909280872653431472394302968e-02,\n    4.45897513247648766082272993732796902e-02,\n    3.53463607913758462220379484783600481e-02,\n    2.54608473267153201868740010196533594e-02,\n    1.50079473293161225383747630758072681e-02,\n    5.37747987292334898779205143012764982e-03,\n  ],\n  61: [\n    5.14947294294515675583404336470993075e-02,\n    5.14261285374590259338628792157812598e-02,\n    5.12215478492587721706562826049442083e-02,\n    5.08817958987496064922974730498046919e-02,\n    5.04059214027823468408930856535850289e-02,\n    4.97956834270742063578115693799423285e-02,\n    4.90554345550297788875281653672381736e-02,\n    4.81858617570871291407794922983045926e-02,\n    4.71855465692991539452614781810994865e-02,\n    4.60592382710069881162717355593735806e-02,\n    4.48148001331626631923555516167232438e-02,\n    4.34525397013560693168317281170732581e-02,\n    4.19698102151642461471475412859697578e-02,\n    4.03745389515359591119952797524681142e-02,\n    3.86789456247275929503486515322810503e-02,\n    3.68823646518212292239110656171359677e-02,\n    3.49793380280600241374996707314678751e-02,\n    3.29814470574837260318141910168539275e-02,\n    3.09072575623877624728842529430922726e-02,\n    2.87540487650412928439787853543342111e-02,\n    2.65099548823331016106017093350754144e-02,\n    2.41911620780806013656863707252320268e-02,\n    2.18280358216091922971674857383389934e-02,\n    1.94141411939423811734089510501284559e-02,\n    1.69208891890532726275722894203220924e-02,\n    1.43697295070458048124514324435800102e-02,\n    1.18230152534963417422328988532505929e-02,\n    9.27327965951776342844114689202436042e-03,\n    6.63070391593129217331982636975016813e-03,\n    3.89046112709988405126720184451550328e-03,\n    1.38901369867700762455159122675969968e-03,\n  ],\n};\n\n// const GAUSS_ABSCISSA = {\n//   10: [\n//     1.48874338981631210884826001129719985e-01,\n//     4.33395394129247190799265943165784162e-01,\n//     6.79409568299024406234327365114873576e-01,\n//     8.65063366688984510732096688423493049e-01,\n//     9.73906528517171720077964012084452053e-01\n//   ],\n//   15: [\n//     0.00000000000000000000000000000000000e+00,\n//     2.01194093997434522300628303394596208e-01,\n//     3.94151347077563369897207370981045468e-01,\n//     5.70972172608538847537226737253910641e-01,\n//     7.24417731360170047416186054613938010e-01,\n//     8.48206583410427216200648320774216851e-01,\n//     9.37273392400705904307758947710209471e-01,\n//     9.87992518020485428489565718586612581e-01,\n//   ],\n//   30: [\n//     5.14718425553176958330252131667225737e-02,\n//     1.53869913608583546963794672743255920e-01,\n//     2.54636926167889846439805129817805108e-01,\n//     3.52704725530878113471037207089373861e-01,\n//     4.47033769538089176780609900322854000e-01,\n//     5.36624148142019899264169793311072794e-01,\n//     6.20526182989242861140477556431189299e-01,\n//     6.97850494793315796932292388026640068e-01,\n//     7.67777432104826194917977340974503132e-01,\n//     8.29565762382768397442898119732501916e-01,\n//     8.82560535792052681543116462530225590e-01,\n//     9.26200047429274325879324277080474004e-01,\n//     9.60021864968307512216871025581797663e-01,\n//     9.83668123279747209970032581605662802e-01,\n//     9.96893484074649540271630050918695283e-01,\n//   ]\n// };\n\nconst GAUSS_WEIGHTS = {\n  10: [\n    2.95524224714752870173892994651338329e-01,\n    2.69266719309996355091226921569469353e-01,\n    2.19086362515982043995534934228163192e-01,\n    1.49451349150580593145776339657697332e-01,\n    6.66713443086881375935688098933317929e-02,\n  ],\n  15: [\n    2.02578241925561272880620199967519315e-01,\n    1.98431485327111576456118326443839325e-01,\n    1.86161000015562211026800561866422825e-01,\n    1.66269205816993933553200860481208811e-01,\n    1.39570677926154314447804794511028323e-01,\n    1.07159220467171935011869546685869303e-01,\n    7.03660474881081247092674164506673385e-02,\n    3.07532419961172683546283935772044177e-02,\n  ],\n  30: [\n    1.02852652893558840341285636705415044e-01,\n    1.01762389748405504596428952168554045e-01,\n    9.95934205867952670627802821035694765e-02,\n    9.63687371746442596394686263518098651e-02,\n    9.21225222377861287176327070876187672e-02,\n    8.68997872010829798023875307151257026e-02,\n    8.07558952294202153546949384605297309e-02,\n    7.37559747377052062682438500221907342e-02,\n    6.59742298821804951281285151159623612e-02,\n    5.74931562176190664817216894020561288e-02,\n    4.84026728305940529029381404228075178e-02,\n    3.87991925696270495968019364463476920e-02,\n    2.87847078833233693497191796112920436e-02,\n    1.84664683110909591423021319120472691e-02,\n    7.96819249616660561546588347467362245e-03,\n  ],\n};\n\nconst ROOT_EPSILON = Math.sqrt(Number.EPSILON);\n\nclass GaussKronrod {\n  constructor(N = 21, maxDepth = 15, maxRelativeError = ROOT_EPSILON) {\n    this.N = N;\n    this.maxDepth = maxDepth;\n    this.maxRelativeError = maxRelativeError;\n    this.error = 0;\n  }\n\n  _integrateNonAdaptive(f) {\n    let N = this.N;\n    let gauss_start = 2;\n    let kronrod_start = 1;\n    let gauss_order = (N - 1) / 2;\n    let kronrod_result = 0;\n    let gauss_result = 0;\n    let fp, fm;\n\n    if (gauss_order & 1) {\n      fp = f(0);\n      kronrod_result = fp * GAUSS_KRONROD_WEIGHTS[N][0];\n      gauss_result += fp * GAUSS_WEIGHTS[(N - 1) / 2][0];\n    } else {\n      fp = f(0);\n      kronrod_result = fp * GAUSS_KRONROD_WEIGHTS[N][0];\n      gauss_start = 1;\n      kronrod_start = 2;\n    }\n\n    for (let i = gauss_start; i < GAUSS_KRONROD_ABSCISSA[N].length; i += 2) {\n      fp = f(GAUSS_KRONROD_ABSCISSA[N][i]);\n      fm = f(-GAUSS_KRONROD_ABSCISSA[N][i]);\n      kronrod_result += (fp + fm) * GAUSS_KRONROD_WEIGHTS[N][i];\n      gauss_result += (fp + fm) * GAUSS_WEIGHTS[(N - 1) / 2][Math.floor(i / 2)];\n    }\n\n    for (let i = kronrod_start; i < GAUSS_KRONROD_ABSCISSA[N].length; i += 2) {\n      fp = f(GAUSS_KRONROD_ABSCISSA[N][i]);\n      fm = f(-GAUSS_KRONROD_ABSCISSA[N][i]);\n      kronrod_result += (fp + fm) * GAUSS_KRONROD_WEIGHTS[N][i];\n    }\n\n    let error = Math.max(Math.abs(kronrod_result - gauss_result), Math.abs(kronrod_result * Number.EPSILON * 2));\n    return [kronrod_result, error];\n  }\n\n  _recursiveAdaptiveIntegrate(f, a, b, max_levels, abs_tol) {\n    let error_local;\n    let estimate;\n    let mean = (b + a) / 2;\n    let scale = (b - a) / 2;\n    let ff = (x) => {\n      return f(scale * x + mean);\n    };\n    [estimate, error_local] = this._integrateNonAdaptive(ff);\n    estimate *= scale;\n\n    let abs_tol1 = Math.abs(estimate * this.maxRelativeError);\n    if (!abs_tol) {\n      abs_tol = abs_tol1;\n    }\n\n    if (max_levels && (abs_tol < error_local)) {\n      let mid = (a + b) / 2;\n      [estimate ] = this._recursiveAdaptiveIntegrate(f, a, mid, max_levels - 1, abs_tol / 2);\n      let result = this._recursiveAdaptiveIntegrate(f, mid, b, max_levels - 1, abs_tol / 2);\n      estimate += result[0];\n      this.error += result[1];\n      return [estimate, error_local];\n    }\n\n    this.error = error_local;\n    //let dbg = `${a.toString().padEnd(15)} ${b.toString().padEnd(15)} ${max_levels.toString().padEnd(5)} ${abs_tol.toExponential(2).padEnd(11)} ${estimate.toExponential(2).padEnd(11)} ${error_local.toExponential(2).padStart(5).padEnd(11)}\\n`;\n    //this.stream.write(dbg);\n    return [estimate, error_local];\n  }\n\n  integrate(f, a, b) {\n    let result;\n    if (isFinite(a) && isFinite(b)) {\n      result = this._recursiveAdaptiveIntegrate(f, a, b, this.maxDepth, 0);\n    } else {\n      throw new Error('Additional integration limits not implemented');\n    }\n    return result;\n  }\n}\n\nconst EXP_SINH_ABSCISSAS = [\n  [7.241670621354483269e-163, 2.257639733856759198e-60, 1.153241619257215165e-22, 8.747691973876861825e-09, 1.173446923800022477e-03, 1.032756936219208144e-01, 7.719261204224504866e-01, 4.355544675823585545e+00, 1.215101039066652656e+02, 6.228845436711506169e+05, 6.278613977336989392e+15, 9.127414935180233465e+42, 6.091127771174027909e+116],\n  [4.547459836328942014e-99, 6.678756542928857080e-37, 5.005042973041566360e-14, 1.341318484151208960e-05, 1.833875636365939263e-02, 3.257972971286326131e-01, 1.712014688483495078e+00, 1.613222549264089627e+01, 3.116246745274236447e+03, 3.751603952020919663e+09, 1.132259067258797346e+26, 6.799257464097374238e+70],\n  [5.314690663257815465e-127, 2.579830034615362946e-77, 3.534801062399966878e-47, 6.733941646704537777e-29, 8.265803726974829043e-18, 4.424914371157762285e-11, 5.390411046738629465e-07, 1.649389713333761449e-04, 5.463728936866216652e-03, 4.787896410534771955e-02, 1.931544616590306846e-01, 5.121421856617965197e-01, 1.144715949265016019e+00, 2.648424684387670480e+00, 7.856804169938798917e+00, 3.944731803343517708e+01, 5.060291993016831194e+02, 3.181117494063683297e+04, 2.820174654949211729e+07, 1.993745099515255184e+12, 1.943469269499068563e+20, 2.858803732300638372e+33, 1.457292199029008637e+55, 8.943565831706355607e+90, 9.016198369791554655e+149],\n  [8.165631636299519857e-144, 3.658949309353149331e-112, 1.635242513882908826e-87, 2.578381184977746454e-68, 2.305546416275824199e-53, 1.016725540031465162e-41, 1.191823622917539774e-32, 1.379018088205016509e-25, 4.375640088826073184e-20, 8.438464631330991606e-16, 1.838483310261119782e-12, 7.334264181393092650e-10, 7.804740587931068021e-08, 2.970395577741681504e-06, 5.081805431666579484e-05, 4.671401627620431498e-04, 2.652347404231090523e-03, 1.037409202661683856e-02, 3.045225582205323946e-02, 7.178280364982721201e-02, 1.434001065841990688e-01, 2.535640852949085796e-01, 4.113268917643175920e-01, 6.310260805648534613e-01, 9.404706503455087817e-01, 1.396267301972783068e+00, 2.116896928689963277e+00, 3.364289290471596568e+00, 5.770183960005836987e+00, 1.104863531218761752e+01, 2.460224479439805859e+01, 6.699316387888639988e+01, 2.375794092475844708e+02, 1.188092202760116066e+03, 9.269848635975416108e+03, 1.283900116155671304e+05, 3.723397798030112514e+06, 2.793667983952389721e+08, 7.112973790863854188e+10, 8.704037695808749572e+13, 8.001474015782459984e+17, 9.804091819390540578e+22, 3.342777673392873288e+29, 8.160092668471508447e+37, 4.798775331663586528e+48, 3.228614320248853938e+62, 1.836986041572136151e+80, 1.153145986877483804e+103, 2.160972586723647751e+132],\n  [4.825077401709435655e-153, 3.813781211050297560e-135, 2.377824349780240844e-119, 2.065817295388293122e-105, 4.132105770181358886e-93, 2.963965169989404311e-82, 1.127296662046635391e-72, 3.210346399945695041e-64, 9.282992368222161062e-57, 3.565977853916619677e-50, 2.306962519220473637e-44, 3.098751038516535098e-39, 1.039558064722960891e-34, 1.025256027381235200e-30, 3.432612000569885403e-27, 4.429681881379089961e-24, 2.464589267395236846e-21, 6.526691446363344923e-19, 8.976892324445928684e-17, 6.926277695183452225e-15, 3.208805316815751272e-13, 9.478053068835988899e-12, 1.882052586691155400e-10, 2.632616062773909009e-09, 2.703411837703917665e-08, 2.113642195965330965e-07, 1.299327029813074013e-06, 6.461189935136030673e-06, 2.665090959570723827e-05, 9.322774986189288194e-05, 2.820463407940068813e-04, 7.508613300035051413e-04, 1.786142185986551786e-03, 3.848376610765768211e-03, 7.600810651854199771e-03, 1.390873269178271700e-02, 2.380489559528694982e-02, 3.842796337748997654e-02, 5.895012901671883992e-02, 8.651391160689367948e-02, 1.221961347398101671e-01, 1.670112314557845555e-01, 2.219593619059930701e-01, 2.881200442770917241e-01, 3.667906976948184315e-01, 4.596722879563388211e-01, 5.691113093602836208e-01, 6.984190600916228379e-01, 8.523070690462583711e-01, 1.037505121571600249e+00, 1.263672635742961915e+00, 1.544788480334120896e+00, 1.901333876886441433e+00, 2.363816272813317635e+00, 2.978614980117902904e+00, 3.817957977526709364e+00, 4.997477803461245639e+00, 6.708150685706236545e+00, 9.276566033183386532e+00, 1.328332469239125539e+01, 1.980618680552458639e+01, 3.094452809319702849e+01, 5.101378787119006225e+01, 8.943523638413590523e+01, 1.682138665185088325e+02, 3.427988270281270587e+02, 7.653823671943767281e+02, 1.895993667030670343e+03, 5.285404568827643942e+03, 1.684878049282191210e+04, 6.254388805482299369e+04, 2.759556544455721132e+05, 1.481213238071008345e+06, 9.929728611179601424e+06, 8.564987764771851841e+07, 9.831650826344826952e+08, 1.560339073978569502e+10, 3.575098885016726922e+11, 1.241973798101884982e+13, 6.915106205748805839e+14, 6.571419716645131084e+16, 1.144558033138694099e+19, 3.960915669532823553e+21, 2.984410558028297842e+24, 5.430494850258846715e+27, 2.683747612498502676e+31, 4.114885708325522701e+35, 2.276004816861421600e+40, 5.387544917595833246e+45, 6.623575732955432303e+51, 5.266881304835239338e+58, 3.473234812654772210e+66, 2.517492645985977377e+75, 2.759797646289240629e+85, 6.569603829502412077e+96, 5.116181648220647995e+109, 2.073901892339407423e+124, 7.406462446666255838e+140],\n  [7.053618140948655098e-158, 2.343354218558056628e-148, 2.062509087689351439e-139, 5.212388628332260488e-131, 4.079380320868843387e-123, 1.061481285006738214e-115, 9.816727607793017691e-109, 3.435400719609722581e-102, 4.825198574681495574e-96, 2.874760995089533358e-90, 7.652499977338879996e-85, 9.556944498127119032e-80, 5.862241023038227937e-75, 1.843934000129616663e-70, 3.096983980846232911e-66, 2.885057452402340330e-62, 1.544904681826443837e-58, 4.917572705671511534e-55, 9.602608566391652866e-52, 1.184882375237471009e-48, 9.499223316355714793e-46, 5.078965858882528461e-43, 1.856080838373584123e-40, 4.744245560917271585e-38, 8.667497891102658240e-36, 1.155086178652063612e-33, 1.144541329818836153e-31, 8.585083084065812874e-30, 4.957702933032408922e-28, 2.239353794616277882e-26, 8.030405447708765492e-25, 2.318459271131684362e-23, 5.460287296679086677e-22, 1.062054307071706375e-20, 1.725955878033239909e-19, 2.369168446274347137e-18, 2.775176063916613602e-17, 2.800847352316621903e-16, 2.457625954357892245e-15, 1.890842052364646528e-14, 1.285791209258834942e-13, 7.786001004707878219e-13, 4.228083024410741194e-12, 2.072664297543567489e-11, 9.229295073519997559e-11, 3.754886152592311575e-10, 1.403443871774813834e-09, 4.843962757371872495e-09, 1.551373196623161433e-08, 4.631448362339623514e-08, 1.294370176865168120e-07, 3.400050664017164356e-07, 8.426290307581447654e-07, 1.977205177561996033e-06, 4.407362363338667830e-06, 9.362197325373404563e-06, 1.900760383449277992e-05, 3.698530963711860636e-05, 6.915333419235766653e-05, 1.245492076251852927e-04, 2.165764713808099093e-04, 3.643870211078977292e-04, 5.943999416122372516e-04, 9.418663022314558591e-04, 1.452364274261880083e-03, 2.183094846035196562e-03, 3.203848855069215278e-03, 4.597532353031862490e-03, 6.460168315117479792e-03, 8.900334989802041559e-03, 1.203804973137064275e-02, 1.600315622064554965e-02, 2.093331703849583304e-02, 2.697174812170771748e-02, 3.426485378063329473e-02, 4.295992956149806344e-02, 5.320309587203163231e-02, 6.513760993479510261e-02, 7.890268021756337834e-02, 9.463287940877026649e-02, 1.124582226719385153e-01, 1.325049504086213973e-01, 1.548970316076579260e-01, 1.797583869192584860e-01, 2.072158210677632145e-01, 2.374026527414815016e-01, 2.704630368855767324e-01, 3.065569893452247137e-01, 3.458661469783558388e-01, 3.886003277325320632e-01, 4.350049951304795319e-01, 4.853697810067132707e-01, 5.400382807495678589e-01, 5.994194092045578293e-01, 6.640006964388650918e-01, 7.343640159321037167e-01, 8.112043806284638130e-01, 8.953526245122194172e-01, 9.878030224123093447e-01, 1.089747207002141516e+00, 1.202616144679226559e+00, 1.328132465995424226e+00, 1.468376159872979355e+00, 1.625867601500928277e+00, 1.803673186618691186e+00, 2.005540624723209206e+00, 2.236073393446881709e+00, 2.500957254018255004e+00, 2.807256477663534857e+00, 3.163804128101147487e+00, 3.581720263742550029e+00, 4.075105576391566303e+00, 4.661977749936137761e+00, 5.365546718714963091e+00, 6.215967676434536043e+00, 7.252774367330402583e+00, 8.528291278204291331e+00, 1.011247001122720391e+01, 1.209982167952718578e+01, 1.461947158782994207e+01, 1.784992423404041042e+01, 2.204102944968352178e+01, 2.754711235628932374e+01, 3.487766600641650640e+01, 4.477610230214251576e+01, 5.834406132739843834e+01, 7.724096630394042216e+01, 1.040101075374387191e+02, 1.426215523101601730e+02, 1.993940974645466479e+02, 2.845939167898235356e+02, 4.152683836292551147e+02, 6.203878718481709769e+02, 9.504080873581791535e+02, 1.495523342124078853e+03, 2.421485328006836634e+03, 4.041977218227396500e+03, 6.969453497454785202e+03, 1.244001690461442846e+04, 2.303794930506892099e+04, 4.437240927040385250e+04, 8.911296561746717657e+04, 1.871159398849787994e+05, 4.119851492265743330e+05, 9.540971729944126398e+05, 2.331680521880789706e+06, 6.034305391011695472e+06, 1.659896369452266448e+07, 4.872448839341613053e+07, 1.532687586549090392e+08, 5.189730792935011722e+08, 1.900599621040508288e+09, 7.566480431232731818e+09, 3.292298322781643849e+10, 1.574714421665075635e+11, 8.330244306239795892e+11, 4.905619969814187571e+12, 3.238316002757222702e+13, 2.413995281454699076e+14, 2.048115587426077343e+15, 1.994352670766892066e+16, 2.248750566422739144e+17, 2.964037541992353401e+18, 4.613233119968213445e+19, 8.569680508342001161e+20, 1.921851711942844799e+22, 5.266829246099861758e+23, 1.786779952992288976e+25, 7.607919705736976491e+26, 4.125721424346450007e+28, 2.894340142292214313e+30, 2.670720269656428272e+32, 3.299248229135205151e+34, 5.560105583582310103e+36, 1.304167266599523020e+39, 4.349382146382717353e+41, 2.109720387774341509e+44, 1.524825352702403324e+47, 1.684941265105084589e+50, 2.925572737558413426e+53, 8.217834961057481281e+56, 3.852117991896536784e+60, 3.114452310394384063e+64, 4.498555465873245751e+68, 1.205113215232800796e+73, 6.230864727145221322e+77, 6.487131248948465269e+82, 1.422810109167834249e+88, 6.897656089181724717e+93, 7.779163462756485195e+99, 2.155213251859555072e+106, 1.554347160152705281e+113, 3.103875072425192272e+120, 1.832673821557018634e+128, 3.431285951865278376e+136, 2.194542081542393530e+145],\n  [2.363803632659058081e-160, 1.926835442612677686e-155, 1.109114905180506786e-150, 4.556759282087534164e-146, 1.350172241067816232e-141, 2.914359263635229435e-137, 4.627545976953585825e-133, 5.456508344460398758e-129, 4.821828861306345485e-125, 3.221779152402086241e-121, 1.641732102111619421e-117, 6.433569189921227126e-114, 1.954582672700428961e-110, 4.639912078942456372e-107, 8.671928891742699827e-104, 1.285485264305858782e-100, 1.522161801460927566e-97, 1.449767844425295085e-94, 1.118122255504445235e-91, 7.028344777398825069e-89, 3.623454064991238081e-86, 1.541513438874996543e-83, 5.443699502170284982e-81, 1.604913673768949456e-78, 3.972206240977317536e-76, 8.297975554162539562e-74, 1.470748835855054032e-71, 2.222935801472624670e-69, 2.879160361851977720e-67, 3.210837413250902178e-65, 3.097303984958235490e-63, 2.595974479763180595e-61, 1.898656799199089593e-59, 1.216865518398435626e-57, 6.862041810601184397e-56, 3.418134121780773218e-54, 1.509758535747580387e-52, 5.934924977563731784e-51, 2.083865009061241099e-49, 6.558128104492290092e-48, 1.856133016606468181e-46, 4.739964621828176249e-45, 1.095600459825324697e-43, 2.299177139060262518e-42, 4.393663812095906869e-41, 7.667728102142858487e-40, 1.225476279042445010e-38, 1.798526997315960782e-37, 2.430201154741018716e-36, 3.030993518975438712e-35, 3.497966609954172613e-34, 3.744308272796551045e-33, 3.726132797819332658e-32, 3.455018936399215381e-31, 2.991524108706319604e-30, 2.423818520801870809e-29, 1.841452809687011486e-28, 1.314419760826235421e-27, 8.831901010260867670e-27, 5.596660060604091621e-26, 3.350745417080507841e-25, 1.898675566025820409e-24, 1.019982287418197376e-23, 5.203315082978366918e-23, 2.524668746906057148e-22, 1.166904646009344233e-21, 5.145437675264868732e-21, 2.167677145279166596e-20, 8.736996911006110678e-20, 3.373776431076593266e-19, 1.249769727462160008e-18, 4.446913832647864892e-18, 1.521741180930875343e-17, 5.014158301377399707e-17, 1.592708205361177316e-16, 4.882536933653862982e-16, 1.446109387544416586e-15, 4.142510168443201880e-15, 1.148892083132325407e-14, 3.088024760858924214e-14, 8.051699653634442236e-14, 2.038478329249539199e-13, 5.015686309363884049e-13, 1.200444984849900298e-12, 2.797125428309156462e-12, 6.350357793399881333e-12, 1.405881744263466936e-11, 3.037391821635123795e-11, 6.408863411016101449e-11, 1.321618431565916164e-10, 2.665526566207284474e-10, 5.261497418654313068e-10, 1.017123184766088896e-09, 1.926882221639203388e-09, 3.579523428497157488e-09, 6.524486847652635035e-09, 1.167543991262942921e-08, 2.052356080018121741e-08, 3.545879678923676129e-08, 6.024472481556065885e-08, 1.007076869023518125e-07, 1.657191565891799652e-07, 2.685718943404479677e-07, 4.288752213761154116e-07, 6.751222405372943925e-07, 1.048111270324302884e-06, 1.605433960692314060e-06, 2.427271958412371013e-06, 3.623770645356477660e-06, 5.344280132492750309e-06, 7.788767891027678939e-06, 1.122171160022519082e-05, 1.598877254198599908e-05, 2.253652700952153115e-05, 3.143549403208496646e-05, 4.340664122305257288e-05, 5.935147653125578529e-05, 8.038574285450253209e-05, 1.078766266062957565e-04, 1.434832731669987826e-04, 1.892002753957224677e-04, 2.474036705329449166e-04, 3.208988510028906069e-04, 4.129696713145546995e-04, 5.274279220384250390e-04, 6.686622480794640482e-04, 8.416855170641220285e-04, 1.052179598744440400e-03, 1.306536501050643762e-03, 1.611894824798787196e-03, 1.976170547826080496e-03, 2.408081229927640721e-03, 2.917162840577481875e-03, 3.513778549028205519e-03, 4.209118976964403112e-03, 5.015193592567630665e-03, 5.944813116164644191e-03, 7.011563005746090924e-03, 8.229768289624073049e-03, 9.614450207543986041e-03, 1.118127530523730813e-02, 1.294649779580742160e-02, 1.492689615029751590e-02, 1.713970500593860526e-02, 1.960254358145296755e-02, 2.233334186285684056e-02, 2.535026586984720664e-02, 2.867164333232700310e-02, 3.231589109997912964e-02, 3.630144557680610965e-02, 4.064669741956638109e-02, 4.536993166688766414e-02, 5.048927437769432941e-02, 5.602264675683979161e-02, 6.198772763597769678e-02, 6.840192506222012774e-02, 7.528235762939712171e-02, 8.264584606994605986e-02, 9.050891551257121825e-02, 9.888780870447738360e-02, 1.077985103995250356e-01, 1.172567830270636607e-01, 1.272782136821146663e-01, 1.378782724173011162e-01, 1.490723817714478840e-01, 1.608759974398061173e-01, 1.733046999768424060e-01, 1.863742974247175786e-01, 2.001009387790379976e-01, 2.145012382381487190e-01, 2.295924102330349785e-01, 2.453924153016625057e-01, 2.619201169541956490e-01, 2.791954497739298773e-01, 2.972395991130188526e-01, 3.160751928723792943e-01, 3.357265060019327741e-01, 3.562196785212496373e-01, 3.775829480426418792e-01, 3.998468979800887046e-01, 4.230447228497335035e-01, 4.472125123131631074e-01, 4.723895558858634018e-01, 4.986186705332947608e-01, 5.259465537097384485e-01, 5.544241647649479754e-01, 5.841071380560416511e-01, 6.150562315632864018e-01, 6.473378153258308278e-01, 6.810244045956889952e-01, 7.161952432654565143e-01, 7.529369438691556459e-01, 7.913441913000366617e-01, 8.315205183502086596e-01, 8.735791622734589226e-01, 9.176440128265773576e-01, 9.638506636817484398e-01, 1.012347580753402101e+00, 1.063297402882930381e+00, 1.116878392515788506e+00, 1.173286056537125469e+00, 1.232734960362603918e+00, 1.295460761779549539e+00, 1.361722494981910846e+00, 1.431805139837984876e+00, 1.506022516788234345e+00, 1.584720554029819354e+00, 1.668280980969603645e+00, 1.757125510515793421e+00, 1.851720582866847453e+00, 1.952582755329533200e+00, 2.060284836698905963e+00, 2.175462881275503983e+00, 2.298824177179966629e+00, 2.431156386859774759e+00, 2.573338025304717222e+00, 2.726350494395667363e+00, 2.891291931102408784e+00, 3.069393174263124520e+00, 3.262036211067640944e+00, 3.470775532153801919e+00, 3.697362905908153155e+00, 3.943776181224350319e+00, 4.212252847439515687e+00, 4.505329225191826639e+00, 4.825886338442190807e+00, 5.177203733275742875e+00, 5.563022772612923373e+00, 5.987621259260909859e+00, 6.455901637501497370e+00, 6.973495514195020291e+00, 7.546887847708181032e+00, 8.183564906772872855e+00, 8.892191039842283431e+00, 9.682820467523296204e+00, 1.056715177903931837e+01, 1.155883465937652851e+01, 1.267384070151528947e+01, 1.393091310389918289e+01, 1.535211379418177923e+01, 1.696349128797309510e+01, 1.879589868990482198e+01, 2.088599907466058846e+01, 2.327750557804054323e+01, 2.602271658731131093e+01, 2.918442338619305962e+01, 3.283828974258811174e+01, 3.707583192189045823e+01, 4.200816575721451990e+01, 4.777073782243997224e+01, 5.452932468101429049e+01, 6.248767344468634478e+01, 7.189727649240108469e+01, 8.306993427631743111e+01, 9.639397813652482031e+01, 1.123553215857374919e+02, 1.315649140340119335e+02, 1.547947284376312334e+02, 1.830251850988715552e+02, 2.175079854175568113e+02, 2.598498278995140400e+02, 3.121245867818556035e+02, 3.770245173783702458e+02, 4.580653020257635092e+02, 5.598658426219653689e+02, 6.885324967857802403e+02, 8.521902266884453403e+02, 1.061721815114114004e+03, 1.331803836529085656e+03, 1.682368940494210217e+03, 2.140685129891926443e+03, 2.744334847491432747e+03, 3.545516659371773357e+03, 4.617306735234797694e+03, 6.062848530677391758e+03, 8.028955134017154634e+03, 1.072641999277462936e+04, 1.446061873485939411e+04, 1.967804579389513789e+04, 2.703776201447279367e+04, 3.752217148194723312e+04, 5.261052412010591097e+04, 7.455350923854624329e+04, 1.068125318497402759e+05, 1.547702528541975911e+05, 2.268930751685412563e+05, 3.366554971645478061e+05, 5.057644049026088560e+05, 7.696291826884134742e+05, 1.186761864945790800e+06, 1.855146094294667715e+06, 2.941132644236832276e+06, 4.731169740596920355e+06, 7.725765147199987935e+06, 1.281272565991955126e+07, 2.159151785284808339e+07, 3.699029448836502904e+07, 6.445902263727884020e+07, 1.143158678867853615e+08, 2.064425450996979446e+08, 3.798502995329785506e+08, 7.125329484929003007e+08, 1.363463294023391629e+09, 2.663196590686555077e+09, 5.313347815419462975e+09, 1.083506369700027396e+10, 2.259930737910197667e+10, 4.824707991473375387e+10, 1.055069002818752104e+11, 2.365138040635727209e+11, 5.439266129959972285e+11, 1.284356371641026839e+12, 3.116424654245920797e+12, 7.777312465656280419e+12, 1.997984843259596733e+13, 5.288649037339853118e+13, 1.443776937640548342e+14, 4.068967444890414804e+14, 1.185049702391501141e+15, 3.570348091883284324e+15, 1.113971254034978026e+16, 3.603374982229766184e+16, 1.209803708182151942e+17, 4.220890251904870611e+17, 1.532169872312865862e+18, 5.793890867821715890e+18, 2.285379920879842924e+19, 9.415714369232187727e+19, 4.057471211245170887e+20, 1.831405465804324767e+21, 8.671209773404504008e+21, 4.313209261217173994e+22, 2.257498454242656934e+23, 1.245267136898199709e+24, 7.251536499435180219e+24, 4.465573963364524765e+25, 2.913233420596266283e+26, 2.017063171206072979e+27, 1.485014353353330393e+28, 1.164811091759882662e+29, 9.753661264047912784e+29, 8.737124417851167566e+30, 8.390503265508677363e+31, 8.657362701430272680e+32, 9.619472292454361392e+33, 1.153735498483960294e+35, 1.497284701983562213e+36, 2.107816695320163748e+37, 3.227106623185610745e+38, 5.387696372515021985e+39, 9.835496017627849225e+40, 1.968904749086105300e+42, 4.334704147416758275e+43, 1.052717645113369473e+45, 2.829013521120326147e+46, 8.439656297525588822e+47, 2.804279894508234869e+49, 1.041383695988523864e+51, 4.337366591019718310e+52, 2.033523569151676725e+54, 1.077238847489773081e+56, 6.472891251891105455e+57, 4.429404678715878536e+59, 3.466135480828349864e+61, 3.114928656972704276e+63, 3.228947925415990689e+65, 3.878402486902381042e+67, 5.423187597439531197e+69, 8.870779393460412583e+71, 1.705832285076755970e+74, 3.876224350373120420e+76, 1.046359534886878004e+79, 3.373858809560757544e+81, 1.306762499786044015e+84, 6.115300889685679832e+86, 3.478550048884517349e+89, 2.420073578988056289e+92, 2.072453567501123129e+95, 2.199029867204449277e+98, 2.910868575802139983e+101, 4.840699137490951163e+104, 1.018669397739170369e+108, 2.733025017438095928e+111, 9.420797277586029837e+114, 4.205525105722885986e+118, 2.451352708852151939e+122, 1.881577053794165543e+126, 1.918506219134233785e+130, 2.622069659115564900e+134, 4.848463485415763756e+138, 1.224645005481997780e+143, 4.267387286482591954e+147, 2.072505613372582377e+152],\n  [1.323228129684237783e-161, 4.129002973520822791e-159, 1.178655462569548882e-156, 3.082189008893206231e-154, 7.393542832199414487e-152, 1.629100644355328639e-149, 3.301545529059822941e-147, 6.162031390854241227e-145, 1.060528194470986309e-142, 1.685225757497235089e-140, 2.475534097582263629e-138, 3.365764749507587192e-136, 4.240562683924022383e-134, 4.956794227885611715e-132, 5.381716367914161520e-130, 5.433507172294988849e-128, 5.107031242794315420e-126, 4.473704932098646394e-124, 3.656376947377888629e-122, 2.791170022694259001e-120, 1.992200238692415032e-118, 1.330894359393789718e-116, 8.330356767359890503e-115, 4.890256639970245146e-113, 2.695128935451165447e-111, 1.395829605415630844e-109, 6.799997527188085942e-108, 3.119037767379032293e-106, 1.348260131419216291e-104, 5.497526018943990804e-103, 2.116384670251198533e-101, 7.699148714858061209e-100, 2.649065347250598345e-98, 8.628189263549727753e-97, 2.662520943248368922e-95, 7.790698623582886341e-94, 2.163354866683077281e-92, 5.705576739797220361e-91, 1.430338193028564913e-89, 3.411040781372328747e-88, 7.744268073516449037e-87, 1.675136564303435813e-85, 3.454795810595704816e-84, 6.798573137099477363e-83, 1.277474708033782661e-81, 2.293702139426309483e-80, 3.938021700015175030e-79, 6.469593934876300124e-78, 1.017725266990912471e-76, 1.534019529793324951e-75, 2.216999886838860916e-74, 3.074100747562803362e-73, 4.092295330837549092e-72, 5.233434175636538471e-71, 6.433506079763357418e-70, 7.607042677901362161e-69, 8.656714387163425357e-68, 9.486746058685489974e-67, 1.001756724248288397e-65, 1.019853943834854330e-64, 1.001591106610665630e-63, 9.494277822444263952e-63, 8.691422918891890649e-62, 7.687977047887448276e-61, 6.574408104196605248e-60, 5.438162502918425191e-59, 4.353340831363003212e-58, 3.374338762181243411e-57, 2.533770921173042330e-56, 1.844048925248616738e-55, 1.301410812308480184e-54, 8.910466744374470063e-54, 5.921538384124132331e-53, 3.821356134297705127e-52, 2.395780657353036891e-51, 1.459882187581820236e-50, 8.650105472076777327e-50, 4.985933550797199316e-49, 2.796911903237435916e-48, 1.527570118993503332e-47, 8.126314048196993302e-47, 4.212436363948578182e-46, 2.128604050242564662e-45, 1.048938356323431072e-44, 5.042753142653687842e-44, 2.365999225494165364e-43, 1.083813462091040325e-42, 4.848963367960316169e-42, 2.119612873737657277e-41, 9.055947139022002648e-41, 3.782987192192666650e-40, 1.545649846917574765e-39, 6.178909752126026357e-39, 2.417597558625940386e-38, 9.261305999966332746e-38, 3.474712971194656115e-37, 1.277215890629181345e-36, 4.600938133935473864e-36, 1.624804314773052044e-35, 5.626808103137929972e-35, 1.911442429947086471e-34, 6.371300415498187125e-34, 2.084444531309441237e-33, 6.695356060065574234e-33, 2.112038435637792931e-32, 6.544802906551512393e-32, 1.992864937623987114e-31, 5.964358817764151755e-31, 1.754973231464949500e-30, 5.078231558861773863e-30, 1.445447866528259475e-29, 4.048099759391660786e-29, 1.115752878927994221e-28, 3.027334168442338592e-28, 8.087868498106224788e-28, 2.128106544151858936e-27, 5.516210113930227985e-27, 1.408890921124863906e-26, 3.546520734326774807e-26, 8.800636481096360494e-26, 2.153319509043984465e-25, 5.196136544731926346e-25, 1.236869058422202190e-24, 2.904891674490918873e-24, 6.732707317563258763e-24, 1.540253603361391055e-23, 3.478765727687221019e-23, 7.758450079933031976e-23, 1.708939324269830276e-22, 3.718467010568811152e-22, 7.994094376769029920e-22, 1.698336774318343123e-21, 3.566214469724002275e-21, 7.402848534866351662e-21, 1.519411719755297549e-20, 3.083993994528608740e-20, 6.191388817974459809e-20, 1.229625987010589227e-19, 2.416245949308411084e-19, 4.698551818749419706e-19, 9.042992978848520439e-19, 1.722880198390020817e-18, 3.249832858354112322e-18, 6.070120594586457562e-18, 1.122871881646098441e-17, 2.057429235664205922e-17, 3.734613207742816399e-17, 6.716694369267842075e-17, 1.197063025055043952e-16, 2.114419661115663617e-16, 3.702017138231021853e-16, 6.425665498746337860e-16, 1.105830903726985419e-15, 1.887156051660563224e-15, 3.193979018679125833e-15, 5.361881977473204459e-15, 8.929318568606692809e-15, 1.475330560958586660e-14, 2.418708636765824964e-14, 3.935078350904051302e-14, 6.354047096308654479e-14, 1.018416666466509442e-13, 1.620423782999307693e-13, 2.559817517056126166e-13, 4.015273886294212810e-13, 6.254532358261761291e-13, 9.675981021394182858e-13, 1.486832112534566186e-12, 2.269557377760486879e-12, 3.441736008766365832e-12, 5.185793859860652413e-12, 7.764217889314004663e-12, 1.155228105746548036e-11, 1.708313121464262097e-11, 2.510951856086201897e-11, 3.668776978510952341e-11, 5.329131813941740314e-11, 7.696325397299480856e-11, 1.105200723643722855e-10, 1.578221843796034825e-10, 2.241309672940976766e-10, 3.165773201144956642e-10, 4.447730510871610704e-10, 6.216041661455164049e-10, 8.642544905395987868e-10, 1.195519306516659349e-09, 1.645482121417189823e-09, 2.253643612941620883e-09, 3.071610576496751310e-09, 4.166474690460445927e-09, 5.625036504185181035e-09, 7.559059638953998396e-09, 1.011177417876491092e-08, 1.346588701906267454e-08, 1.785340092957703350e-08, 2.356759364235337519e-08, 3.097756373337616088e-08, 4.054581171302714730e-08, 5.284939280085554173e-08, 6.860525247854168448e-08, 8.870043714076795346e-08, 1.142279599340281637e-07, 1.465291959965373757e-07, 1.872437814520259903e-07, 2.383680961705324062e-07, 3.023235208219232784e-07, 3.820357732606947876e-07, 4.810267467496160044e-07, 6.035203917139166314e-07, 7.545643021775656875e-07, 9.401687861337141280e-07, 1.167465314019272078e-06, 1.444886349199346242e-06, 1.782368666762205796e-06, 2.191582359683820240e-06, 2.686187812137005286e-06, 3.282122985909738110e-06, 3.997923415034129149e-06, 4.855077333283880469e-06, 5.878418366687560187e-06, 7.096558206229387964e-06, 8.542361632206236097e-06, 1.025346618920209381e-05, 1.227284870748632855e-05, 1.464944073127878202e-05, 1.743879474552002742e-05, 2.070380288967650755e-05, 2.451546960924430874e-05, 2.895373942298085844e-05, 3.410838067694928604e-05, 4.007992581615393488e-05, 4.698066833232878622e-05, 5.493571614427227251e-05, 6.408410073746518169e-05, 7.457994093551813828e-05, 8.659365970069775654e-05, 1.003132518682442285e-04, 1.159456002136906496e-04, 1.337178367385581674e-04, 1.538787455425709779e-04, 1.767002031351005554e-04, 2.024786515302844608e-04, 2.315365989746650402e-04, 2.642241426787982083e-04, 3.009205074706080013e-04, 3.420355938637258307e-04, 3.880115286439000550e-04, 4.393242107257947798e-04, 4.964848447258090522e-04, 5.600414544382562271e-04, 6.305803681962314437e-04, 7.087276679481586600e-04, 7.951505937892094439e-04, 8.905588956558126794e-04, 9.957061239230124343e-04, 1.111390850739538593e-03, 1.238457814094548688e-03, 1.377798976832850428e-03, 1.530354493121150144e-03, 1.697113575214988470e-03, 1.879115253782404405e-03, 2.077449025503311209e-03, 2.293255382179820056e-03, 2.527726216158548279e-03, 2.782105097477072741e-03, 3.057687418798497807e-03, 3.355820404885606963e-03, 3.677902984083964409e-03, 4.025385520026097270e-03, 4.399769402530814407e-03, 4.802606497446985045e-03, 5.235498455973840111e-03, 5.700095884774212336e-03, 6.198097378977308725e-03, 6.731248420937948614e-03, 7.301340148374219834e-03, 7.910207996239952125e-03, 8.559730217397303903e-03, 9.251826287833445298e-03, 9.988455202809488913e-03, 1.077161367093554544e-02, 1.160333421372954856e-02, 1.248568317873621646e-02, 1.342075867475355427e-02, 1.441068843813546585e-02, 1.545762763950860648e-02, 1.656375664055830135e-02, 1.773127871080136402e-02, 1.896241771447260382e-02, 2.025941577780677588e-02, 2.162453094709917839e-02, 2.306003484797691421e-02, 2.456821035631025318e-02, 2.615134929114115217e-02, 2.781175013990572523e-02, 2.955171582608151263e-02, 3.137355152920124081e-02, 3.327956256694509270e-02, 3.527205234875621605e-02, 3.735332041012234938e-02, 3.952566053633324126e-02, 4.179135898416228534e-02, 4.415269280953487221e-02, 4.661192830883879903e-02, 4.917131958110712872e-02, 5.183310721786459418e-02, 5.459951712697841302e-02, 5.747275949639657337e-02, 6.045502790319455825e-02, 6.354849857288828754e-02, 6.675532979350985865e-02, 7.007766148848641979e-02, 7.351761495191403887e-02, 7.707729274938041525e-02, 8.075877878706524317e-02, 8.456413855143733669e-02, 8.849541952147546057e-02, 9.255465175496720496e-02, 9.674384865008904765e-02, 1.010650078831426502e-01, 1.055201125230189472e-01, 1.101111323226840632e-01, 1.148400251877307103e-01, 1.197087388218165293e-01, 1.247192125486176994e-01, 1.298733793097628269e-01, 1.351731678380792159e-01, 1.406205050053816316e-01, 1.462173183439629526e-01, 1.519655387409069424e-01, 1.578671033043359383e-01, 1.639239584007306411e-01, 1.701380628625154331e-01, 1.765113913651907042e-01, 1.830459379734134606e-01, 1.897437198555789051e-01, 1.966067811666385690e-01, 2.036371970991047974e-01, 2.108370781024367852e-01, 2.182085742712797843e-01, 2.257538799033364379e-01, 2.334752382279873511e-01, 2.413749463071469410e-01, 2.494553601102403241e-01, 2.577188997656175820e-01, 2.661680549911833443e-01, 2.748053907075124803e-01, 2.836335528372471376e-01, 2.926552742951268547e-01, 3.018733811735925662e-01, 3.112907991295277084e-01, 3.209105599783561596e-01, 3.307358085024083972e-01, 3.407698094811951648e-01, 3.510159549519934555e-01, 3.614777717099542274e-01, 3.721589290577866932e-01, 3.830632468159621812e-01, 3.941947036053136035e-01, 4.055574454148868711e-01, 4.171557944689308074e-01, 4.289942584079951543e-01, 4.410775398002453309e-01, 4.534105460003012245e-01, 4.659983993741692944e-01, 4.788464479101668631e-01, 4.919602762371392109e-01, 5.053457170727489659e-01, 5.190088631261786795e-01, 5.329560794812372669e-01, 5.471940164876055195e-01, 5.617296231898020413e-01, 5.765701613254061793e-01, 5.917232199261468491e-01, 6.071967305576643327e-01, 6.229989832360855492e-01, 6.391386430620321596e-01, 6.556247676153161584e-01, 6.724668251563812272e-01, 6.896747136835329047e-01, 7.072587808981804764e-01, 7.252298451337033758e-01, 7.435992173071710726e-01, 7.623787239570054101e-01, 7.815807314337971290e-01, 8.012181713158943859e-01, 8.213045671260926392e-01, 8.418540624307963733e-01, 8.628814504084197628e-01, 8.844022049795737430e-01, 9.064325135977815717e-01, 9.289893118061069464e-01, 9.520903196722039764e-01, 9.757540802219457353e-01, 1.000000000000000000e+00, 1.024848391894543008e+00, 1.050320520372784475e+00, 1.076438649284173871e+00, 1.103226092399127978e+00, 1.130707266862927052e+00, 1.158907749757141229e+00, 1.187854337974646084e+00, 1.217575111629048984e+00, 1.248099501235266386e+00, 1.279458358915164500e+00, 1.311684033900709062e+00, 1.344810452627081143e+00, 1.378873203729832710e+00, 1.413909628283517352e+00, 1.449958915644490754e+00, 1.487062205287898607e+00, 1.525262695058439148e+00, 1.564605756286502811e+00, 1.605139056255971231e+00, 1.646912688547541313e+00, 1.689979311822189937e+00, 1.734394297653598793e+00, 1.780215888066332921e+00, 1.827505363488657555e+00, 1.876327221885466881e+00, 1.926749369898304239e+00, 1.978843326886336694e+00, 2.032684442834914613e+00, 2.088352131177556992e+00, 2.145930117663470432e+00, 2.205506706496711366e+00, 2.267175065075584681e+00, 2.331033528772661605e+00, 2.397185927317806037e+00, 2.465741934479827004e+00, 2.536817442887937264e+00, 2.610534965993323711e+00, 2.687024069345184956e+00, 2.766421833546071979e+00, 2.848873351459948781e+00, 2.934532262474922666e+00, 3.023561326873131923e+00, 3.116133043635102211e+00, 3.212430315307524598e+00, 3.312647163894682976e+00, 3.416989502097797957e+00, 3.525675964626843197e+00, 3.638938804749809967e+00, 3.757024861729272487e+00, 3.880196605330264341e+00, 4.008733264172298986e+00, 4.142932045347867609e+00, 4.283109453446644399e+00, 4.429602717916437040e+00, 4.582771338567048147e+00, 4.742998759991079249e+00, 4.910694186746867507e+00, 5.086294552335034437e+00, 5.270266656314831820e+00, 5.463109485364516396e+00, 5.665356735708146927e+00, 5.877579556128345480e+00, 6.100389532781943879e+00, 6.334441939256981670e+00, 6.580439277782222274e+00, 6.839135140254664526e+00, 7.111338420820842566e+00, 7.397917915172903763e+00, 7.699807345544508469e+00, 8.018010854664294474e+00, 8.353609016702406728e+00, 8.707765418592385473e+00, 9.081733871099147484e+00, 9.476866315716376006e+00, 9.894621501007146275e+00, 1.033657451045679019e+01, 1.080442723340841910e+01, 1.130001988133777781e+01, 1.182534366375335115e+01, 1.238255475156052427e+01, 1.297398967101161563e+01, 1.360218228861306245e+01, 1.426988256684760289e+01, 1.498007729260327644e+01, 1.573601300513857081e+01, 1.654122137866316500e+01, 1.739954734664685784e+01, 1.831518029132688981e+01, 1.929268866318984532e+01, 2.033705844217826172e+01, 2.145373590584482942e+01, 2.264867523060898736e+01, 2.392839152177298272e+01, 2.530001994731418268e+01, 2.677138174118011529e+01, 2.835105794560498805e+01, 3.004847188085487195e+01, 3.187398146713610639e+01, 3.383898267989664904e+01, 3.595602559959535672e+01, 3.823894472392493310e+01, 4.070300544879345396e+01, 4.336506889917953679e+01, 4.624377760823269784e+01, 4.935976490967979071e+01, 5.273589133292714765e+01, 5.639751178186770847e+01, 6.037277784867852275e+01, 6.469298027622754351e+01, 6.939293735292118365e+01, 7.451143592061966836e+01, 8.009173272176674066e+01, 8.618212503236856949e+01, 9.283660095406551480e+01, 1.001155814082968890e+02, 1.080867678325352448e+02, 1.168261118752949279e+02, 1.264189260858047240e+02, 1.369611577708331715e+02, 1.485608519349011866e+02, 1.613398336385932743e+02, 1.754356453320629017e+02, 1.910037809024609590e+02, 2.082202655019913565e+02, 2.272846389233001078e+02, 2.484234106336023257e+02, 2.718940668983047258e+02, 2.979897251188232016e+02, 3.270445480633676878e+02, 3.594400516741229885e+02, 3.956124653087335485e+02, 4.360613334959077953e+02, 4.813595846269808355e+02, 5.321653357808338203e+02, 5.892357556996862196e+02, 6.534433717775449045e+02, 7.257952842284018994e+02, 8.074558443729566627e+02, 8.997734679339701200e+02, 1.004312392957944252e+03, 1.122890361185594877e+03, 1.257623408459775530e+03, 1.410979202907522234e+03, 1.585840680166573460e+03, 1.785582106601447262e+03, 2.014160171499825914e+03, 2.276223289283167479e+03, 2.577243010007973485e+03, 2.923672325162804598e+03, 3.323136759290736047e+03, 3.784665511113575050e+03, 4.318971620160236406e+03, 4.938792274850918489e+03, 5.659303058273368331e+03, 6.498623292476395004e+03, 7.478433875318933386e+03, 8.624734342286166238e+03, 9.968772633484590145e+03, 1.154818959559393902e+04, 1.340843110702649390e+04, 1.560449453908580443e+04, 1.820309391023133793e+04, 2.128535066649680777e+04, 2.495014598048375046e+04, 2.931830770482188047e+04, 3.453785313845473397e+04, 4.079057084931056631e+04, 4.830030527863206410e+04, 5.734341246586992004e+04, 6.826199159022146453e+04, 8.148067525594191464e+04, 9.752799507478730867e+04, 1.170636462204808295e+05, 1.409133795481584143e+05, 1.701137853111825512e+05, 2.059699426710509940e+05, 2.501298539735692463e+05, 3.046808435555379486e+05, 3.722747886360361411e+05, 4.562913164460176067e+05, 5.610511554921845541e+05, 6.920959565810343691e+05, 8.565564972181198149e+05, 1.063638800552326000e+06, 1.325268101226286025e+06, 1.656944841847240121e+06, 2.078886479301160156e+06, 2.617555920130068069e+06, 3.307714852226224955e+06, 4.195192293202626259e+06, 5.340631300250745566e+06, 6.824578495767020734e+06, 8.754424053248831818e+06, 1.127390159772263517e+07, 1.457614342739689625e+07, 1.892169326841938100e+07, 2.466345986800667442e+07, 3.228142821711217588e+07, 4.243114571539869754e+07, 5.601173714434088431e+07, 7.426172509723072112e+07, 9.889461357830121731e+07, 1.322915875470427182e+08, 1.777766240727455981e+08, 2.400110583389834263e+08, 3.255621033641982742e+08, 4.437258820593761403e+08, 6.077246218504877165e+08, 8.364565879857375417e+08, 1.157066594326456169e+09, 1.608740826498742961e+09, 2.248337657948688269e+09, 3.158785978851336228e+09, 4.461677081363911380e+09, 6.336244831048209270e+09, 9.048130159588677560e+09, 1.299321362309972265e+10, 1.876478261212947929e+10, 2.725703976712888971e+10, 3.982553459064288940e+10, 5.853727794017415415e+10, 8.656299089553103385e+10, 1.287959733041898747e+11, 1.928345065430099883e+11, 2.905510467545806044e+11, 4.406145488098485809e+11, 6.725708918778493152e+11, 1.033486938212196930e+12, 1.598840557086695854e+12, 2.490490134218272825e+12, 3.906528466724583921e+12, 6.171225147961354244e+12, 9.819163736485109137e+12, 1.573800106991564475e+13, 2.541245461530031221e+13, 4.134437628407981776e+13, 6.778141973485971528e+13, 1.119906286595884492e+14, 1.865016806041768967e+14, 3.130890948724989738e+14, 5.298978847669068280e+14, 9.042973899804181753e+14, 1.556259036818991439e+15, 2.701230066368200812e+15, 4.729430105054711279e+15, 8.353779033096586530e+15, 1.488827606293191651e+16, 2.677653466031614956e+16, 4.860434481369499270e+16, 8.905735519300993312e+16, 1.647413728306871552e+17, 3.077081325673016377e+17, 5.804234101329097680e+17, 1.105828570628099614e+18, 2.128315358808074026e+18, 4.138651532085235581e+18, 8.132554212123920035e+18, 1.615146503312570855e+19, 3.242548467260718193e+19, 6.581494581080701321e+19, 1.350831366183090003e+20, 2.804093832520937396e+20, 5.888113683467563837e+20, 1.250923435312468276e+21, 2.689280279098215635e+21, 5.851582825664479700e+21, 1.288917231788944660e+22, 2.874582763768997631e+22, 6.492437335109217869e+22, 1.485286605867082177e+23, 3.442469159113307066e+23, 8.084930196860438207e+23, 1.924506778048094878e+24, 4.643992662491470729e+24, 1.136281452083591334e+25, 2.819664891060694571e+25, 7.097781559991856367e+25, 1.812838850127688486e+26, 4.699012851344539124e+26, 1.236419707162832951e+27, 3.303236261210411286e+27, 8.962558097638891218e+27, 2.470294852986226117e+28, 6.918270960555942883e+28, 1.969189447958411510e+29, 5.698092609453981289e+29, 1.676626156396922084e+30, 5.017901520171556970e+30, 1.527929892279834489e+31, 4.734762318366711949e+31, 1.493572546446777040e+32, 4.797441164681908184e+32, 1.569538296400998732e+33, 5.231651156910242454e+33, 1.777206511525290941e+34, 6.154587299576916134e+34, 2.173469781356604872e+35, 7.829529896526581616e+35, 2.877935554073076917e+36, 1.079761320923458592e+37, 4.136337730951207042e+37, 1.618408489711185844e+38, 6.469770640447824771e+38, 2.643413654859316358e+39, 1.104246728308525703e+40, 4.717842641881260665e+40, 2.062296462389327711e+41, 9.226680005161257219e+41, 4.226544071632731963e+42, 1.983043729707066518e+43, 9.533448690970155039e+43, 4.697914578740208606e+44, 2.373923101980436574e+45, 1.230570211868531753e+46, 6.546344338411695147e+46, 3.575371819335804914e+47, 2.005642453538335506e+48, 1.156055268028903078e+49, 6.849867807870312958e+49, 4.174004815218951121e+50, 2.616872034052857472e+51, 1.688750346837297725e+52, 1.122275666009684101e+53, 7.683968740248677071e+53, 5.422849612654278583e+54, 3.946686701799533415e+55, 2.963543587288132884e+56, 2.297086395798939516e+57, 1.838856414208555761e+58, 1.521049475711243996e+59, 1.300732291175071112e+60, 1.150559591141716740e+61, 1.053265997373725461e+62, 9.984114209879020836e+62, 9.805325615938694719e+63, 9.982463564199115995e+64, 1.054102211457911410e+66, 1.155172684780782463e+67, 1.314571302334116663e+68, 1.554362407685457310e+69, 1.910791206002645077e+70, 2.443616403890711206e+71, 3.252983822318823232e+72, 4.510600140020139737e+73, 6.518821831001902447e+74, 9.825834460774267633e+75, 1.545692063622722856e+77, 2.539346088408163253e+78, 4.359763993811836117e+79, 7.827943627464404744e+80, 1.470896877674301183e+82, 2.894527071420674290e+83, 5.969662541607915492e+84, 1.291277613981057357e+86, 2.931656535626877923e+87, 6.991353547531463135e+88, 1.752671194525972852e+90, 4.622450137056020715e+91, 1.283581933169566226e+93, 3.755839001138390788e+94, 1.158991729845978702e+96, 3.774916315438862678e+97, 1.298844894462381673e+99, 4.725038949943384889e+100, 1.819000031203286740e+102, 7.416966330876906188e+103, 3.206116996910598204e+105, 1.470588770071975193e+107, 7.164198238238641057e+108, 3.710397624567077270e+110, 2.044882454279709373e+112, 1.200428778654730225e+114, 7.513744370030172114e+115, 5.019575746343410636e+117, 3.582726927665698318e+119, 2.734947775877248560e+121, 2.235283764078944248e+123, 1.958084751118243323e+125, 1.840431913109305657e+127, 1.858143260692831108e+129, 2.017432949655777136e+131, 2.358177615888101494e+133, 2.971092974178603610e+135, 4.039532321435816302e+137, 5.933923069661132195e+139, 9.429263693444953240e+141, 1.622841456932873872e+144, 3.028884476067694180e+146, 6.138356175015339477e+148, 1.352531557191942648e+151, 3.244447362295582945e+153],\n];\n\nconst EXP_SINH_WEIGHTS = [\n  [2.703640234162693583e-160, 3.100862940179668765e-58, 5.828334625665462970e-21, 1.628894422402653830e-07, 8.129907377394029252e-03, 2.851214447180802931e-01, 1.228894002317118650e+00, 9.374610761705565881e+00, 6.136846875218162167e+02, 8.367995944653844271e+06, 2.286032371256753845e+17, 9.029964022492184559e+44, 1.637973037681055808e+119],\n  [1.029757744225565290e-96, 5.564174008086804112e-35, 1.534846576427062716e-12, 1.519539651119905182e-04, 7.878691652861874032e-02, 6.288072016384128612e-01, 2.842403831496369386e+00, 5.152309209026500589e+01, 2.554172947873109927e+04, 8.291547503290989754e+10, 6.794911791960761587e+27, 1.108995159102362663e+73],\n  [1.545310485347377408e-124, 4.549745016271158113e-75, 3.781189989988588481e-45, 4.369440793304363176e-27, 3.253896178006708087e-16, 1.057239289288944987e-09, 7.826174663495492476e-06, 1.459783224353939263e-03, 2.972970552567852420e-02, 1.637950661613330541e-01, 4.392303913269138921e-01, 8.744243777287317807e-01, 1.804759465860974506e+00, 4.894937215283148383e+00, 2.036214502429748943e+01, 1.576549789679037479e+02, 3.249553828744194733e+03, 3.335686029489862584e+05, 4.858218914917275532e+08, 5.655171002571584464e+13, 9.084276291356790926e+21, 2.202757570781655071e+35, 1.851176020895552142e+57, 1.873046373612647920e+93, 3.113183070605141140e+152],\n  [2.690380169654157101e-141, 9.388760099830475385e-110, 3.267856956418766261e-85, 4.012903562780032075e-66, 2.794595941054873674e-51, 9.598140333687791635e-40, 8.762766371925782803e-31, 7.896919977115783593e-24, 1.951680620313826776e-18, 2.931867534349928041e-14, 4.976350908135118762e-11, 1.546933241860617074e-08, 1.283189791774752963e-06, 3.809052946018782340e-05, 5.087526585392884730e-04, 3.656819625189471368e-03, 1.627679402690602992e-02, 5.011672130624018967e-02, 1.165913368715250324e-01, 2.201514148384271336e-01, 3.581909054968942386e-01, 5.288599003801643436e-01, 7.422823219366348741e-01, 1.032914080772662205e+00, 1.478415067523268199e+00, 2.242226697017918644e+00, 3.684755742578570582e+00, 6.677326887819023056e+00, 1.358063058433697357e+01, 3.171262375809110066e+01, 8.776338468947827779e+01, 3.006939713363920293e+02, 1.352196150715330628e+03, 8.616353573310419356e+03, 8.591849573350877359e+04, 1.523635814554291966e+06, 5.663834603448267056e+07, 5.450828629396188577e+09, 1.780881993484818221e+12, 2.797112703281894578e+15, 3.300887168363313931e+19, 5.192538272313512016e+24, 2.273085973059979872e+31, 7.124498195222272142e+39, 5.379592741425673874e+50, 4.647296508337283075e+64, 3.395147156494395571e+82, 2.736576372417856435e+105, 6.584825756536212781e+134],\n  [1.692276285171240629e-150, 1.180420021590838281e-132, 6.494931071412232065e-117, 4.979673804239645358e-103, 8.790122245397054202e-91, 5.564311726870413043e-80, 1.867634664877268411e-70, 4.693767384843440310e-62, 1.197772698674604837e-54, 4.060530886983702887e-48, 2.318268710612758367e-42, 2.748088060676949794e-37, 8.136086869664039226e-33, 7.081491999860360593e-29, 2.092407629019781417e-25, 2.383020547076997517e-22, 1.170143938604536054e-19, 2.734857915002515580e-17, 3.319894174569245506e-15, 2.260825106530477104e-13, 9.244747974241858562e-12, 2.410325858091057071e-10, 4.224928060220423782e-09, 5.217223349652829804e-08, 4.730110697329046717e-07, 3.265522864288710545e-06, 1.772851678458610971e-05, 7.787346612077215804e-05, 2.838101678971546354e-04, 8.775026198694109646e-04, 2.347474744139291716e-03, 5.529174974874315725e-03, 1.164520226280038968e-02, 2.223487842904240574e-02, 3.896253311038730452e-02, 6.334975706136386464e-02, 9.651712033300261848e-02, 1.390236708907266445e-01, 1.908593745910709887e-01, 2.515965688234414960e-01, 3.206651646562737595e-01, 3.976974208167367099e-01, 4.828935799767836828e-01, 5.773826389735376677e-01, 6.835838865575605461e-01, 8.056083579298257627e-01, 9.497742078309479997e-01, 1.125351459431134254e+00, 1.345711576612114788e+00, 1.630156867495860456e+00, 2.006880650908830857e+00, 2.517828844916874130e+00, 3.226826819856410846e+00, 4.233461155863004269e+00, 5.697400323487776530e+00, 7.882247346334201378e+00, 1.123717929435969530e+01, 1.655437952523069781e+01, 2.528458931361129124e+01, 4.019700050163276117e+01, 6.682515670231120695e+01, 1.168022589948424530e+02, 2.160045684819153702e+02, 4.257255901158116698e+02, 9.017180693982791021e+02, 2.072151523320542727e+03, 5.222689557952776194e+03, 1.461663959276604441e+04, 4.606455611513396576e+04, 1.660950339384278845e+05, 6.976630616605097333e+05, 3.484240083705972727e+06, 2.117385064786894718e+07, 1.607368605379557548e+08, 1.570235957877638143e+09, 2.041619284762317483e+10, 3.670425964529826371e+11, 9.527196643411724126e+12, 3.749667772735766186e+14, 2.365380223523087981e+16, 2.546815287226970627e+18, 5.026010591299970789e+20, 1.970775914722195502e+23, 1.682531038342715298e+26, 3.469062187981719410e+29, 1.942614547946028081e+33, 3.375034694941022784e+37, 2.115298406181711256e+42, 5.673738540911562268e+47, 7.904099301170483654e+53, 7.121903115084356741e+60, 5.321820777644930491e+68, 4.370977753639010591e+77, 5.429657931755513797e+87, 1.464602226824232950e+99, 1.292445035662836561e+112, 5.936633203060705474e+126, 2.402419924621336913e+143],\n  [2.552410363565288863e-155, 7.965872719315690060e-146, 6.586401422963018216e-137, 1.563673437419490296e-128, 1.149636272392214573e-120, 2.810189759625314580e-113, 2.441446149780773329e-106, 8.026292508555041710e-100, 1.059034284623927886e-93, 5.927259046205893861e-88, 1.482220909125121967e-82, 1.738946448501809732e-77, 1.002047910184021813e-72, 2.960929073720769637e-68, 4.671749731809402860e-64, 4.088398674807775827e-60, 2.056642628601930023e-56, 6.149878578966749305e-53, 1.128142221531950274e-49, 1.307702777646013040e-46, 9.848757125541659318e-44, 4.946847667192787369e-41, 1.698284656321589089e-38, 4.077947349805764486e-36, 6.998897321243266048e-34, 8.762183229651405846e-32, 8.156281709801700633e-30, 5.747366069381804213e-28, 3.117951907317865517e-26, 1.323052992594482858e-24, 4.457166057119926322e-23, 1.208896132634708032e-21, 2.674697849739340358e-20, 4.887394807742436672e-19, 7.461632083041868391e-18, 9.622230748739818989e-17, 1.058884510032627118e-15, 1.003988180288807180e-14, 8.276358838778374127e-14, 5.982281469656734375e-13, 3.821855766886203088e-12, 2.174279097299082001e-11, 1.109294120074848583e-10, 5.109055596902086022e-10, 2.137447956882816268e-09, 8.170468538364022161e-09, 2.869308592926374871e-08, 9.305185930419436742e-08, 2.800231592227134982e-07, 7.855263634214717091e-07, 2.062924236714395731e-06, 5.092224131071637441e-06, 1.185972357373608535e-05, 2.615333473470835518e-05, 5.479175746096322166e-05, 1.093962713107868416e-04, 2.087714243290528595e-04, 3.818797556417767457e-04, 6.712796918790164790e-04, 1.136760145626956604e-03, 1.858775505765622915e-03, 2.941191222579735746e-03, 4.512821350378020080e-03, 6.727293426938802892e-03, 9.760915371480980900e-03, 1.380842853102550981e-02, 1.907678055354397196e-02, 2.577730275571060412e-02, 3.411688991056810143e-02, 4.428892397843486143e-02, 5.646473816310556552e-02, 7.078637998740884103e-02, 8.736131246718460273e-02, 1.062595125372295046e-01, 1.275132133780278017e-01, 1.511193209351630349e-01, 1.770443400812491404e-01, 2.052314915777496186e-01, 2.356095985715091716e-01, 2.681032744853198083e-01, 3.026439500331752405e-01, 3.391813282438962329e-01, 3.776949427111484449e-01, 4.182056049753837852e-01, 4.607866519948383101e-01, 5.055750360563806155e-01, 5.527824318481410262e-01, 6.027066663808878454e-01, 6.557439076684384801e-01, 7.124021812071310501e-01, 7.733169258916167748e-01, 8.392694625821144443e-01, 9.112094418201526544e-01, 9.902825786957198607e-01, 1.077865293953107863e+00, 1.175608288920191064e+00, 1.285491624542001346e+00, 1.409894601042286311e+00, 1.551684711657329886e+00, 1.714331263928885829e+00, 1.902051053858215699e+00, 2.119995922515087770e+00, 2.374495377438728901e+00, 2.673372087884984440e+00, 3.026354489757871517e+00, 3.445619726158519068e+00, 3.946512819227006419e+00, 4.548505964859933724e+00, 5.276487613615791435e+00, 6.162508226184798743e+00, 7.248163842886806184e+00, 8.587878410768473380e+00, 1.025346434903602082e+01, 1.234051869120733230e+01, 1.497748183201988157e+01, 1.833859935862139637e+01, 2.266266859437541631e+01, 2.828045768298752298e+01, 3.565528397044830339e+01, 4.544381261232990127e+01, 5.858833744254070379e+01, 7.645876087681923606e+01, 1.010741758687003802e+02, 1.354538987141142977e+02, 1.841824059064608872e+02, 2.543337025162468240e+02, 3.570103970895535977e+02, 5.099537256432247190e+02, 7.420561390174965949e+02, 1.101323941193719451e+03, 1.669232910686306616e+03, 2.587203282090385703e+03, 4.106608602134535014e+03, 6.685657263550896700e+03, 1.118216368762133982e+04, 1.924811115485038079e+04, 3.416174865734933127e+04, 6.263882227839496242e+04, 1.189094418952240294e+05, 2.342262528110389793e+05, 4.798899889628646876e+05, 1.025279649144740527e+06, 2.290428015483177407e+06, 5.365618820221241118e+06, 1.322172034826883742e+07, 3.438296542047893623e+07, 9.468905314460992170e+07, 2.771843378168242512e+08, 8.658950437199969679e+08, 2.898779165825890846e+09, 1.044627762990198184e+10, 4.071673625087267154e+10, 1.725245696783106160e+11, 7.989856904303845909e+11, 4.067537100664303783e+12, 2.290253922913114847e+13, 1.435560574531699914e+14, 1.008680130601194048e+15, 8.003530334765274913e+15, 7.227937568629809266e+16, 7.491693576707361828e+17, 8.991671234614216799e+18, 1.261556024888540618e+20, 2.090038400033346091e+21, 4.132773073376509056e+22, 9.865671928781943336e+23, 2.877978132616007671e+25, 1.039303004928044064e+27, 4.710544722984128252e+28, 2.719194692980296464e+30, 2.030608169419634520e+32, 1.994536427964099457e+34, 2.622806931876485852e+36, 4.705142628855489738e+38, 1.174794916996875010e+41, 4.170574236544843559e+43, 2.153441953645800917e+46, 1.656794933445123415e+49, 1.948830907651317326e+52, 3.601980393005358786e+55, 1.077033440153993124e+59, 5.374188883861674378e+62, 4.625267105826449467e+66, 7.111646979020385006e+70, 2.027996051444846521e+75, 1.116168784120367146e+80, 1.237019821283735086e+85, 2.888108172342166477e+90, 1.490426937972460544e+96, 1.789306677271856318e+102, 5.276973875344766848e+108, 4.051217867886536330e+115, 8.611617868168979525e+122, 5.412634353380155695e+130, 1.078756609821147465e+139, 7.344353246966125053e+147],\n  [8.688318611421924613e-158, 6.864317997043424201e-153, 3.829638174036322920e-148, 1.524985558970066863e-143, 4.379527631402474835e-139, 9.162408388991747001e-135, 1.410086556664696347e-130, 1.611529786006329005e-126, 1.380269212504431613e-122, 8.938739565456142404e-119, 4.414803004265274778e-115, 1.676831992534574674e-111, 4.937648515671545377e-108, 1.136068312653058895e-104, 2.057969760853201132e-101, 2.956779836249922681e-98, 3.393449014375824853e-95, 3.132619285740674842e-92, 2.341677665639346254e-89, 1.426656997926173190e-86, 7.128825597334931865e-84, 2.939485275517928205e-81, 1.006113300119903410e-78, 2.874969402023240560e-76, 6.896713338909433222e-74, 1.396405038640012785e-71, 2.398869799873387326e-69, 3.514180228970525006e-67, 4.411557600438730779e-65, 4.768408435763044172e-63, 4.458287229998440383e-61, 3.621710763086768959e-59, 2.567373174003034094e-57, 1.594829856885795944e-55, 8.716746897177859412e-54, 4.208424534880021226e-52, 1.801637343401221381e-50, 6.864432292330768862e-49, 2.336084584516383243e-47, 7.125716658075193173e-46, 1.954733295862350631e-44, 4.838195020814970471e-43, 1.083903033389729471e-41, 2.204655424309513426e-40, 4.083431629921110537e-39, 6.907095608064865023e-38, 1.069951518082577963e-36, 1.521972185061747284e-35, 1.993254198127980161e-34, 2.409552194902670884e-33, 2.695243589253751811e-32, 2.796309045342585624e-31, 2.697138787161831243e-30, 2.423968619042656074e-29, 2.034233848004972409e-28, 1.597498662808006882e-27, 1.176341105034547043e-26, 8.138404856556384931e-26, 5.300199402716282910e-25, 3.255367628680633536e-24, 1.889060856810273071e-23, 1.037502167741821871e-22, 5.402129194695882094e-22, 2.671080147950250592e-21, 1.256163163817414397e-20, 5.627458451375099018e-20, 2.405110192151924414e-19, 9.820723025892385774e-19, 3.836610965933493002e-18, 1.435949417965440387e-17, 5.155736116435221852e-17, 1.778106820243535736e-16, 5.897650538103448384e-16, 1.883545377386949394e-15, 5.799022727889041128e-15, 1.723080101027408120e-14, 4.946559668895564981e-14, 1.373437058883951037e-13, 3.692057356296675476e-13, 9.618669754374864080e-13, 2.430904641718059201e-12, 5.965319652795549281e-12, 1.422677541958913512e-11, 3.300412010407028696e-11, 7.453993539444124847e-11, 1.640317480539372495e-10, 3.519919455549922227e-10, 7.371241496931924727e-10, 1.507573517782825692e-09, 3.013444008176544118e-09, 5.891170930525923854e-09, 1.127175867596519203e-08, 2.112135943063526334e-08, 3.878572405868819131e-08, 6.984140168311147329e-08, 1.233979234102365865e-07, 2.140481233406505212e-07, 3.647293211756793211e-07, 6.108366265875129839e-07, 1.006020283089617901e-06, 1.630199379920459998e-06, 2.600430208375972125e-06, 4.085372746054298735e-06, 6.324194831966406940e-06, 9.650830226718535837e-06, 1.452455211307694488e-05, 2.156782506321975658e-05, 3.161234361554654466e-05, 4.575404320696170555e-05, 6.541767069965264068e-05, 9.243122234114186712e-05, 1.291101968446571125e-04, 1.783511762821284409e-04, 2.437337497712608884e-04, 3.296292528289701234e-04, 4.413142327104518440e-04, 5.850859955683163216e-04, 7.683770763700705263e-04, 9.998650298180469208e-04, 1.289573601590465490e-03, 1.648961132392222413e-03, 2.090991995585424661e-03, 2.630186988492201910e-03, 3.282648895332118799e-03, 4.066059914467245175e-03, 4.999648283080481820e-03, 6.104122218554241819e-03, 7.401570199659662364e-03, 8.915327597805008451e-03, 1.066981070009509413e-02, 1.269032020049755525e-02, 1.500281723149735994e-02, 1.763367592672867332e-02, 2.060941730962251417e-02, 2.395642996410886880e-02, 2.770068343772389725e-02, 3.186744063963193757e-02, 3.648097561865623097e-02, 4.156430303997019336e-02, 4.713892543167989540e-02, 5.322460385886412684e-02, 5.983915712308283792e-02, 6.699829390463281224e-02, 7.471548149065050122e-02, 8.300185389391494996e-02, 9.186616129460712899e-02, 1.013147618591979452e-01, 1.113516561340355690e-01, 1.219785634003157786e-01, 1.331950386328042665e-01, 1.449986280439946752e-01, 1.573850606313672716e-01, 1.703484726870446791e-01, 1.838816618814874884e-01, 1.979763672973498048e-01, 2.126235716643688402e-01, 2.278138220265254991e-01, 2.435375651517067386e-01, 2.597854941629632707e-01, 2.765489031191654411e-01, 2.938200465906351752e-01, 3.115925016510994851e-01, 3.298615301301230823e-01, 3.486244394295739435e-01, 3.678809406939879716e-01, 3.876335036292959599e-01, 4.078877077798518471e-01, 4.286525905940105684e-01, 4.499409931290513174e-01, 4.717699047639316286e-01, 4.941608088016098926e-01, 5.171400313514193966e-01, 5.407390963876342256e-01, 5.649950903858123945e-01, 5.899510404480374918e-01, 6.156563103475134535e-01, 6.421670194591982411e-01, 6.695464901047961714e-01, 6.978657294374126896e-01, 7.272039526349696447e-01, 7.576491548751669105e-01, 7.892987403432202489e-01, 8.222602173936578230e-01, 8.566519699682320391e-01, 8.926041164852169437e-01, 9.302594686857616145e-01, 9.697746043788558519e-01, 1.011321069700320644e+00, 1.055086728430498711e+00, 1.101277278143300224e+00, 1.150117955536247302e+00, 1.201855456275760449e+00, 1.256760098152647779e+00, 1.315128260359919236e+00, 1.377285136373095709e+00, 1.443587843343442141e+00, 1.514428937238563465e+00, 1.590240390338335337e+00, 1.671498096302065311e+00, 1.758726978084942299e+00, 1.852506785760205887e+00, 1.953478685110838140e+00, 2.062352754065132708e+00, 2.179916523112736371e+00, 2.307044718290330681e+00, 2.444710391817196957e+00, 2.593997656772008968e+00, 2.756116279277535182e+00, 2.932418425642610903e+00, 3.124417914187536020e+00, 3.333812383735923205e+00, 3.562508865047068391e+00, 3.812653330296280988e+00, 4.086664902155689132e+00, 4.387275531849634155e+00, 4.717576109385405085e+00, 5.081070154695596855e+00, 5.481736462718817995e+00, 5.924102347216244340e+00, 6.413329458204850426e+00, 6.955314549766230740e+00, 7.556808065486941215e+00, 8.225554008952760095e+00, 8.970455302965185036e+00, 9.801769746699598466e+00, 1.073134279679936208e+01, 1.177288477943655549e+01, 1.294230185297226511e+01, 1.425809217068106541e+01, 1.574182134943112610e+01, 1.741869467329444792e+01, 1.931824763074534781e+01, 2.147518163232618457e+01, 2.393037838236259586e+01, 2.673213477270754163e+01, 2.993767083537830673e+01, 3.361497689655818107e+01, 3.784508348524495401e+01, 4.272485990900652026e+01, 4.837047622725585887e+01, 5.492170063250241752e+01, 6.254725265973777743e+01, 7.145149574983117631e+01, 8.188283528217430591e+01, 9.414429671899321190e+01, 1.086069017070108772e+02, 1.257266497442910506e+02, 1.460661655727672308e+02, 1.703224100743601641e+02, 1.993623058409479084e+02, 2.342687403011957198e+02, 2.764002385528330658e+02, 3.274687277481591846e+02, 3.896413615832930151e+02, 4.656745019682919178e+02, 5.590908996105107215e+02, 6.744152109571297875e+02, 8.174887172033244140e+02, 9.958921680864290197e+02, 1.219517071629880108e+03, 1.501341972869855447e+03, 1.858493492282554856e+03, 2.313705362529768409e+03, 2.897337235279879262e+03, 3.650185874628374320e+03, 4.627425468074182920e+03, 5.904167858279871204e+03, 7.583363128219763259e+03, 9.807105719965428472e+03, 1.277293273832114230e+04, 1.675749596877978193e+04, 2.215121038263169759e+04, 2.950937349291504490e+04, 3.962820433513419525e+04, 5.365890489878942635e+04, 7.328024305737981431e+04, 1.009620167752942516e+05, 1.403709568321740997e+05, 1.970019955923188504e+05, 2.791695960502382133e+05, 3.995801250202947693e+05, 5.778515877588312220e+05, 8.445944401474017243e+05, 1.248092975135001687e+06, 1.865367859966950385e+06, 2.820705292493674480e+06, 4.317063433830483499e+06, 6.689961127164684387e+06, 1.050111601631327499e+07, 1.670327884792325766e+07, 2.693430470211696200e+07, 4.404906898054894166e+07, 7.309535640536363311e+07, 1.231306812701882145e+08, 2.106560568719367745e+08, 3.662073971851359192e+08, 6.472124787519330196e+08, 1.163486593592585616e+09, 2.128658395254150452e+09, 3.965732938755983605e+09, 7.527735928223242836e+09, 1.456757162128879538e+10, 2.875798636941021041e+10, 5.794999654160054887e+10, 1.192767536774485257e+11, 2.509334090779650360e+11, 5.399624414800303207e+11, 1.189276111740286910e+12, 2.683103883355551677e+12, 6.205255919751506427e+12, 1.472284072112162717e+13, 3.586628373992547853e+13, 8.978594107356889337e+13, 2.311710197091641250e+14, 6.127020712804348908e+14, 1.673232679378485978e+15, 4.712671499032329365e+15, 1.370275025680988289e+16, 4.117347054027612886e+16, 1.279822436878842710e+17, 4.119762767831332886e+17, 1.374888606936629814e+18, 4.762483833659790733e+18, 1.714288404980390540e+19, 6.420200704842635702e+19, 2.504808062315322558e+20, 1.019355251138167687e+21, 4.332952958521756932e+21, 1.926416464889827426e+22, 8.971059571108856501e+22, 4.382317748928748816e+23, 2.249003059943548727e+24, 1.214458587662725100e+25, 6.911683912813140938e+25, 4.152578123301633020e+26, 2.638346388179288086e+27, 1.775811490887700718e+28, 1.268552401544524965e+29, 9.635786341213661742e+29, 7.797939379813000783e+30, 6.736900087983560033e+31, 6.226288752443836475e+32, 6.169035287163451891e+33, 6.567250104576983172e+34, 7.528666735185428595e+35, 9.316271421365627344e+36, 1.247410737003664698e+38, 1.811787648043939987e+39, 2.861918583157116420e+40, 4.929657099622567574e+41, 9.284951278562156071e+42, 1.917687997037326435e+44, 4.355948096683946408e+45, 1.091453486585817118e+47, 3.026206402784023251e+48, 9.314478983991942688e+49, 3.193195693823940775e+51, 1.223447678968662613e+53, 5.257403184148516426e+54, 2.543108925126136766e+56, 1.389947584026783879e+58, 8.616987336205957549e+59, 6.083777056769299984e+61, 4.911841077800001710e+63, 4.554259483169784661e+65, 4.870815185962582259e+67, 6.036211886847067841e+69, 8.708377755587698026e+71, 1.469655296381977267e+74, 2.915822924489215887e+76, 6.836044306573246016e+78, 1.903917300559946782e+81, 6.333813341980360028e+83, 2.531082268773868753e+86, 1.222077360592898816e+89, 7.172167453276776330e+91, 5.148160232410244898e+94, 4.548619807672339638e+97, 4.979632843475864923e+100, 6.800802744782331957e+103, 1.166855497965918386e+107, 2.533457765534279043e+110, 7.012864641215147208e+113, 2.494083354169569414e+117, 1.148722178881219993e+121, 6.908313932158993510e+124, 5.470912484744367184e+128, 5.755359832684120769e+132, 8.115681923907451939e+136, 1.548304780334447081e+141, 4.034912159113614601e+145, 1.450632759611715526e+150, 7.268799665580789770e+154],\n  [4.901759085947701448e-159, 1.505832423620814399e-156, 4.231872109262999523e-154, 1.089479701785106001e-151, 2.572922387150651649e-149, 5.581311054334156941e-147, 1.113575900126970040e-144, 2.046165051332286084e-142, 3.466994885004770636e-140, 5.423795404073501922e-138, 7.843833272402847010e-136, 1.049922957933194415e-133, 1.302301071957418603e-131, 1.498659737828393008e-129, 1.601906622414286282e-127, 1.592248618401983561e-125, 1.473375345916436274e-123, 1.270651551394009593e-121, 1.022408263525766209e-119, 7.683762602329562781e-118, 5.399268127233373186e-116, 3.551074274853494676e-114, 2.188235409519121010e-112, 1.264667515430816934e-110, 6.861807566737243712e-109, 3.498691686825209963e-107, 1.678016807398375157e-105, 7.577439431441931490e-104, 3.224703770159386809e-102, 1.294487090677705963e-100, 4.906133250963454139e-99, 1.757121317988153326e-97, 5.952042491454320383e-96, 1.908566653286417264e-94, 5.798224459236429212e-93, 1.670293239978334727e-91, 4.566236673398083038e-90, 1.185617342791547945e-88, 2.926160027801296929e-87, 6.870061134126707137e-86, 1.535565783500379945e-84, 3.270036736778401257e-83, 6.639558007206580362e-82, 1.286319750967398593e-80, 2.379566581139022958e-79, 4.206268231398883425e-78, 7.109719237833379433e-77, 1.149915104115372777e-75, 1.780876201255594220e-74, 2.642703796179329883e-73, 3.760085375941719327e-72, 5.132920951124251993e-71, 6.727100274601427696e-70, 8.469585621347697498e-69, 1.025032382672232848e-67, 1.193219127557863348e-66, 1.336816930381306582e-65, 1.442283479679798385e-64, 1.499374555004793991e-63, 1.502797203133501438e-62, 1.453005969318485303e-61, 1.355980448377862540e-60, 1.222072412212552127e-59, 1.064223180270520159e-58, 8.959667396075636845e-58, 7.296288808079294105e-57, 5.750255296190181158e-56, 4.388011664829013518e-55, 3.243852451291832398e-54, 2.324239357665538806e-53, 1.614869776203026446e-52, 1.088524605545274842e-51, 7.121755574192829045e-51, 4.524647662549067074e-50, 2.792730715818793035e-49, 1.675384879603864227e-48, 9.773114328777676091e-48, 5.545910766847627082e-47, 3.062809705627873645e-46, 1.646862118038266234e-45, 8.625108513887155847e-45, 4.401687663868890701e-44, 2.189755778847646746e-43, 1.062345336449265889e-42, 5.028036663485684049e-42, 2.322524635717249223e-41, 1.047406593898341306e-40, 4.613438388449698168e-40, 1.985397445118162005e-39, 8.351027367454628343e-39, 3.434440903484543389e-38, 1.381489131877196646e-37, 5.437051201310225224e-37, 2.094357548080647717e-36, 7.898676618592006902e-36, 2.917536870947471272e-35, 1.055788886022716597e-34, 3.744333812160330812e-34, 1.301801185251957290e-33, 4.438346216893387768e-33, 1.484348268951816542e-32, 4.871001129849836971e-32, 1.568903000742513942e-31, 4.961295315917935235e-31, 1.540773910027990821e-30, 4.700558022172014910e-30, 1.409115230718949596e-29, 4.151913103955692034e-29, 1.202737613715427748e-28, 3.426327374934496736e-28, 9.601405359397026012e-28, 2.647278642033773301e-27, 7.183442220565147103e-27, 1.918850545981494042e-26, 5.046974779455992494e-26, 1.307394799925911700e-25, 3.336342198236957082e-25, 8.389259581136262194e-25, 2.079051813513548608e-24, 5.079178967243765280e-24, 1.223501794357837278e-23, 2.906654911057549530e-23, 6.811668606095015470e-23, 1.574985938238025303e-22, 3.593796788969348326e-22, 8.094185411205212564e-22, 1.799796183237481721e-21, 3.951758901641017285e-21, 8.569580068050865775e-21, 1.835753486517298696e-20, 3.885414339966022317e-20, 8.126613972895021790e-20, 1.680007182889503141e-19, 3.433369351563962828e-19, 6.937695550399427499e-19, 1.386345631008981755e-18, 2.740087497759230881e-18, 5.357570288683386626e-18, 1.036464933022803784e-17, 1.984249442010084992e-17, 3.759788006060003409e-17, 7.052211261821684795e-17, 1.309635641529546221e-16, 2.408275496109180528e-16, 4.385898809611711552e-16, 7.911758686849121285e-16, 1.413883597877183873e-15, 2.503477536644680210e-15, 4.392637866550705827e-15, 7.638710306960574612e-15, 1.316703360377476041e-14, 2.250031027275448919e-14, 3.812239733412214953e-14, 6.405021660191363479e-14, 1.067250538270319484e-13, 1.763897493784721010e-13, 2.891987565334547756e-13, 4.704242520369958085e-13, 7.592878273512691990e-13, 1.216183338372525172e-12, 1.933388593436624879e-12, 3.050826852442290751e-12, 4.779080020017636657e-12, 7.432734713385425098e-12, 1.147833888125873666e-11, 1.760286160372422754e-11, 2.681071101623953168e-11, 4.056023754295965437e-11, 6.095443492241537222e-11, 9.100550129616064211e-11, 1.349993452136967652e-10, 1.989943912395156051e-10, 2.914996073619059788e-10, 4.243900781412219621e-10, 6.141353162671391082e-10, 8.834365795894798511e-10, 1.263395594025933170e-09, 1.796369250051716047e-09, 2.539704143326480862e-09, 3.570592498287890499e-09, 4.992348403150539107e-09, 6.942471870489931483e-09, 9.602949600164561371e-09, 1.321333712761666777e-08, 1.808727901635346390e-08, 2.463325364767791516e-08, 3.338047870136870496e-08, 4.501108426108505069e-08, 6.039985413333259594e-08, 8.066305374526097834e-08, 1.072181059018892614e-07, 1.418561443795353991e-07, 1.868297699836383305e-07, 2.449586539172972009e-07, 3.197559780442760832e-07, 4.155790690867544334e-07, 5.378079713325544678e-07, 6.930561064776686194e-07, 8.894175852502122454e-07, 1.136756157868726006e-06, 1.447041212534730898e-06, 1.834736645332833504e-06, 2.317248822354253644e-06, 2.915440225825303911e-06, 3.654215709863551870e-06, 4.563188576773760151e-06, 5.677433909482232878e-06, 7.038336747307571784e-06, 8.694542758083067228e-06, 1.070301902702759858e-05, 1.313023243937403750e-05, 1.605345286789073897e-05, 1.956218797728780449e-05, 2.375975591555218862e-05, 2.876500146954361208e-05, 3.471416041263076209e-05, 4.176287576185915239e-05, 5.008836848967403773e-05, 5.989176390181730373e-05, 7.140057340280213227e-05, 8.487132973049760036e-05, 1.005923719620999934e-04, 1.188867746885496973e-04, 1.401154137398069279e-04, 1.646801587388731249e-04, 1.930271805904271778e-04, 2.256503597954330556e-04, 2.630947792533707128e-04, 3.059602829980946180e-04, 3.549050801425155303e-04, 4.106493712131842727e-04, 4.739789720708565436e-04, 5.457489087697051069e-04, 6.268869550379884668e-04, 7.183970825975973673e-04, 8.213627933082928901e-04, 9.369503011517966364e-04, 1.066411531385725184e-03, 1.211086903819095417e-03, 1.372407867107646339e-03, 1.551899151252505624e-03, 1.751180706119547318e-03, 1.971969294784470944e-03, 2.216079711850908971e-03, 2.485425598581779636e-03, 2.782019828718993257e-03, 3.107974441230220176e-03, 3.465500098895993776e-03, 3.856905054613959619e-03, 4.284593610523639393e-03, 4.751064058515097225e-03, 5.258906094345618421e-03, 5.810797701414435799e-03, 6.409501504198915943e-03, 7.057860595396970186e-03, 7.758793844909123446e-03, 8.515290702888369372e-03, 9.330405513145299523e-03, 1.020725135717912572e-02, 1.114899345297222760e-02, 1.215884213639836574e-02, 1.324004545661629463e-02, 1.439588142011718850e-02, 1.562964992113485073e-02, 1.694466439888404584e-02, 1.834424326453982033e-02, 1.983170114298836870e-02, 2.141033997615067889e-02, 2.308344003609062690e-02, 2.485425089716015368e-02, 2.672598241710042669e-02, 2.870179577730820310e-02, 3.078479463239356953e-02, 3.297801641870515720e-02, 3.528442387069167064e-02, 3.770689679281728890e-02, 4.024822413326941635e-02, 4.291109640390936770e-02, 4.569809848884132640e-02, 4.861170288163592155e-02, 5.165426338866744454e-02, 5.482800933323496446e-02, 5.813504029216542680e-02, 6.157732139347005467e-02, 6.515667920037330165e-02, 6.887479820368566403e-02, 7.273321794107712090e-02, 7.673333075835566151e-02, 8.087638022439339824e-02, 8.516346020789830747e-02, 8.959551462082867423e-02, 9.417333782991444898e-02, 9.889757573450802477e-02, 1.037687275058577967e-01, 1.087871479799008567e-01, 1.139530506928239996e-01, 1.192665115459606141e-01, 1.247274730840887416e-01, 1.303357493688843496e-01, 1.360910314271734020e-01, 1.419928932517243620e-01, 1.480407983306351483e-01, 1.542341066798992024e-01, 1.605720823524863565e-01, 1.670539013962460335e-01, 1.736786602321317742e-01, 1.804453844236544912e-01, 1.873530378080931153e-01, 1.944005319598201097e-01, 2.015867359561292115e-01, 2.089104864161762672e-01, 2.163705977840528187e-01, 2.239658728275971045e-01, 2.316951133252986765e-01, 2.395571309145607347e-01, 2.475507580756380088e-01, 2.556748592267567912e-01, 2.639283419072366399e-01, 2.723101680268593668e-01, 2.808193651612593497e-01, 2.894550378747292326e-01, 2.982163790535362503e-01, 3.071026812346166036e-01, 3.161133479163487600e-01, 3.252479048399920142e-01, 3.345060112323053140e-01, 3.438874710018250777e-01, 3.533922438832718793e-01, 3.630204565265675291e-01, 3.727724135289699431e-01, 3.826486084108677024e-01, 3.926497345378144818e-01, 4.027766959934214472e-01, 4.130306184097598756e-01, 4.234128597639539906e-01, 4.339250211516634154e-01, 4.445689575501645526e-01, 4.553467885857401860e-01, 4.662609093220769612e-01, 4.773140010883521767e-01, 4.885090423676662636e-01, 4.998493197684479070e-01, 5.113384391034281429e-01, 5.229803366027518117e-01, 5.347792902897740156e-01, 5.467399315500809553e-01, 5.588672569262846167e-01, 5.711666401731758417e-01, 5.836438446098876156e-01, 5.963050358078278898e-01, 6.091567946552975691e-01, 6.222061308419237716e-01, 6.354604968083211637e-01, 6.489278022087558681e-01, 6.626164289370386795e-01, 6.765352467684294227e-01, 6.906936296730053994e-01, 7.051014728587479919e-01, 7.197692106055475377e-01, 7.347078349544334315e-01, 7.499289153196209421e-01, 7.654446190944464391e-01, 7.812677333259577661e-01, 7.974116875368567865e-01, 8.138905777776784362e-01, 8.307191919965581771e-01, 8.479130368187123741e-01, 8.654883658328603475e-01, 8.834622094872810766e-01, 9.018524067040521621e-01, 9.206776383262963142e-01, 9.399574625199963151e-01, 9.597123522591707284e-01, 9.799637350309700387e-01, 1.000734034905599933e+00, 1.022046717124952010e+00, 1.043926335373472893e+00, 1.066398581905185161e+00, 1.089490340711946628e+00, 1.113229743930062164e+00, 1.137646231695313314e+00, 1.162770615670420260e+00, 1.188635146483979071e+00, 1.215273585336112390e+00, 1.242721280043529050e+00, 1.271015245815510799e+00, 1.300194251072644711e+00, 1.330298908642019971e+00, 1.361371772686240192e+00, 1.393457441749111730e+00, 1.426602668328411758e+00, 1.460856475415888358e+00, 1.496270280476785338e+00, 1.532898027375920169e+00, 1.570796326794896619e+00, 1.610024605725646420e+00, 1.650645266669431435e+00, 1.692723857217988332e+00, 1.736329250744977731e+00, 1.781533838991654903e+00, 1.828413737391087381e+00, 1.877049004040720448e+00, 1.927523873304087635e+00, 1.979927005099477087e+00, 2.034351751016940433e+00, 2.090896438495766214e+00, 2.149664674393090421e+00, 2.210765669381402212e+00, 2.274314584729113927e+00, 2.340432903144970240e+00, 2.409248825504827076e+00, 2.480897695429288043e+00, 2.555522453844001656e+00, 2.633274125832370887e+00, 2.714312342284411608e+00, 2.798805899057066353e+00, 2.886933356592141886e+00, 2.978883683190077867e+00, 3.074856945413050211e+00, 3.175065049391765683e+00, 3.279732537139255280e+00, 3.389097442334834102e+00, 3.503412210435275865e+00, 3.622944688401595705e+00, 3.747979189802462585e+00, 3.878817641573403805e+00, 4.015780819279312670e+00, 4.159209678351536168e+00, 4.309466789455788368e+00, 4.466937886899736897e+00, 4.632033539816493591e+00, 4.805190956770360727e+00, 4.986875935432896972e+00, 5.177584970080537688e+00, 5.377847530880629761e+00, 5.588228530273088035e+00, 5.809330993233640059e+00, 6.041798949837089488e+00, 6.286320570342285919e+00, 6.543631565013652661e+00, 6.814518873098582608e+00, 7.099824667819718682e+00, 7.400450706942931008e+00, 7.717363061475788814e+00, 8.051597258371279584e+00, 8.404263876795383951e+00, 8.776554641607500109e+00, 9.169749062247565207e+00, 9.585221670276993889e+00, 1.002444991444300704e+01, 1.048902277839603856e+01, 1.098065019316492606e+01, 1.150117332427169985e+01, 1.205257582204547280e+01, 1.263699613338454324e+01, 1.325674098404332380e+01, 1.391430015262873368e+01, 1.461236267104086712e+01, 1.535383460126837531e+01, 1.614185855545811846e+01, 1.697983514525758524e+01, 1.787144656784601339e+01, 1.882068256013178484e+01, 1.983186897964764985e+01, 2.090969930111845450e+01, 2.205926935196095527e+01, 2.328611564861881683e+01, 2.459625773922860138e+01, 2.599624500732998276e+01, 2.749320844694889238e+01, 2.909491798228195984e+01, 3.080984597641076715e+01, 3.264723765414180400e+01, 3.461718925554321861e+01, 3.673073484057443067e+01, 3.899994278315456980e+01, 4.143802312713618427e+01, 4.405944712930142330e+01, 4.688008048840357439e+01, 4.991733195758662298e+01, 5.319031926387298369e+01, 5.672005451703465811e+01, 6.052965158594831140e+01, 6.464455825915836491e+01, 6.909281639443131774e+01, 7.390535370725211687e+01, 7.911631135942343489e+01, 8.476341209659472308e+01, 9.088837435982152722e+01, 9.753737857533253823e+01, 1.047615927251647361e+02, 1.126177653386554197e+02, 1.211688952437418817e+02, 1.304849888043593828e+02, 1.406439169773708701e+02, 1.517323863863765989e+02, 1.638470407739824279e+02, 1.770957117100033620e+02, 1.915988403612775885e+02, 2.074910955409497265e+02, 2.249232172361061194e+02, 2.440641194630869936e+02, 2.651032917390266964e+02, 2.882535448280364212e+02, 3.137541538897424513e+02, 3.418744609277612322e+02, 3.729180087461214321e+02, 4.072272907593818790e+02, 4.451892153103389878e+02, 4.872414000388630927e+02, 5.338794318098249932e+02, 5.856652513400113117e+02, 6.432368496766822816e+02, 7.073194969336578611e+02, 7.787387632221277236e+02, 8.584356387770406827e+02, 9.474841163944599543e+02, 1.047111666301969297e+03, 1.158723113719277435e+03, 1.283928525349707755e+03, 1.424575826189363437e+03, 1.582789006393775706e+03, 1.761012944445459235e+03, 1.962066073573121788e+03, 2.189202360708354222e+03, 2.446184360349559652e+03, 2.737369460761187093e+03, 3.067811870808767638e+03, 3.443383419509962754e+03, 3.870916878218207705e+03, 4.358376293464465508e+03, 4.915059769420260559e+03, 5.551841303216967404e+03, 6.281459704453426129e+03, 7.118864385205665710e+03, 8.081629967627799596e+03, 9.190454321738597280e+03, 1.046975794051835702e+04, 1.194840663946247320e+04, 1.366058463062104793e+04, 1.564685131637809273e+04, 1.795542299179967539e+04, 2.064373043744082514e+04, 2.378031563732670807e+04, 2.744714621995650953e+04, 3.174244552480722739e+04, 3.678416050731336226e+04, 4.271422037773508051e+04, 4.970377768100323981e+04, 5.795967273138576164e+04, 6.773242484608792593e+04, 7.932613346949942761e+04, 9.311077397156915450e+04, 1.095375030536372224e+05, 1.291577556735669526e+05, 1.526471301608741586e+05, 1.808353350969648289e+05, 2.147438294770164181e+05, 2.556332515573999948e+05, 3.050633345562097502e+05, 3.649687926665853954e+05, 4.377556866857485380e+05, 5.264241222943208736e+05, 6.347248990108319410e+05, 7.673600526542426466e+05, 9.302403050337502786e+05, 1.130816502666451845e+06, 1.378507531155523742e+06, 1.685254393964162275e+06, 2.066239770168639390e+06, 2.540825270229354918e+06, 3.133775962036416630e+06, 3.876865148275802393e+06, 4.810984054018349430e+06, 5.988924089534678664e+06, 7.479057929608060924e+06, 9.370225698693408867e+06, 1.177824230977510661e+07, 1.485459301432580619e+07, 1.879809270383398104e+07, 2.387057334436346400e+07, 3.041806552258603202e+07, 3.889950046843262151e+07, 4.992574374586696017e+07, 6.431287504495613210e+07, 8.315518519925858136e+07, 1.079255664704117961e+08, 1.406141073390035115e+08, 1.839201785677305607e+08, 2.415197116904975365e+08, 3.184386015381112281e+08, 4.215765018929686736e+08, 5.604446356915114550e+08, 7.482094398046911572e+08, 1.003175129668246151e+09, 1.350898918997482870e+09, 1.827222165053491590e+09, 2.482633480831760933e+09, 3.388577637234919719e+09, 4.646620065299105644e+09, 6.401821801566297122e+09, 8.862352038053251473e+09, 1.232838602859196811e+10, 1.723489297480180023e+10, 2.421530528469447376e+10, 3.419673813208063025e+10, 4.854312364622606540e+10, 6.927149043760342676e+10, 9.938049490186203616e+10, 1.433521424759854145e+11, 2.079221734483088227e+11, 3.032695241820108158e+11, 4.448631503727710431e+11, 6.563458646477901051e+11, 9.740635696398910980e+11, 1.454220520059656158e+12, 2.184250688898627320e+12, 3.300999104757560757e+12, 5.019970485022749012e+12, 7.682676299017607834e+12, 1.183376596003983872e+13, 1.834748853557035315e+13, 2.863639312458363586e+13, 4.499803892715039958e+13, 7.119486876989154498e+13, 1.134307017980122346e+14, 1.820065782363618395e+14, 2.941484500615394037e+14, 4.788707305890930382e+14, 7.854025036928623551e+14, 1.297894304619860251e+15, 2.161279954782425640e+15, 3.627102147035003834e+15, 6.135342933440950378e+15, 1.046170006362244506e+16, 1.798477357839665686e+16, 3.117473412332331475e+16, 5.449445073049184222e+16, 9.607515505017978212e+16, 1.708589224452677852e+17, 3.065429751110228665e+17, 5.549227437451149511e+17, 1.013730232778046314e+18, 1.869059895876405824e+18, 3.478549552381578424e+18, 6.535992245975463763e+18, 1.240019272261066308e+19, 2.375828866910936629e+19, 4.597682433604432625e+19, 8.988106816837128428e+19, 1.775302379393632263e+20, 3.543413304390973486e+20, 7.148061397675525327e+20, 1.457620510577186305e+21, 3.005137124879829797e+21, 6.265024861633250697e+21, 1.320979941090283816e+22, 2.817487535902146221e+22, 6.079933041429805231e+22, 1.327658853647212083e+23, 2.934311759183641318e+23, 6.565087216807130026e+23, 1.487212273437937650e+24, 3.411840196076788128e+24, 7.928189928797018762e+24, 1.866451877029704857e+25, 4.452521859886739549e+25, 1.076545435174977662e+26, 2.638685681190697586e+26, 6.557908470244186498e+26, 1.652952243735585721e+27, 4.226383395914916199e+27, 1.096450394268080148e+28, 2.886822082999286080e+28, 7.715480389344015925e+28, 2.093728789309964846e+29, 5.770275789447655037e+29, 1.615463845391781140e+30, 4.595470055795608691e+30, 1.328629392686523255e+31, 3.905079681530784219e+31, 1.167134024271997252e+32, 3.548058538654277403e+32, 1.097378059358046160e+33, 3.454102978064445595e+33, 1.106745393701652323e+34, 3.610899559139069994e+34, 1.199946999283670567e+35, 4.062687014190878792e+35, 1.401835223893224514e+36, 4.931085527333162173e+36, 1.768812393284919500e+37, 6.472148293945199961e+37, 2.416453721739211922e+38, 9.208944720398123862e+38, 3.583297028622126676e+39, 1.424097482596699440e+40, 5.782627833426411524e+40, 2.399862204084363183e+41, 1.018291572042305460e+42, 4.419105414822034531e+42, 1.962126117680499311e+43, 8.916742424061253707e+43, 4.148882478294757720e+44, 1.977256529558276930e+45, 9.655300233875401080e+45, 4.832878898335598922e+46, 2.480575878223098058e+47, 1.306102809757654706e+48, 7.057565717289569232e+48, 3.915276522229618618e+49, 2.230898980943393318e+50, 1.306141334496309306e+51, 7.861021286656392627e+51, 4.865583758538451107e+52, 3.098487425915704674e+53, 2.031037614862563901e+54, 1.370999647608260200e+55, 9.534736274325001528e+55, 6.834959923166415407e+56, 5.052733546324789020e+57, 3.853810997282159979e+58, 3.034183107853208298e+59, 2.467161926009838899e+60, 2.072901039813580593e+61, 1.800563980579615383e+62, 1.617764027895344257e+63, 1.504283028250688329e+64, 1.448393206525427172e+65, 1.444855510980115799e+66, 1.494120428855029243e+67, 1.602566566107015722e+68, 1.783880504153942988e+69, 2.061999240572760738e+70, 2.476521794698572715e+71, 3.092349914153497358e+72, 4.016927238305985810e+73, 5.431607545226497387e+74, 7.650086824042822759e+75, 1.123017984114349288e+77, 1.719382952966052004e+78, 2.747335718690686674e+79, 4.584545010557684123e+80, 7.995082041539250252e+81, 1.458119909365899044e+83, 2.783001178679600175e+84, 5.562812231966194628e+85, 1.165338768982404578e+87, 2.560399126432838224e+88, 5.904549641859098192e+89, 1.430278474749838710e+91, 3.642046122956932563e+92, 9.756698571206402300e+93, 2.751946044275883051e+95, 8.179164793643197279e+96, 2.563704735086825890e+98, 8.481656496128255880e+99, 2.964260254403981007e+101, 1.095342970031208886e+103, 4.283148547584870628e+104, 1.773954352944319744e+106, 7.788991081894224760e+107, 3.628931721056821352e+109, 1.795729272516020592e+111, 9.446685151482835339e+112, 5.288263179614488101e+114, 3.153311236741401362e+116, 2.004807079683827669e+118, 1.360407192665237716e+120, 9.862825609807810517e+121, 7.647551788591128099e+123, 6.348802224871730088e+125, 5.649062361980019098e+127, 5.393248003523784781e+129, 5.530897191915703916e+131, 6.099598644640894333e+133, 7.242098433491964504e+135, 9.268083053637375570e+137, 1.279942702416040582e+140, 1.909796626960621302e+142, 3.082540300669885040e+144, 5.388809732384179657e+146, 1.021610251056626535e+149, 2.103005440072790650e+151, 4.706753990348725570e+153, 1.146834128125248991e+156],\n];\n\n/**\n * Computes x * 2 ^ exp\n * Sourced from: http://croquetweak.blogspot.com/2014/08/deconstructing-floats-frexp-and-ldexp.html\n *\n * @param x mantissa\n * @param exp exponent\n * @return {*}\n */\nfunction ldexp(x, exp) {\n  let steps = Math.min(3, Math.ceil(Math.abs(exp) / 1023));\n  let result = x;\n  for (let i = 0; i < steps; i++) {\n    result *= Math.pow(2, Math.floor((exp + i) / steps));\n  }\n\n  return result;\n}\n\n/**\n * Performs double exponential quadrature using the change of variable x = exp(pi/2 * sinh(t)), from Takahashi 1974.\n * The native range of this integrator is [0, inf].\n */\nclass ExpSinh {\n  constructor(max_refinements = 9, tol = ROOT_EPSILON) {\n    this.tol = tol;\n    this.m_max_refinements = max_refinements;\n    this.m_committed_refinements = EXP_SINH_WEIGHTS.length;\n    this.m_t_min = -6.164062500000000000;\n    this.m_abscissas = [...EXP_SINH_ABSCISSAS];\n    this.m_weights = [...EXP_SINH_WEIGHTS];\n  }\n\n  extend_refinements() {\n    if (this.m_committed_refinements >= this.m_max_refinements) {\n      return;\n    }\n\n    let row = ++this.m_committed_refinements;\n    let h = ldexp(1, -row);\n    const t_max = this.m_t_min + this.m_abscissas[0].length - 1;\n    let k = Math.trunc(Math.ceil((t_max - this.m_t_min) / (2 * h)));\n    this.m_abscissas[row] = new Array(k);\n    this.m_weights[row] = new Array(k);\n    let arg = this.m_t_min;\n    let j = 0;\n    let l = 2;\n    while (arg + l * h < t_max) {\n      arg = this.m_t_min + (2 * j + 1) * h;\n      let x = Math.exp(0.5 * Math.PI * Math.sinh(arg));\n      this.m_abscissas[row].push(x);\n      let w = Math.cosh(arg) * 0.5 * Math.PI * x;\n      this.m_weights[row].push(w);\n      ++j;\n    }\n  }\n\n  get_abscissa_row(n) {\n    if (this.m_committed_refinements < n) {\n      this.extend_refinements();\n    }\n\n    return this.m_abscissas[n];\n  }\n\n  get_weight_row(n) {\n    if (this.m_committed_refinements < n) {\n      this.extend_refinements();\n    }\n\n    return this.m_weights[n];\n  }\n\n  integrate(f, a, b) {\n    let integrand = f;\n    if (isFinite(a) && (b >= Number.MAX_VALUE)) {\n      if (a !== 0) {\n        integrand = (x) => f(x + a);\n      }\n    }\n\n    if (isFinite(b) && (a <= -Number.MAX_VALUE)) {\n      integrand = (x) => f(b - x);\n    }\n\n    if (a <= -Number.MAX_VALUE && b >= Number.MAX_VALUE) {\n      throw new RangeError('Error: use sinh_sinh quadrature for integration over entire real line, exp_sinh is for half infinite [0, inf]');\n    }\n\n    let y_max = integrand(Number.MAX_VALUE);\n    if (Math.abs(y_max) > Number.EPSILON || !isFinite(y_max)) {\n      throw new RangeError('Error: integrated function does not go to zero at infinity');\n    }\n\n    let I0 = 0;\n    let L1_I0 = 0;\n    for (let i = 0; i < this.m_abscissas[0].length; i++) {\n      let y = integrand(this.m_abscissas[0][i]);\n      I0 += y * this.m_weights[0][i];\n      L1_I0 += Math.abs(y) * this.m_weights[0][i];\n    }\n\n    let I1 = I0;\n    let L1_I1 = L1_I0;\n    for (let i = 0; i < this.m_abscissas[1].length; i++) {\n      let y = integrand(this.m_abscissas[1][i]);\n      I1 += y * this.m_weights[1][i];\n      L1_I1 += Math.abs(y) * this.m_weights[1][i];\n    }\n\n    I1 *= 0.5;\n    L1_I1 *= 0.5;\n    let err = Math.abs(I0 - I1);\n    let i = 2;\n    for (; i < this.m_abscissas.length; i++) {\n      I0 = I1;\n      L1_I0 = L1_I1;\n\n      I1 = 0.5 * I0;\n      L1_I1 = 0.5 * L1_I0;\n      let h = 1 / (1 << i);\n      let sum = 0;\n      let absum = 0;\n\n      let abscissas_row = this.get_abscissa_row(i);\n      let weight_row = this.get_weight_row(i);\n\n      let abterm1 = 1;\n      let eps = Number.EPSILON * L1_I1;\n      for (let j = 0; j < this.m_weights[i].length; j++) {\n        let x = abscissas_row[j];\n        let y = integrand(x);\n        sum += y * weight_row[j];\n        let abterm0 = Math.abs(y) * weight_row[j];\n        absum += abterm0;\n\n        if (x > 100 && abterm0 < eps && abterm1 < eps) {\n          break;\n        }\n\n        abterm1 = abterm0;\n      }\n\n      I1 += sum * h;\n      L1_I1 += absum * h;\n      err = Math.abs(I0 - I1);\n      if (!isFinite(I1)) {\n        throw new RangeError('Error: function was evaluated at singular point - ensure function is finite over entire domain');\n      }\n\n      if (err <= this.tol * L1_I1) {\n        break;\n      }\n    }\n\n    return [I1, err];\n  }\n}\n\nexport { GaussKronrod, ExpSinh };\n","/**\n * JavaScript port of Rmath functions. <p>\n *\n * These functions have been directly ported from the Rmath library, found in the R source code repository under\n * R-source/src/include/Rmath.h. Most of the code should look almost identical to the C code, with minor changes to\n * adapt to features present in C but not in JS. <p>\n *\n * Test cases were ported from R-source/tests/d-p-q-r-tests.R. We additionally wrote other test cases over a range of\n * parameter values and edge cases. These cases are found in our test suite in test/unit/rstats.js. <p>\n *\n * @module rstats\n * @author Matthew Flickinger\n * @author Ryan Welch\n * @license LGPL-2.1\n */\n\n// Constants\n\nconst DBL_EPSILON = 2.2204460492503130808472633361816e-16;\nconst DBL_MIN = Number.MIN_VALUE;\nconst DBL_MAX_EXP = 308;\nconst DBL_MIN_EXP = -323;\nconst DBL_MAX = Number.MAX_VALUE;\nconst SCALE_FACTOR = 1.157920892373162e+77;\nconst EULERS_CONST = 0.5772156649015328606065120900824024;\nconst TOL_LOGCF = 1e-14;\nconst LGAMMA_C = 0.2273736845824652515226821577978691e-12;\n\nconst DXREL = 1.490116119384765625e-8;\n\nconst M_LN2 = Math.LN2; //0.693147180559945309417232121458;\nconst M_LN10 = Math.LN10; //2.302585092994045684017991454684;\nconst M_PI = Math.PI;\nconst M_2PI = 2 * M_PI;\nconst M_LN_2PI = Math.log(2 * Math.PI);\nconst M_LN_SQRT_2PI = Math.log(Math.sqrt(M_2PI));\nconst M_SQRT_32 = 5.656854249492380195206754896838;\nconst M_1_SQRT_2PI = 0.398942280401432677939946059934;\nconst M_CUTOFF = M_LN2 * DBL_MAX_EXP / DBL_EPSILON;\n\nconst _dbl_min_exp = M_LN2 * DBL_MIN_EXP;\n\nconst ME_DOMAIN = 1;\nconst ME_RANGE = 2;\nconst ME_NOCONV = 4;\nconst ME_PRECISION = 8;\nconst ME_UNDERFLOW = 16;\n\nfunction ML_ERROR(x, s) {\n  if (x > ME_DOMAIN) {\n    let msg = '';\n    switch (x) {\n    case ME_DOMAIN:\n      msg = `argument out of domain in ${s}`;\n      break;\n    case ME_RANGE:\n      msg = `value out of range in ${s}`;\n      break;\n    case ME_NOCONV:\n      msg = `convergence failed in ${s}`;\n      break;\n    case ME_PRECISION:\n      msg = `full precision may not have been achieved in ${s}`;\n      break;\n    case ME_UNDERFLOW:\n      msg = `underflow occurred in ${s}`;\n      break;\n    }\n    console.error(msg);\n  }\n}\n\nfunction ML_ERR_return_NAN() {\n  ML_ERROR(ME_DOMAIN, '');\n  return NaN;\n}\n\nconst S0 = 0.083333333333333333333;\n/* 1/12 */\nconst S1 = 0.00277777777777777777778;\n/* 1/360 */\nconst S2 = 0.00079365079365079365079365;\n/* 1/1260 */\nconst S3 = 0.000595238095238095238095238;\n/* 1/1680 */\nconst S4 = 0.0008417508417508417508417508;\n/* 1/1188 */\n\nconst SFERR_HALVES = [\n  0.0, /* n=0 - wrong, place holder only */\n  0.1534264097200273452913848, /* 0.5 */\n  0.0810614667953272582196702, /* 1.0 */\n  0.0548141210519176538961390, /* 1.5 */\n  0.0413406959554092940938221, /* 2.0 */\n  0.03316287351993628748511048, /* 2.5 */\n  0.02767792568499833914878929, /* 3.0 */\n  0.02374616365629749597132920, /* 3.5 */\n  0.02079067210376509311152277, /* 4.0 */\n  0.01848845053267318523077934, /* 4.5 */\n  0.01664469118982119216319487, /* 5.0 */\n  0.01513497322191737887351255, /* 5.5 */\n  0.01387612882307074799874573, /* 6.0 */\n  0.01281046524292022692424986, /* 6.5 */\n  0.01189670994589177009505572, /* 7.0 */\n  0.01110455975820691732662991, /* 7.5 */\n  0.010411265261972096497478567, /* 8.0 */\n  0.009799416126158803298389475, /* 8.5 */\n  0.009255462182712732917728637, /* 9.0 */\n  0.008768700134139385462952823, /* 9.5 */\n  0.008330563433362871256469318, /* 10.0 */\n  0.007934114564314020547248100, /* 10.5 */\n  0.007573675487951840794972024, /* 11.0 */\n  0.007244554301320383179543912, /* 11.5 */\n  0.006942840107209529865664152, /* 12.0 */\n  0.006665247032707682442354394, /* 12.5 */\n  0.006408994188004207068439631, /* 13.0 */\n  0.006171712263039457647532867, /* 13.5 */\n  0.005951370112758847735624416, /* 14.0 */\n  0.005746216513010115682023589, /* 14.5 */\n  0.005554733551962801371038690,  /* 15.0 */\n];\n\nconst LGAMMA_COEFS = [0.3224670334241132182362075833230126e-0,\n  0.6735230105319809513324605383715000e-1, /* = (zeta(3)-1)/3 */\n  0.2058080842778454787900092413529198e-1,\n  0.7385551028673985266273097291406834e-2,\n  0.2890510330741523285752988298486755e-2,\n  0.1192753911703260977113935692828109e-2,\n  0.5096695247430424223356548135815582e-3,\n  0.2231547584535793797614188036013401e-3,\n  0.9945751278180853371459589003190170e-4,\n  0.4492623673813314170020750240635786e-4,\n  0.2050721277567069155316650397830591e-4,\n  0.9439488275268395903987425104415055e-5,\n  0.4374866789907487804181793223952411e-5,\n  0.2039215753801366236781900709670839e-5,\n  0.9551412130407419832857179772951265e-6,\n  0.4492469198764566043294290331193655e-6,\n  0.2120718480555466586923135901077628e-6,\n  0.1004322482396809960872083050053344e-6,\n  0.4769810169363980565760193417246730e-7,\n  0.2271109460894316491031998116062124e-7,\n  0.1083865921489695409107491757968159e-7,\n  0.5183475041970046655121248647057669e-8,\n  0.2483674543802478317185008663991718e-8,\n  0.1192140140586091207442548202774640e-8,\n  0.5731367241678862013330194857961011e-9,\n  0.2759522885124233145178149692816341e-9,\n  0.1330476437424448948149715720858008e-9,\n  0.6422964563838100022082448087644648e-10,\n  0.3104424774732227276239215783404066e-10,\n  0.1502138408075414217093301048780668e-10,\n  0.7275974480239079662504549924814047e-11,\n  0.3527742476575915083615072228655483e-11,\n  0.1711991790559617908601084114443031e-11,\n  0.8315385841420284819798357793954418e-12,\n  0.4042200525289440065536008957032895e-12,\n  0.1966475631096616490411045679010286e-12,\n  0.9573630387838555763782200936508615e-13,\n  0.4664076026428374224576492565974577e-13,\n  0.2273736960065972320633279596737272e-13,\n  0.1109139947083452201658320007192334e-13, /* = (zeta(40+1)-1)/(40+1) */\n];\n\nconst POIS_COEFS_A = [\n  -1e99, /* placeholder used for 1-indexing */\n  2 / 3.,\n  -4 / 135.,\n  8 / 2835.,\n  16 / 8505.,\n  -8992 / 12629925.,\n  -334144 / 492567075.,\n  698752 / 1477701225.,\n];\n\nconst POIS_COEFS_B = [\n  -1e99, /* placeholder */\n  1 / 12.,\n  1 / 288.,\n  -139 / 51840.,\n  -571 / 2488320.,\n  163879 / 209018880.,\n  5246819 / 75246796800.,\n  -534703531 / 902961561600.,\n];\n\nconst GAMCS = [\n  +.8571195590989331421920062399942e-2,\n  +.4415381324841006757191315771652e-2,\n  +.5685043681599363378632664588789e-1,\n  -.4219835396418560501012500186624e-2,\n  +.1326808181212460220584006796352e-2,\n  -.1893024529798880432523947023886e-3,\n  +.3606925327441245256578082217225e-4,\n  -.6056761904460864218485548290365e-5,\n  +.1055829546302283344731823509093e-5,\n  -.1811967365542384048291855891166e-6,\n  +.3117724964715322277790254593169e-7,\n  -.5354219639019687140874081024347e-8,\n  +.9193275519859588946887786825940e-9,\n  -.1577941280288339761767423273953e-9,\n  +.2707980622934954543266540433089e-10,\n  -.4646818653825730144081661058933e-11,\n  +.7973350192007419656460767175359e-12,\n  -.1368078209830916025799499172309e-12,\n  +.2347319486563800657233471771688e-13,\n  -.4027432614949066932766570534699e-14,\n  +.6910051747372100912138336975257e-15,\n  -.1185584500221992907052387126192e-15,\n  +.2034148542496373955201026051932e-16,\n  -.3490054341717405849274012949108e-17,\n  +.5987993856485305567135051066026e-18,\n  -.1027378057872228074490069778431e-18,\n  +.1762702816060529824942759660748e-19,\n  -.3024320653735306260958772112042e-20,\n  +.5188914660218397839717833550506e-21,\n  -.8902770842456576692449251601066e-22,\n  +.1527474068493342602274596891306e-22,\n  -.2620731256187362900257328332799e-23,\n  +.4496464047830538670331046570666e-24,\n  -.7714712731336877911703901525333e-25,\n  +.1323635453126044036486572714666e-25,\n  -.2270999412942928816702313813333e-26,\n  +.3896418998003991449320816639999e-27,\n  -.6685198115125953327792127999999e-28,\n  +.1146998663140024384347613866666e-28,\n  -.1967938586345134677295103999999e-29,\n  +.3376448816585338090334890666666e-30,\n  -.5793070335782135784625493333333e-31,\n];\n\nconst ALGMCS = [\n  +.1666389480451863247205729650822e+0,\n  -.1384948176067563840732986059135e-4,\n  +.9810825646924729426157171547487e-8,\n  -.1809129475572494194263306266719e-10,\n  +.6221098041892605227126015543416e-13,\n  -.3399615005417721944303330599666e-15,\n  +.2683181998482698748957538846666e-17,\n  -.2868042435334643284144622399999e-19,\n  +.3962837061046434803679306666666e-21,\n  -.6831888753985766870111999999999e-23,\n  +.1429227355942498147573333333333e-24,\n  -.3547598158101070547199999999999e-26,\n  +.1025680058010470912000000000000e-27,\n  -.3401102254316748799999999999999e-29,\n  +.1276642195630062933333333333333e-30,\n];\n\nconst PNORM_A = [\n  2.2352520354606839287,\n  161.02823106855587881,\n  1067.6894854603709582,\n  18154.981253343561249,\n  0.065682337918207449113,\n];\n\nconst PNORM_B = [\n  47.20258190468824187,\n  976.09855173777669322,\n  10260.932208618978205,\n  45507.789335026729956,\n];\n\nconst PNORM_C = [\n  0.39894151208813466764,\n  8.8831497943883759412,\n  93.506656132177855979,\n  597.27027639480026226,\n  2494.5375852903726711,\n  6848.1904505362823326,\n  11602.651437647350124,\n  9842.7148383839780218,\n  1.0765576773720192317e-8,\n];\n\nconst PNORM_D = [\n  22.266688044328115691,\n  235.38790178262499861,\n  1519.377599407554805,\n  6485.558298266760755,\n  18615.571640885098091,\n  34900.952721145977266,\n  38912.003286093271411,\n  19685.429676859990727,\n];\n\nconst PNORM_P = [\n  0.21589853405795699,\n  0.1274011611602473639,\n  0.022235277870649807,\n  0.001421619193227893466,\n  2.9112874951168792e-5,\n  0.02307344176494017303,\n];\n\nconst PNORM_Q = [\n  1.28426009614491121,\n  0.468238212480865118,\n  0.0659881378689285515,\n  0.00378239633202758244,\n  7.29751555083966205e-5,\n];\n\nconst R_D__0 = (log_p) => (log_p ? -Infinity : 0.0);\nconst R_D__1 = (log_p) => (log_p ? 0.0 : 1.0);\nconst R_DT_0 = (lower_tail, log_p) => (lower_tail ? R_D__0(log_p) : R_D__1(log_p));\nconst R_DT_1 = (lower_tail, log_p) => (lower_tail ? R_D__1(log_p) : R_D__0(log_p));\n// const R_D_half = () => (log_p ? -M_LN2 : 0.5);\n\n// This is some sort of trick by using 0.5 - p + 0.5 to \"perhaps gain 1 bit of accuracy\"\nconst R_D_Lval = (p, lower_tail) => (lower_tail ? p : (0.5 - p + 0.5));\nconst R_D_Cval = (p, lower_tail) => (lower_tail ? (0.5 - p + 0.5) : p);\n\nconst R_D_val = (x, log_p)\t=> (log_p ? Math.log(x) : (x));\nconst R_D_log = (p, log_p) => (log_p ? p : Math.log(p));\nconst R_D_Clog = (p, log_p) => (log_p ? Math.log1p(-(p)) : (0.5 - (p) + 0.5));\nconst R_DT_val = (x, lower_tail, log_p) => ((lower_tail ? R_D_val(x, log_p) : R_D_Clog(x, log_p)));\n\nconst R_D_LExp = (x, log_p) => (log_p ? R_Log1_Exp(x) : Math.log1p(-x));\n\n// Be careful, for some reason they named two functions off by only 1 capital letter...\n// R_DT_log != R_DT_Log\nconst R_DT_log = (p, lower_tail) => (lower_tail ? R_D_log(p) : R_D_LExp(p));\nconst R_DT_Clog = (p, lower_tail) => (lower_tail ? R_D_LExp(p) : R_D_log(p));\n//const R_DT_Log = (p, lower_tail) => (lower_tail ? p : R_Log1_Exp(p));\n\n/**\n * See warning for R_Q_P01_boundaries (this function should be wrapped in try/catch.)\n */\nfunction R_Q_P01_check(p, log_p) {\n  if ((log_p && p > 0) || (!log_p && (p < 0 || p > 1))) {\n    throw ML_ERR_return_NAN();\n  }\n}\n\n/**\n * Note this has changed from the R implementation which was a C macro.\n * You should wrap this in a try catch, like:\n * try {\n *   boundaries(...)\n * }\n * catch (e) { return e; }\n */\nfunction R_Q_P01_boundaries(p, lower_tail, log_p, left, right) {\n  if (log_p) {\n    if (p > 0) {\n      throw ML_ERR_return_NAN();\n    }\n    if (p === 0) {\n      throw lower_tail ? right : left;\n    }\n    if (p === Number.NEGATIVE_INFINITY) {\n      throw lower_tail ? left : right;\n    }\n  } else {\n    if (p < 0 || p > 1) {\n      throw ML_ERR_return_NAN();\n    }\n    if (p === 0) {\n      throw lower_tail ? left : right;\n    }\n    if (p === 1) {\n      throw lower_tail ? right : left;\n    }\n  }\n}\n\nfunction R_P_bounds_01(x, x_min, x_max, lower_tail, log_p) {\n  if (x <= x_min) {\n    throw R_DT_0(lower_tail, log_p);\n  }\n  if (x >= x_max) {\n    throw R_DT_1(lower_tail, log_p);\n  }\n}\n\nfunction R_DT_qIv(p, lower_tail, log_p) {\n  if (log_p) {\n    if (lower_tail) {\n      return Math.exp(p);\n    } else {\n      return -Math.expm1(p);\n    }\n  } else {\n    return R_D_Lval(p, lower_tail);\n  }\n}\n\nfunction R_DT_CIv(p, lower_tail, log_p) {\n  if (log_p) {\n    if (lower_tail) {\n      return -Math.expm1(p);\n    } else {\n      return Math.exp(p);\n    }\n  } else {\n    return R_D_Cval(p);\n  }\n}\n\nfunction fmin2(x, y) {\n  if (isNaN(x) || isNaN(y)) {\n    return x + y;\n  }\n  return (x < y) ? x : y;\n}\n\nfunction fmax2(x, y) {\n  if (isNaN(x) || isNaN(y)) {\n    return x + y;\n  }\n  return (x < y) ? y : x;\n}\n\nfunction expm1(x) {\n  let y, a = Math.abs(x);\n\n  if (a < DBL_EPSILON) {\n    return x;\n  }\n\n  if (a > 0.697) {\n    return Math.exp(x) - 1;\n  }\n\n  if (a > 1e-8) {\n    y = Math.exp(x) - 1;\n  } else {\n    y = (x / 2 + 1) * x;\n  }\n\n  y -= (1 + y) * (Math.log1p(y) - x);\n  return y;\n}\n\nfunction R_Log1_Exp(x) {\n  return ((x) > -M_LN2 ? Math.log(-Math.expm1(x)) : Math.log1p(-Math.exp(x)));\n}\n\nfunction R_D_exp(x, log_p) {\n  return log_p ? x : Math.exp(x);\n}\n\nfunction R_D_fexp(f, x, give_log) {\n  return give_log ? -0.5 * Math.log(f) + x : Math.exp(x) / Math.sqrt(f);\n}\n\nfunction sinpi(x) {\n  if (isNaN(x)) {\n    return x;\n  }\n  if (!Number.isFinite(x)) {\n    return NaN;\n  }\n  x = x % 2;\n  if (x <= -1) {\n    x += 2.0;\n  } else if (x > 1.0) {\n    x -= 2.0;\n  }\n  if (x === 0.0 || x === 1.0) {\n    return 0.0;\n  }\n  if (x === 0.5) {\n    return 1.0;\n  }\n  if (x === -0.5) {\n    return -1.0;\n  }\n  return Math.sin(M_PI * x);\n}\n\nfunction chebyshev_eval(x, a, n) {\n  var b0, b1, b2, twox, i;\n\n  if (n < 1 || n > 1000) {\n    return NaN;\n  }\n  if (x < -1.1 || x > 1.1) {\n    return NaN;\n  }\n  twox = x * 2;\n  b2 = b1 = 0;\n  b0 = 0;\n  for (i = 1; i <= n; i++) {\n    b2 = b1;\n    b1 = b0;\n    b0 = twox * b1 - b2 + a[n - i];\n  }\n  return (b0 - b2) * 0.5;\n}\n\nfunction lgammacor(x) {\n  var tmp;\n  var nalgm = 5;\n  var xbig = 94906265.62425156;\n  var xmax = 3.745194030963158e306;\n\n  if (x < 10) {\n    return NaN;\n  } else if (x > xmax) {\n    throw ('lgammacor underflow');\n  } else if (x < xbig) {\n    tmp = 10 / x;\n    return chebyshev_eval(tmp * tmp * 2 - 1, ALGMCS, nalgm) / x;\n  }\n  return 1 / (x * 12);\n}\n\nfunction gammafn(x) {\n  var i, n, y, sinpiy, value;\n\n  var ngam = 22;\n  var xmin = -170.5674972726612;\n  var xmax = 171.61447887182298;\n  var xsml = 2.2474362225598545e-308;\n\n  if (isNaN(x)) {\n    return (x);\n  }\n\n  if (x === 0 || (x < 0 && x === Math.round(x))) {\n    return NaN;\n  }\n\n  y = Math.abs(x);\n  if (y <= 10) {\n    n = parseInt(x, 10);\n    if (x < 0) {\n      n--;\n    }\n    y = x - n;\n    n--;\n    value = chebyshev_eval(y * 2 - 1, GAMCS, ngam) + .9375;\n    if (n === 0) {\n      return value;\n    }\n    if (n < 0) {\n      if (x < -0.5 && Math.abs(x - parseInt(x - 0.5, 10) / x) < DXREL) {\n        throw ('gammafn precision error');\n      }\n      if (x < xsml) {\n        return (x > 0) ? Number.POSITIVE_INFINITY : Number.NEGATIVE_INFINITY;\n      }\n\n      n = -n;\n\n      for (i = 0; i < n; i++) {\n        value /= (x + i);\n      }\n      return value;\n    } else {\n      for (i = 1; i <= n; i++) {\n        value *= (y + i);\n      }\n      return value;\n    }\n  } else {\n    if (x > xmax) {\n      return Number.POSITIVE_INFINITY;\n    }\n    if (x < xmin) {\n      return 0;\n    }\n    if (y <= 50 && y === parseInt(y, 10)) {\n      value = 1;\n      for (i = 2; i < y; i++) {\n        value *= i;\n      }\n    } else {\n      value = Math.exp((y - 0.5) * Math.log(y) - y - M_LN_SQRT_2PI +\n        ((2 * y === parseInt(2 * y, 10)) ? stirlerr(y) : lgammacor(y)));\n    }\n    if (x > 0) {\n      return value;\n    }\n    if (Math.abs(x - parseInt(x - 0.5, 10) / x) < DXREL) {\n      throw ('gammafn precision error');\n    }\n    sinpiy = sinpi(y);\n    if (sinpiy === 0) {\n      return Number.POSITIVE_INFINITY;\n    }\n    return -M_PI / (y * sinpiy * value);\n  }\n}\n\nfunction lgammafn_sign(x) {\n  var ans, y, sinpiy;\n  //sgn = 1;\n  var xmax = 2.5327372760800758e+305;\n\n  if (isNaN(x)) {\n    return x;\n  }\n\n  if (x < 0 && Math.floor(-x) % 2 === 0) {\n    //sgn = -1;\n  }\n  if (x <= 0 && x === Math.trunc(x)) {\n    return Number.POSITIVE_INFINITY;\n  }\n\n  y = Math.abs(x);\n  if (y < 1e-306) {\n    return -Math.log(y);\n  }\n  if (y <= 10) {\n    return Math.log(Math.abs(gammafn(x)));\n  }\n\n  if (y > xmax) {\n    return Number.POSITIVE_INFINITY;\n  }\n  if (x > 0) {\n    if (x > 1e17) {\n      return x * (Math.log(x) - 1);\n    } else if (x > 4934720.) {\n      return M_LN_SQRT_2PI + (x - 0.5) * Math.log(x) - x;\n    } else {\n      return M_LN_SQRT_2PI + (x - 0.5) * Math.log(x) - x + lgammacor(x);\n    }\n  }\n  sinpiy = Math.abs(sinpi(y));\n\n  if (sinpiy === 0) {\n    return NaN;\n  }\n\n  if (Math.abs((x - Math.trunc(x - 0.5)) * ans / x) < DXREL) {\n    throw ('lgamma precision error');\n  }\n  return ans;\n}\n\nfunction lgammafn(x) {\n  return lgammafn_sign(x, null);\n}\n\nfunction stirlerr(n) {\n  var nn;\n  if (n <= 15) {\n    nn = n + n;\n    if (nn === Math.floor(nn)) {\n      return SFERR_HALVES[Math.floor(nn)];\n    }\n    return lgammafn(n + 1.0) - (n + 0.5) * Math.log(n) + n - M_LN_SQRT_2PI;\n  }\n\n  nn = n * n;\n  if (n > 500) {\n    return (S0 - S1 / nn) / n;\n  }\n  if (n > 80) {\n    return (S0 - (S1 - S2 / nn) / nn) / n;\n  }\n  if (n > 35) {\n    return (S0 - (S1 - (S2 - S3 / nn) / nn) / nn) / n;\n  }\n  return (S0 - (S1 - (S2 - (S3 - S4 / nn) / nn) / nn) / nn) / n;\n}\n\nfunction bd0(x, np) {\n  var ej, s, s1, v, j;\n\n  if (!Number.isFinite(x) || !Number.isFinite(np) || np === 0) {\n    return NaN;\n  }\n  if (Math.abs(x - np) < 0.1 * (x + np)) {\n    v = (x - np) / (x + np);\n    s = (x - np) * v;\n    if (Math.abs(s) < DBL_MIN) {\n      return s;\n    }\n    ej = 2 * x * v;\n    v = v * v;\n    for (j = 1; j < 1000; j++) {\n      ej *= v;\n      s1 = s + ej / ((j * 2) + 1);\n      if (s1 === s) {\n        return s1;\n      }\n      s = s1;\n    }\n  }\n  return x * Math.log(x / np) + np - x;\n}\n\nfunction dpois_raw(x, lambda, give_log) {\n  if (lambda === 0) {\n    return (x === 1) ? R_D(1, give_log) : R_D(0, give_log);\n  }\n  if (!Number.isFinite(lambda)) {\n    return R_D(0, give_log);\n  }\n  if (x < 0) {\n    return R_D(0, give_log);\n  }\n  if (x <= lambda * DBL_MIN) {\n    return R_D_exp(-lambda, give_log);\n  }\n  if (lambda < x * DBL_MIN) {\n    return R_D_exp(-lambda + x * Math.log(lambda) - lgammafn(x + 1), give_log);\n  }\n  return R_D_fexp(M_2PI * x, -stirlerr(x) - bd0(x, lambda), give_log);\n}\n\nfunction logcf(x, i, d, eps) {\n  var c1 = 2 * d;\n  var c2 = i + d;\n  var c3;\n  var c4 = c2 + d;\n  var a1 = c2;\n  var b1 = i * (c2 - i * x);\n  var b2 = d * d * x;\n  var a2 = c4 * c2 - b2;\n\n  b2 = c4 * b1 - i * b2;\n  while (Math.abs(a2 * b1 - a1 * b2) > Math.abs(eps * b1 * b2)) {\n    c3 = c2 * c2 * x;\n    c2 += d;\n    c4 += d;\n    a1 = c4 * a2 - c3 * a1;\n    b1 = c4 * b2 - c3 * b1;\n\n    c3 = c1 * c1 * x;\n    c1 += d;\n    c4 += d;\n    a2 = c4 * a1 - c3 * a2;\n    b2 = c4 * b1 - c3 * b2;\n\n    if (Math.abs(b2) > SCALE_FACTOR) {\n      a1 /= SCALE_FACTOR;\n      a2 /= SCALE_FACTOR;\n      b1 /= SCALE_FACTOR;\n      b2 /= SCALE_FACTOR;\n    } else if (Math.abs(b2) < 1 / SCALE_FACTOR) {\n      a1 *= SCALE_FACTOR;\n      a2 *= SCALE_FACTOR;\n      b1 *= SCALE_FACTOR;\n      b2 *= SCALE_FACTOR;\n    }\n  }\n  return a2 / b2;\n}\n\nfunction log1pmx(x) {\n  var minLog1Value = -0.79149064;\n  if (x > 1 || x < minLog1Value) {\n    return Math.log1p(x) - x;\n  } else {\n    var r = x / (2 + x);\n    var y = r * r;\n    if (Math.abs(x) < 1e-2) {\n      return r * ((((2 / 9 * y + 2 / 7) * y + 2 / 5) * y + 2 / 3) * y - x);\n    } else {\n      return r * (2 * y * logcf(y, 3, 2, TOL_LOGCF) - x);\n    }\n  }\n}\n\nfunction lgamma1p(a) {\n  if (Math.abs(a) >= 0.5) {\n    return lgammafn(a + 1);\n  }\n  var lgam, i;\n  lgam = LGAMMA_C * logcf(-a / 2, LGAMMA_COEFS.length + 2, 1, TOL_LOGCF);\n  for (i = LGAMMA_COEFS.length - 1; i >= 0; i--) {\n    lgam = LGAMMA_COEFS[i] - a * lgam;\n  }\n\n  return (a * lgam - EULERS_CONST) * a - log1pmx(a);\n}\n\nfunction logspace_add(logx, logy) {\n  return ((logx > logy) ? logx : logy) + Math.log1p(Math.exp(-Math.abs(logx - logy)));\n}\n\n// function logspace_sub(logx, logy) {\n//   return logx + R_Log1_Exp(logy - logx);\n// }\n\n// function logspace_sum(logx, n) {\n//   if (n == 0) {\n//     return Number.NEGATIVE_INFINITY;\n//   }\n//   if (n == 1) {\n//     return logx[0];\n//   }\n//   if (n == 2) {\n//     return logspace_add(logx[0] + logx[1]);\n//   }\n//   var i;\n//   var Mx = logx[0];\n//   for (i = 1; i < n; i++) {\n//     if (Mx < logx[i]) {\n//       Mx = logx[i];\n//     }\n//   }\n//   var s = 0;\n//   for (i = 0; i < n; i++) {\n//     s += Math.exp(logx[i] - Mx);\n//   }\n//   return Mx + Math.log(s);\n// }\n\nfunction dpois_wrap(x_plus_1, lambda, give_log) {\n  if (!isFinite(lambda)) {\n    return R_D(0, give_log);\n  }\n  if (x_plus_1 > 1) {\n    return dpois_raw(x_plus_1 - 1, lambda, give_log);\n  }\n  if (lambda > Math.abs(x_plus_1 - 1) * M_CUTOFF) {\n    return R_D_exp(-lambda - lgammafn(x_plus_1), give_log);\n  } else {\n    var d = dpois_raw(x_plus_1, lambda, give_log);\n    return (give_log) ? d + Math.log(x_plus_1 / lambda) : d * (x_plus_1 / lambda);\n  }\n}\n\nfunction R_D(i, log_p) {\n  if (i === 0) {\n    return (log_p) ? Number.NEGATIVE_INFINITY : 0;\n  } else {\n    return (log_p) ? 0 : 1;\n  }\n}\n\nfunction R_DT(i, lower_tail, log_p) {\n  if (i === 0) {\n    return (lower_tail) ? R_D(0, log_p) : R_D(1, log_p);\n  } else {\n    return (lower_tail) ? R_D(1, log_p) : R_D(0, log_p);\n  }\n}\n\nfunction pgamma_smallx(x, alph, lower_tail, log_p) {\n  var sum = 0, c = alph, n = 0, term;\n  do {\n    n++;\n    c *= -x / n;\n    term = c / (alph + n);\n    sum += term;\n  } while (Math.abs(term) > DBL_EPSILON * Math.abs(sum));\n\n  if (lower_tail) {\n    var f1 = (log_p) ? Math.log1p(sum) : 1 + sum;\n    var f2;\n    if (alph > 1) {\n      f2 = dpois_raw(alph, x, log_p);\n      f2 = (log_p) ? f2 + x : f2 * Math.exp(x);\n    } else if (log_p) {\n      f2 = alph * Math.log(x) - lgamma1p(alph);\n    } else {\n      f2 = Math.pow(x, alph) / Math.exp(lgamma1p(alph));\n    }\n    return (log_p) ? f1 + f2 : f1 * f2;\n  } else {\n    var lf2 = alph * Math.log(x) - lgamma1p(alph);\n    if (log_p) {\n      return R_Log1_Exp(Math.log1p(sum) + lf2);\n    } else {\n      var f1m1 = sum;\n      var f2m1 = Math.expm1(lf2);\n      return -(f1m1 + f2m1 + f1m1 * f2m1);\n    }\n  }\n\n}\n\nfunction pd_upper_series(x, y, log_p) {\n  var term = x / y;\n  var sum = term;\n  do {\n    y++;\n    term *= x / y;\n    sum += term;\n  } while (term > sum * DBL_EPSILON);\n  return (log_p) ? Math.log(sum) : sum;\n}\n\nfunction pd_lower_cf(y, d) {\n  var f = 0, of, f0;\n  var i, c2, c3, c4, a1, b1, a2, b2;\n\n  if (y === 0) {\n    return 0;\n  }\n  f0 = y / d;\n  if (Math.abs(y - 1) < Math.abs(d) * DBL_EPSILON) {\n    return f0;\n  }\n\n  if (f0 > 1.0) {\n    f0 = 1.0;\n  }\n  c2 = y;\n  c4 = d;\n\n  a1 = 0;\n  b1 = 1;\n  a2 = y;\n  b2 = d;\n\n  while (b2 > SCALE_FACTOR) {\n    a1 /= SCALE_FACTOR;\n    b1 /= SCALE_FACTOR;\n    a2 /= SCALE_FACTOR;\n    b2 /= SCALE_FACTOR;\n  }\n\n  i = 0;\n  of = -1;\n  while (i < 200000) {\n    i++;\n    c2--;\n    c3 = i * c2;\n    c4 += 2;\n    a1 = c4 * a2 + c3 * a1;\n    b1 = c4 * b2 + c3 * b1;\n\n    i++;\n    c2--;\n    c3 = i * c2;\n    c4 += 2;\n    a2 = c4 * a1 + c3 * a2;\n    b2 = c4 * b1 + c3 * b2;\n\n    if (b2 > SCALE_FACTOR) {\n      a1 /= SCALE_FACTOR;\n      b1 /= SCALE_FACTOR;\n      a2 /= SCALE_FACTOR;\n      b2 /= SCALE_FACTOR;\n    }\n\n    if (b2 !== 0) {\n      f = a2 / b2;\n      if (Math.abs(f - of) <= DBL_EPSILON * ((Math.abs(f) > f0) ? Math.abs(f) : f0)) {\n        return f;\n      }\n      of = f;\n    }\n  }\n  //WARNING - NON CONVERGENCE\n  return f;\n}\n\nfunction pd_lower_series(lambda, y) {\n  var term = 1, sum = 0;\n  while (y >= 1 && term > sum * DBL_EPSILON) {\n    term *= y / lambda;\n    sum += term;\n    y--;\n  }\n  if (y !== Math.floor(y)) {\n    var f = pd_lower_cf(y, lambda + 1 - y);\n    sum += term * f;\n  }\n  return sum;\n}\n\nfunction dpnorm(x, lower_tail, lp) {\n  if (x < 0) {\n    x = -x;\n    lower_tail = !lower_tail;\n  }\n\n  if (x > 10 && !lower_tail) {\n    var term = 1 / x,\n      sum = term,\n      x2 = x * x,\n      i = 1;\n    do {\n      term *= -i / x2;\n      sum += term;\n      i += 2;\n    } while (Math.abs(term) > DBL_EPSILON * sum);\n\n    return 1 / sum;\n  } else {\n    var d = dnorm(x, 0.0, 1.0, false);\n    return d / Math.exp(lp);\n  }\n}\n\nfunction ppois_asymp(x, lambda, lower_tail, log_p) {\n  var coefs_a = POIS_COEFS_A, coefs_b = POIS_COEFS_B;\n  var elfb, elfb_term;\n  var res12, res1_term, res1_ig, res2_term, res2_ig;\n  var dfm, pt_, s2pt, f, np;\n  var i;\n\n  dfm = lambda - x;\n  pt_ = -log1pmx(dfm / x);\n  s2pt = Math.sqrt(2 * x * pt_);\n  if (dfm < 0) {\n    s2pt = -s2pt;\n  }\n\n  res12 = 0;\n  res1_ig = res1_term = Math.sqrt(x);\n  res2_ig = res2_term = s2pt;\n  for (i = 1; i < 8; i++) {\n    res12 += res1_ig * coefs_a[i];\n    res12 += res2_ig * coefs_b[i];\n    res1_term *= pt_ / i;\n    res2_term *= 2 * pt_ / (2 * i + 1);\n    res1_ig = res1_ig / x + res1_term;\n    res2_ig = res2_ig / x + res2_term;\n  }\n\n  elfb = x;\n  elfb_term = 1;\n  for (i = 1; i < 8; i++) {\n    elfb += elfb_term * coefs_b[i];\n    elfb_term /= x;\n  }\n\n  if (!lower_tail) {\n    elfb = -elfb;\n  }\n  f = res12 / elfb;\n  np = pnorm(s2pt, 0.0, 1.0, !lower_tail, log_p);\n  if (log_p) {\n    var n_d_over_p = dpnorm(s2pt, !lower_tail, np);\n    return np + Math.log1p(f * n_d_over_p);\n  } else {\n    var nd = dnorm(s2pt, 0.0, 1.0, log_p);\n    return np + f * nd;\n  }\n}\n\nfunction pgamma_raw(x, alph, lower_tail, log_p) {\n  var res, d, sum;\n  try {\n    R_P_bounds_01(x, 0.0, Number.POSITIVE_INFINITY, lower_tail, log_p);\n  } catch (e) {\n    return e;\n  }\n  if (x < 1) {\n    res = pgamma_smallx(x, alph, lower_tail, log_p);\n  } else if (x <= alph - 1 && x < 0.8 * (alph + 50)) {\n    // incl large alph compared to x\n    sum = pd_upper_series(x, alph, log_p);\n    d = dpois_wrap(alph, x, log_p);\n    if (!lower_tail) {\n      res = (log_p) ? R_Log1_Exp(d + sum) : 1 - d * sum;\n    } else {\n      res = (log_p) ? sum + d : sum * d;\n    }\n  } else if (alph - 1 < x && alph < 0.8 * (x + 50)) {\n    // incl large x compared to alph\n    d = dpois_wrap(alph, x, log_p);\n    if (alph < 1) {\n      if (x * DBL_EPSILON > 1 - alph) {\n        sum = R_D(0, log_p);\n      } else {\n        var f = pd_lower_cf(alph, x - (alph - 1)) * x / alph;\n        sum = (log_p) ? Math.log(f) : f;\n      }\n    } else {\n      sum = pd_lower_series(x, alph - 1);\n      sum = (log_p) ? Math.log1p(sum) : 1 + sum;\n    }\n    if (!lower_tail) {\n      res = (log_p) ? sum + d : sum * d;\n    } else {\n      res = (log_p) ? R_Log1_Exp(d + sum) : 1 - d * sum;\n    }\n  } else {\n    //x >=1 and x near alph\n    res = ppois_asymp(alph - 1, x, !lower_tail, log_p);\n  }\n\n  if (!log_p && res < DBL_MIN / DBL_EPSILON) {\n    return Math.exp(pgamma_raw(x, alph, lower_tail, true));\n  } else {\n    return res;\n  }\n}\n\n// function dpois(x, lambda, give_log) {\n//   if (lambda < 0) {\n//     return NaN;\n//   }\n//   if (x % 1 != 0) {\n//     return NaN;\n//   }\n//   if (x < 0 || !Number.isFinite(x)) {\n//     return R_D(0, give_log);\n//   }\n//   return dpois_raw(x, lambda, give_log);\n//\n// }\n\nfunction pgamma(x, alph, scale, lower_tail, log_p) {\n  if (isNaN(x) || alph < 0 || scale < 0) {\n    return NaN;\n  }\n  x /= scale;\n  if (alph === 0) {\n    return (x <= 0) ? R_DT(0, lower_tail, log_p) : R_DT(1, lower_tail, log_p);\n  }\n  return pgamma_raw(x, alph, lower_tail, log_p);\n}\n\n/**\n * The gamma density function.\n * @param x\n * @param shape\n * @param scale\n * @param give_log\n * @return {number|*}\n */\nexport function dgamma(x, shape, scale, give_log) {\n  x = parseNumeric(x);\n  shape = parseNumeric(shape);\n  scale = parseNumeric(scale);\n  give_log = parseBoolean(give_log);\n\n  let pr;\n\n  if (isNaN(x) || isNaN(shape) || isNaN(scale)) {\n    return x + shape + scale;\n  }\n\n  if (shape < 0 || scale <= 0) {\n    ML_ERR_return_NAN;\n  }\n  if (x < 0) {\n    return R_D__0(give_log);\n  }\n  if (shape === 0) {\n    return x === 0 ? Infinity : R_D__0(give_log);\n  }\n  if (x === 0) {\n    if (shape < 1) {\n      return Infinity;\n    }\n    if (shape > 1) {\n      return R_D__0(give_log);\n    }\n    return give_log ? -Math.log(scale) : 1 / scale;\n  }\n\n  if (shape < 1) {\n    pr = dpois_raw(shape, x / scale, give_log);\n    return give_log ? pr + Math.log(shape / x) : pr * shape / x;\n  }\n\n  pr = dpois_raw(shape - 1, x / scale, give_log);\n  return give_log ? pr - Math.log(scale) : pr / scale;\n}\n\n/**\n * The chi-squared density function.\n * @param x\n * @param df\n * @param give_log\n * @return {number|*}\n */\nexport function dchisq(x, df, give_log) {\n  return dgamma(x, df / 2.0, 2.0, give_log);\n}\n\n/**\n * The chi-squared cumulative distribution function.\n *\n * Supports the non-centrality parameter ncp.\n *\n * @param x {number} Value.\n * @param df {number} Degrees of freedom.\n * @param ncp {number} Non-centrality parameter.\n * @param lower_tail {boolean} Return cumulative probability from lower tail?\n * @param log_p {boolean} Return log probability\n */\nexport function pchisq(x, df, ncp = 0, lower_tail = true, log_p = false) {\n  x = parseNumeric(x);\n  df = parseNumeric(df);\n  ncp = parseNumeric(ncp);\n  lower_tail = parseBoolean(lower_tail);\n  log_p = parseBoolean(log_p);\n\n  if (ncp === 0) {\n    return pgamma(x, df / 2.0, 2.0, lower_tail, log_p);\n  } else {\n    return pnchisq(x, df, ncp, lower_tail, log_p);\n  }\n}\n\nfunction pnchisq(q, df, ncp = 0, lower_tail = true, log_p = false) {\n  if (df < 0 || ncp < 0) {\n    return NaN;\n  }\n\n  let ans = pnchisq_raw(q, df, ncp, 1e-12, 8 * DBL_EPSILON, 1000000, lower_tail, log_p);\n  if (ncp >= 80) {\n    if (lower_tail) {\n      ans = fmin2(ans, R_D__1(log_p));\n    } else {\n      if (ans < (log_p ? (-10.0 * M_LN10) : 1e-10)) {\n        ML_ERROR(ME_PRECISION, 'pnchisq');\n      }\n      if (!log_p) {\n        ans = fmax2(ans, 0.0);\n      }\n    }\n  }\n\n  if (!log_p || ans < -1e-8) {\n    return ans;\n  } else {\n    ans = pnchisq_raw(q, df, ncp, 1e-12, 8 * DBL_EPSILON, 1000000, !lower_tail, false);\n    return Math.log1p(-ans);\n  }\n}\n\nfunction pnchisq_raw(x, f, theta, errmax, reltol, itrmax, lower_tail, log_p) {\n  let lam, x2, f2, term, bound, f_x_2n, f_2n;\n  let l_lam = -1.0;\n  let l_x = -1.0;\n  let n;\n  let lamSml, tSml, is_r, is_b, is_it;\n  let ans, u, v, t, lt, lu = -1;\n\n  if (x <= 0.0) {\n    if (x === 0.0 && f === 0.0) {\n      const _L = -0.5 * theta;\n      return lower_tail ? R_D_exp(_L, log_p) : (log_p ? R_Log1_Exp(_L) : -expm1(_L));\n    }\n    return R_DT_0(lower_tail, log_p);\n  }\n\n  if (!isFinite(x)) {\n    return R_DT_1(lower_tail, log_p);\n  }\n\n  if (theta < 80) {\n    let ans;\n    if (lower_tail && f > 0.0 && Math.log(x) < M_LN2 + 2 / f * (lgammafn(f / 2.0 + 1) + _dbl_min_exp)) {\n      let lambda = 0.5 * theta;\n      let sum, sum2, pr = -lambda;\n      sum = sum2 = -Infinity;\n      for (let i = 0; i < 110; pr === Math.log(lambda) - Math.log(++i)) {\n        sum2 = logspace_add(sum2, pr);\n        sum = logspace_add(sum, pr + pchisq(x, f + 2 * i, 0, lower_tail, true));\n        if (sum2 >= -1e-15) {\n          break;\n        }\n      }\n      ans = sum - sum2;\n      return log_p ? ans : Math.exp(ans);\n    } else {\n      let lambda = 0.5 * theta;\n      let sum = 0, sum2 = 0, pr = Math.exp(-lambda);\n      /* we need to renormalize here: the result could be very close to 1 */\n      for (let i = 0; i < 110; pr *= lambda / ++i) {\n        sum2 += pr;\n        sum += pr * pchisq(x, f + 2 * i, 0, lower_tail, false);\n        if (sum2 >= 1 - 1e-15) {\n          break;\n        }\n      }\n      ans = sum / sum2;\n      return log_p ? Math.log(ans) : ans;\n    }\n  }\n\n  lam = .5 * theta;\n  lamSml = (-lam < _dbl_min_exp);\n  if (lamSml) {\n    u = 0;\n    lu = -lam;/* == ln(u) */\n    l_lam = Math.log(lam);\n  } else {\n    u = Math.exp(-lam);\n  }\n\n  v = u;\n  x2 = .5 * x;\n  f2 = .5 * f;\n  f_x_2n = f - x;\n\n  if (f2 * DBL_EPSILON > 0.125 && Math.abs(t = x2 - f2) < Math.sqrt(DBL_EPSILON) * f2) {\n    lt = (1 - t) * (2 - t / (f2 + 1)) - M_LN_SQRT_2PI - 0.5 * Math.log(f2 + 1);\n  } else {\n    lt = f2 * Math.log(x2) - x2 - lgammafn(f2 + 1);\n  }\n\n  tSml = (lt < _dbl_min_exp);\n  if (tSml) {\n    if (x > f + theta + 5 * Math.sqrt(2 * (f + 2 * theta))) {\n      return R_DT_1(lower_tail, log_p);\n    }\n    l_x = Math.log(x);\n    ans = term = 0.;\n    t = 0;\n  } else {\n    t = Math.exp(lt);\n    ans = term = v * t;\n  }\n\n  for (n = 1, f_2n = f + 2., f_x_2n += 2.;; n++, f_2n += 2, f_x_2n += 2) {\n    if (f_x_2n > 0) {\n      bound = (t * x / f_x_2n);\n      is_b = bound <= errmax;\n      is_r = term <= reltol * ans;\n      is_it = n > itrmax;\n      if (is_b && is_r || is_it) {\n        break;\n      }\n    }\n\n    if (lamSml) {\n      lu += l_lam - Math.log(n); /* u = u* lam / n */\n      if (lu >= _dbl_min_exp) {\n        /* no underflow anymore ==> change regime */\n        v = u = Math.exp(lu); /* the first non-0 'u' */\n        lamSml = false;\n      }\n    } else {\n      u *= lam / n;\n      v += u;\n    }\n    if (tSml) {\n      lt += l_x - Math.log(f_2n);/* t <- t * (x / f2n) */\n      if (lt >= _dbl_min_exp) {\n        /* no underflow anymore ==> change regime */\n        t = Math.exp(lt); /* the first non-0 't' */\n        tSml = false;\n      }\n    } else {\n      t *= x / f_2n;\n    }\n    if (!lamSml && !tSml) {\n      term = v * t;\n      ans += term;\n    }\n  }\n\n  if (is_it) {\n    console.error(`pnchisq(x=${x},...) not converged in ${itrmax}`);\n  }\n\n  let dans = ans;\n  return R_DT_val(dans, lower_tail, log_p);\n}\n\nexport function qnorm(p, mu, sigma, lower_tail, log_p) {\n  let p_, q, r, val;\n  if (isNaN(p) || isNaN(mu) || isNaN(sigma)) {\n    return p + mu + sigma;\n  }\n\n  try {\n    R_Q_P01_boundaries(p, lower_tail, log_p, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY);\n  } catch (e) {\n    return e;\n  }\n\n  if (sigma < 0) {\n    return ML_ERR_return_NAN();\n  }\n  if (sigma === 0) {\n    return mu;\n  }\n\n  p_ = R_DT_qIv(p, lower_tail, log_p);\n  q = p_ - 0.5;\n\n  if (Math.abs(q) <= .425) {/* 0.075 <= p <= 0.925 */\n    r = .180625 - q * q;\n    val =\n      q * (((((((r * 2509.0809287301226727 +\n      33430.575583588128105) * r + 67265.770927008700853) * r +\n      45921.953931549871457) * r + 13731.693765509461125) * r +\n      1971.5909503065514427) * r + 133.14166789178437745) * r +\n      3.387132872796366608)\n      / (((((((r * 5226.495278852854561 +\n      28729.085735721942674) * r + 39307.89580009271061) * r +\n      21213.794301586595867) * r + 5394.1960214247511077) * r +\n      687.1870074920579083) * r + 42.313330701600911252) * r + 1.);\n  } else { /* closer than 0.075 from {0,1} boundary */\n    /* r = min(p, 1-p) < 0.075 */\n    if (q > 0) {\n      r = R_DT_CIv(p, lower_tail, log_p);/* 1-p */\n    } else {\n      r = p_;/* = R_DT_Iv(p) ^=  p */\n    }\n\n    r = Math.sqrt(-((log_p && ((lower_tail && q <= 0) || (!lower_tail && q > 0))) ? p : /* else */ Math.log(r)));\n    /* r = sqrt(-log(r))  <==>  min(p, 1-p) = exp( - r^2 ) */\n\n    if (r <= 5.) { /* <==> min(p,1-p) >= exp(-25) ~= 1.3888e-11 */\n      r += -1.6;\n      val = (((((((r * 7.7454501427834140764e-4 +\n        .0227238449892691845833) * r + .24178072517745061177) *\n        r + 1.27045825245236838258) * r +\n        3.64784832476320460504) * r + 5.7694972214606914055) *\n        r + 4.6303378461565452959) * r +\n        1.42343711074968357734)\n        / (((((((r *\n          1.05075007164441684324e-9 + 5.475938084995344946e-4) *\n          r + .0151986665636164571966) * r +\n          .14810397642748007459) * r + .68976733498510000455) *\n          r + 1.6763848301838038494) * r +\n          2.05319162663775882187) * r + 1.);\n    } else { /* very close to  0 or 1 */\n      r += -5.;\n      val = (((((((r * 2.01033439929228813265e-7 +\n        2.71155556874348757815e-5) * r +\n        .0012426609473880784386) * r + .026532189526576123093) *\n        r + .29656057182850489123) * r +\n        1.7848265399172913358) * r + 5.4637849111641143699) *\n        r + 6.6579046435011037772)\n        / (((((((r *\n          2.04426310338993978564e-15 + 1.4215117583164458887e-7) *\n          r + 1.8463183175100546818e-5) * r +\n          7.868691311456132591e-4) * r + .0148753612908506148525)\n          * r + .13692988092273580531) * r +\n          .59983220655588793769) * r + 1.);\n    }\n\n    if (q < 0.0) {\n      val = -val;\n    }\n    /* return (q >= 0.)? r : -r ;*/\n  }\n  return mu + sigma * val;\n}\n\nfunction qchisq_appr(p, nu, g, lower_tail, log_p, tol) {\n  const C7 = 4.67;\n  const C8 = 6.66;\n  const C9 = 6.73;\n  const C10 = 13.32;\n\n  let alpha, a, c, ch, p1;\n  let p2, q, t, x;\n\n  if (isNaN(p) || isNaN(nu)) {\n    return p + nu;\n  }\n\n  try {\n    R_Q_P01_check(p, log_p);\n  } catch (e) {\n    return e;\n  }\n  if (nu <= 0) {\n    return ML_ERR_return_NAN();\n  }\n\n  alpha = 0.5 * nu;\n  c = alpha - 1;\n\n  if (nu < (-1.24) * (p1 = R_DT_log(p))) {\n    let lgam1pa = (alpha < 0.5) ? lgamma1p(alpha) : (Math.log(alpha) + g);\n    ch = Math.exp((lgam1pa + p1) / alpha + M_LN2);\n  } else if (nu > 0.32) {\n    x = qnorm(p, 0, 1, lower_tail, log_p);\n    p1 = 2.0 / (9 * nu);\n    ch = nu * Math.pow(x * Math.sqrt(p1) + 1 - p1, 3);\n\n    if (ch > 2.2 * nu + 6) {\n      ch = -2 * (R_DT_Clog(p, lower_tail) - c * Math.log(0.5 * ch) + g);\n    }\n  } else {\n    ch = 0.4;\n    a = R_DT_Clog(p, lower_tail) + g + c * M_LN2;\n    do {\n      q = ch;\n      p1 = 1.0 / (1 + ch * (C7 + ch));\n      p2 = ch * (C9 + ch * (C8 + ch));\n      t = -0.5 + (C7 + 2 * ch) * p1 - (C9 + ch * (C10 + 3 * ch)) / p2;\n      ch -= (1 - Math.exp(a + 0.5 * ch) * p2 * p1) / t;\n    }\n    while (Math.abs(q - ch) > tol * Math.abs(ch));\n  }\n\n  return ch;\n}\n\n/**\n * Inverse CDF / quantile function of gamma distribution.\n * @param p\n * @param alpha\n * @param scale\n * @param lower_tail\n * @param log_p\n * @return {*|number|number|*}\n */\nexport function qgamma(p, alpha, scale, lower_tail, log_p) {\n  const EPS1 = 1e-2;\n  const EPS2 = 5e-7;\n  const EPS_N = 1e-15;\n  //const LN_EPS = -36.043653389117156;\n  const MAXIT = 1000;\n  const pMIN = 1e-100;\n  const pMAX = 1 - 1e-14;\n  const i420 = 1.0 / 420.0;\n  const i2520 = 1.0 / 2520.0;\n  const i5040 = 1.0 / 5040.0;\n\n  let p_, a, b, c, g, ch, ch0, p1;\n  let p2, q, s1, s2, s3, s4, s5, s6, t, x;\n  let max_it_Newton = 1;\n\n  if (isNaN(p) || isNaN(alpha) || isNaN(scale)) {\n    return p + alpha + scale;\n  }\n  try {\n    R_Q_P01_boundaries(p, lower_tail, log_p, 0.0, Number.POSITIVE_INFINITY);\n  } catch (e) {\n    return e;\n  }\n\n  if (alpha < 0 || scale <= 0) {\n    return ML_ERR_return_NAN();\n  }\n  if (alpha === 0) {\n    return 0.0;\n  }\n  if (alpha < 1e-10) {\n    max_it_Newton = 7;\n  }\n\n  p_ = R_DT_qIv(p, lower_tail, log_p);\n  g = lgammafn(alpha);\n\n  // Closure to mimic the ugly 'goto END' everywhere\n  function end() {\n    x = 0.5 * scale * ch;\n    if (max_it_Newton) {\n      if (!log_p) {\n        p = Math.log(p);\n        log_p = true;\n      }\n      if (x === 0) {\n        const _1_p = 1.0 + 1e-7;\n        const _1_m = 1.0 - 1e-7;\n        x = DBL_MIN;\n        p_ = pgamma(x, alpha, scale, lower_tail, log_p);\n        if ((lower_tail && p_ > p * _1_p) || (!lower_tail && p_ < p * _1_m)) {\n          return 0.0;\n        }\n      } else {\n        p_ = pgamma(x, alpha, scale, lower_tail, log_p);\n      }\n\n      if (p_ === Number.NEGATIVE_INFINITY) {\n        return 0;\n      }\n    }\n    for (let i = 1; i <= max_it_Newton; i++) {\n      p1 = p_ - p;\n      if (Math.abs(p1) < Math.abs(EPS_N * p)) {\n        break;\n      }\n\n      if ((g = dgamma(x, alpha, scale, log_p)) === R_D__0(log_p)) {\n        break;\n      }\n\n      t = log_p ? p1 * Math.exp(p_ - g) : p1 / g;\n      t = lower_tail ? x - t : x + t;\n      p_ = pgamma(t, alpha, scale, lower_tail, log_p);\n      if (Math.abs(p_ - p) > Math.abs(p1) || (i > 1 && Math.abs(p_ - p) === Math.abs(p1))) {\n        break;\n      }\n\n      /*\n      // This code appears to be never triggered in R, or rather I'm unable to find where\n      // Harmful_notably_if_max_it_Newton_is_1 is ever defined\n      if (t > 1.1*x) { t = 1.1 * x; }\n      else if (t < 0.9*x) { t = 0.9 * x; }\n       */\n\n      x = t;\n    }\n    return x;\n  }\n\n  ch = qchisq_appr(p, 2 * alpha, g, lower_tail, log_p, EPS1);\n  if (!isFinite(ch)) {\n    max_it_Newton = 0;\n    return end();\n  }\n  if (ch < EPS2) {\n    max_it_Newton = 20;\n    return end();\n  }\n  if (p_ > pMAX || p_ < pMIN) {\n    max_it_Newton = 20;\n    return end();\n  }\n\n  c = alpha - 1;\n  s6 = (120 + c * (346 + 127 * c)) * i5040;\n  ch0 = ch;\n  for (let i = 1; i <= MAXIT; i++) {\n    q = ch;\n    p1 = 0.5 * ch;\n    p2 = p_ - pgamma_raw(p1, alpha, true, false);\n    if (!isFinite(p2) || ch <= 0) {\n      ch = ch0;\n      max_it_Newton = 27;\n      return end();\n    }\n\n    t = p2 * Math.exp(alpha * M_LN2 + g + p1 - c * Math.log(ch));\n    b = t / ch;\n    a = 0.5 * t - b * c;\n    s1 = (210 + a * (140 + a * (105 + a * (84 + a * (70 + 60 * a))))) * i420;\n    s2 = (420 + a * (735 + a * (966 + a * (1141 + 1278 * a)))) * i2520;\n    s3 = (210 + a * (462 + a * (707 + 932 * a))) * i2520;\n    s4 = (252 + a * (672 + 1182 * a) + c * (294 + a * (889 + 1740 * a))) * i5040;\n    s5 = (84 + 2264 * a + c * (1175 + 606 * a)) * i2520;\n    ch += t * (1 + 0.5 * t * s1 - b * c * (s1 - b * (s2 - b * (s3 - b * (s4 - b * (s5 - b * s6))))));\n\n    if (Math.abs(q - ch) < EPS2 * ch) {\n      return end();\n    }\n    if (Math.abs(q - ch) > 0.1 * ch) {\n      if (ch < q) {\n        ch = 0.9 * q;\n      } else {\n        ch = 1.1 * q;\n      }\n    }\n  }\n\n  return end();\n}\n\n/**\n * Inverse CDF / quantile function for chi-squared distribution.\n * @param p\n * @param df\n * @param lower_tail\n * @param log_p\n * @return {*|number}\n */\nexport function qchisq(p, df, ncp = 0, lower_tail = true, log_p = false) {\n  if (ncp !== 0) {\n    throw 'Non-central chi-squared not yet supported';\n  }\n  return qgamma(p, 0.5 * df, 2.0, lower_tail, log_p);\n}\n\nfunction pnorm_both(x, i_tail, log_p) {\n  var cum, ccum;\n  var xden, xnum, temp, del, eps, xsq, y;\n  var i, lower, upper;\n  var a = PNORM_A, b = PNORM_B, c = PNORM_C,\n    d = PNORM_D, p = PNORM_P, q = PNORM_Q;\n\n  if (isNaN(x)) {\n    return { cum: NaN, ccum: NaN };\n  }\n\n  eps = DBL_EPSILON * 0.5;\n  lower = i_tail !== 1;\n  upper = i_tail !== 0;\n\n  y = Math.abs(x);\n  if (y <= 0.67448975) {\n    if (y > eps) {\n      xsq = x * x;\n      xnum = a[4] * xsq;\n      xden = xsq;\n      for (i = 0; i < 3; ++i) {\n        xnum = (xnum + a[i]) * xsq;\n        xden = (xden + b[i]) * xsq;\n      }\n    } else {\n      xnum = xden = 0.0;\n    }\n    temp = x * (xnum + a[3]) / (xden + b[3]);\n    if (lower) {\n      cum = 0.5 + temp;\n    }\n    if (upper) {\n      ccum = 0.5 - temp;\n    }\n    if (log_p) {\n      if (lower) {\n        cum = Math.log(cum);\n      }\n      if (upper) {\n        ccum = Math.log(ccum);\n      }\n    }\n  } else if (y <= M_SQRT_32) {\n    xnum = c[8] * y;\n    xden = y;\n    for (i = 0; i < 7; ++i) {\n      xnum = (xnum + c[i]) * y;\n      xden = (xden + d[i]) * y;\n    }\n    temp = (xnum + c[7]) / (xden + d[7]);\n    //do del (x)\n    xsq = Math.trunc(y * 16) / 16;\n    del = (y - xsq) * (y + xsq);\n    if (log_p) {\n      cum = (-xsq * xsq * 0.5) + (-del * 0.5) + Math.log(temp);\n      if ((lower && x > 0.0) || (upper && x <= 0.0)) {\n        ccum = Math.log1p(-Math.exp(-xsq * xsq * 0.5) *\n          Math.exp(-del * 0.5) * temp);\n      }\n    } else {\n      cum = Math.exp(-xsq * xsq * 0.5) *\n        Math.exp(-del * 0.5) * temp;\n      ccum = 1.0 - cum;\n    }\n    //swap tail\n    if (x > 0.) {\n      temp = cum;\n      if (lower) {\n        cum = ccum;\n      }\n      ccum = temp;\n    }\n  } else if ((log_p && y < 1e170) ||\n    (lower && -37.5193 < x && x < 8.2924) ||\n    (upper && -8.2924 && x < 37.5193)) {\n\n    xsq = 1.0 / (x * x);\n    xnum = p[5] * xsq;\n    xden = xsq;\n    for (i = 0; i < 4; ++i) {\n      xnum = (xnum + p[i]) * xsq;\n      xden = (xden + q[i]) * xsq;\n    }\n    temp = xsq * (xnum + p[4]) / (xden + q[4]);\n    temp = (M_1_SQRT_2PI - temp) / y;\n    //do del(x)\n    xsq = Math.trunc(x * 16) / 16;\n    del = (x - xsq) * (x + xsq);\n    if (log_p) {\n      cum = (-xsq * xsq * 0.5) + (-del * 0.5) + Math.log(temp);\n      if ((lower && x > 0.0) || (upper && x <= 0.0)) {\n        ccum = Math.log1p(-Math.exp(-xsq * xsq * 0.5) *\n          Math.exp(-del * 0.5) * temp);\n      }\n    } else {\n      cum = Math.exp(-xsq * xsq * 0.5) *\n        Math.exp(-del * 0.5) * temp;\n      ccum = 1.0 - cum;\n    }\n    //swap tail\n    if (x > 0.) {\n      temp = cum;\n      if (lower) {\n        cum = ccum;\n      }\n      ccum = temp;\n    }\n  } else {\n    if (x > 0) {\n      cum = R_D(1, log_p);\n      ccum = R_D(0, log_p);\n    } else {\n      cum = R_D(0, log_p);\n      ccum = R_D(1, log_p);\n    }\n\n  }\n\n  //TODO left off here\n  return { cum: cum, ccum: ccum };\n}\n\nfunction pnorm(x, mu, sigma, lower_tail, log_p) {\n  var p;\n  if (isNaN(x) || isNaN(mu) || isNaN(sigma)) {\n    return NaN;\n  }\n  if (!Number.isFinite(x) && mu === x) {\n    return NaN;\n  }\n  if (sigma <= 0) {\n    if (sigma < 0) {\n      return NaN;\n    }\n    return (x < mu) ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);\n  }\n  p = (x - mu) / sigma;\n  if (!Number.isFinite(p)) {\n    return (x < mu) ? R_DT_0(lower_tail, log_p) : R_DT_1(lower_tail, log_p);\n  }\n  x = p;\n\n  var r = pnorm_both(x, (lower_tail) ? 0 : 1, log_p);\n  return (lower_tail) ? r.cum : r.ccum;\n}\n\n/**\n * The normal cumulative distribution function.\n *\n * @function pnorm\n * @param x {number} Value.\n * @param mu {number} Mean of the normal distribution.\n * @param sigma {number} Standard deviation of the normal distribution.\n * @param lower_tail {boolean} Should the cumulative probability returned be calculated as the lower tail?\n * @param give_log {boolean} Return log probability\n */\nfunction _pnorm(x, mu, sigma, lower_tail, give_log) {\n  x = parseNumeric(x);\n  mu = parseNumeric(mu, 0);\n  sigma = parseNumeric(sigma, 1);\n  lower_tail = parseBoolean(lower_tail, true);\n  give_log = parseBoolean(give_log, false);\n  return pnorm(x, mu, sigma, lower_tail, give_log);\n}\n\nexport { _pnorm as pnorm };\n\nfunction dnorm(x, mu, sigma, give_log) {\n  if (isNaN(x) || isNaN(mu) || isNaN(sigma)) {\n    return x + mu + sigma;\n  }\n  if (!Number.isFinite(sigma)) {\n    return R_D(0, give_log);\n  }\n  if (!Number.isFinite(x) && mu === x) {\n    return NaN;\n  }\n  if (sigma <= 0) {\n    if (sigma < 0) {\n      return NaN;\n    }\n    return (x === mu) ? Number.POSITIVE_INFINITY : R_D(0, give_log);\n  }\n  x = (x - mu) / sigma;\n  if (!Number.isFinite(x)) {\n    return R_D(0, give_log);\n  }\n  x = Math.abs(x);\n  if (x >= 2 * Math.sqrt(DBL_MAX)) {\n    return R_D(0, give_log);\n  }\n  if (give_log) {\n    return -(M_LN_SQRT_2PI + 0.5 * x * x + Math.log(sigma));\n  }\n  //fast version\n  return M_1_SQRT_2PI * Math.exp(-0.5 * x * x) / sigma;\n}\n\nfunction lbeta(a, b) {\n  let corr, p, q;\n  p = q = a;\n  if (b < p) {\n    p = b;\n  }\n  if (b > q) {\n    q = b;\n  }\n\n  if (p < 0) {\n    return ML_ERR_return_NAN();\n  } else if (p === 0) {\n    return Number.POSITIVE_INFINITY;\n  } else if (!isFinite(q)) {\n    return Number.NEGATIVE_INFINITY;\n  }\n\n  if (p >= 10) {\n    corr = lgammacor(p) + lgammacor(q) - lgammacor(p + q);\n    return Math.log(q) * -0.5 + M_LN_SQRT_2PI + corr + (p - 0.5) * Math.log(p / (p + q)) + q * Math.log1p(-p / (p + q));\n  } else if (q >= 10) {\n    corr = lgammacor(q) - lgammacor(p + q);\n    return lgammafn(p) + corr + p - p * Math.log(p + q) + (q - 0.5) * Math.log1p(-p / (p + q));\n  } else {\n    if (p < 1e-306) {\n      return lgammafn(p) + (lgammafn(q) - lgammafn(p + q));\n    } else {\n      return Math.log(gammafn(p) * (gammafn(q) / gammafn(p + q)));\n    }\n  }\n}\n\nfunction dbinom_raw(x, n, p, q, give_log) {\n  let lf, lc;\n\n  if (p === 0) {\n    return (x === 0 ? R_D__1(give_log) : R_D__0(give_log));\n  }\n  if (q === 0) {\n    return (x === n ? R_D__1(give_log) : R_D__0(give_log));\n  }\n\n  if (x === 0) {\n    if (n === 0) {\n      return R_D__1(give_log);\n    }\n    lc = p < 0.1 ? -bd0(n, n * q) - n * p : n * Math.log(q);\n    return R_D_exp(lc, give_log);\n  }\n  if (x === n) {\n    lc = q < 0.1 ? -bd0(n, n * p) - n * q : n * Math.log(p);\n    return R_D_exp(lc, give_log);\n  }\n  if (x < 0 || x > n) {\n    return R_D__0(give_log);\n  }\n\n  lc = stirlerr(n) - stirlerr(x) - stirlerr(n - x) - bd0(x, n * p) - bd0(n - x, n * q);\n  lf = M_LN_2PI + Math.log(x) + Math.log1p(-x / n);\n  return R_D_exp(lc - 0.5 * lf, give_log);\n}\n\nfunction dbeta(x, a, b, give_log) {\n  if (a < 0 || b < 0) {\n    ML_ERR_return_NAN();\n  }\n  if (x < 0 || x > 1) {\n    return R_D__0(give_log);\n  }\n\n  if (a === 0 || b === 0 || !isFinite(a) || !isFinite(b)) {\n    if (a === 0 && b === 0) {\n      if (x === 0 || x === 1) {\n        return Number.POSITIVE_INFINITY;\n      } else {\n        return R_D__0(give_log);\n      }\n    }\n    if (a === 0 || a / b === 0) {\n      if (x === 0) {\n        return Number.POSITIVE_INFINITY;\n      } else {\n        return R_D__0(give_log);\n      }\n    }\n    if (b === 0 || b / a === 0) {\n      if (x === 1) {\n        return Number.POSITIVE_INFINITY;\n      } else {\n        return R_D__0(give_log);\n      }\n    }\n    if (x === 0.5) {\n      return Number.POSITIVE_INFINITY;\n    } else {\n      return R_D__0(give_log);\n    }\n  }\n\n  if (x === 0) {\n    if (a > 1) {\n      return R_D__0(give_log);\n    }\n    if (a < 1) {\n      return Number.POSITIVE_INFINITY;\n    }\n    return R_D_val(b, give_log);\n  }\n  if (x === 1) {\n    if (b > 1) {\n      return R_D__0(give_log);\n    }\n    if (b < 1) {\n      return Number.POSITIVE_INFINITY;\n    }\n    return R_D_val(a, give_log);\n  }\n\n  let lval;\n  if (a <= 2 || b <= 2) {\n    lval = (a - 1) * Math.log(x) + (b - 1) * Math.log1p(-x) - lbeta(a, b);\n  } else {\n    lval = Math.log(a + b - 1) + dbinom_raw(a - 1, a + b - 2, x, 1 - x, true);\n  }\n\n  return R_D_exp(lval, give_log);\n}\n\n/**\n * The beta density function.\n *\n * The non-central beta distribution parameter is not implemented currently.\n *\n * @function dbeta\n * @param x {number} Value.\n * @param shape1 {number} The first shape parameter, or \"alpha.\"\n * @param shape2 {number} The second shape parameter, or \"beta.\"\n * @param log {boolean} Should the result be returned in log scale.\n * @return {number} Probability density evaluated at x.\n */\nfunction _dbeta(x, shape1, shape2, log) {\n  x = parseNumeric(x);\n  shape1 = parseNumeric(shape1);\n  shape2 = parseNumeric(shape2);\n  //ncp = parseNumeric(ncp, 0);\n  log = parseBoolean(log, false);\n  return dbeta(x, shape1, shape2, log);\n}\n\nexport { _dbeta as dbeta };\n\nfunction parseNumeric(x, default_value) {\n  if (typeof(x) === 'undefined') {\n    return default_value;\n  }\n  return +x;\n}\n\nfunction parseBoolean(x, default_value) {\n  if (typeof(x) === 'undefined') {\n    return default_value;\n  }\n  return !!((x || 'false') !== 'false');\n}\n\n// Will slowly roll this into export statements as-needed\n// const rollup = {\n//   dnorm: function (x, mu, sigma, give_log) {\n//     x = +x;\n//     mu = parseNumeric(mu, 0);\n//     sigma = parseNumeric(sigma, 1);\n//     give_log = parseBoolean(give_log, false);\n//     return dnorm(x, mu, sigma, give_log);\n//   },\n//   pnorm: function (x, mu, sigma, lower_tail, give_log) {\n//     x = parseNumeric(x);\n//     mu = parseNumeric(mu, 0);\n//     sigma = parseNumeric(sigma, 1);\n//     lower_tail = parseBoolean(lower_tail, true);\n//     give_log = parseBoolean(give_log, false);\n//     return pnorm(x, mu, sigma, lower_tail, give_log);\n//   },\n//   pchisq: function (x, df, ncp, lower_tail, give_log) {\n//     x = parseNumeric(x);\n//     df = parseNumeric(df);\n//     ncp = parseNumeric(ncp,0);\n//     lower_tail = parseBoolean(lower_tail, true);\n//     give_log = parseBoolean(give_log, false);\n//     return pchisq(x, df, ncp, lower_tail, give_log);\n//   },\n//   pgamma: function (q, shape, scale, lower_tail, give_log) {\n//     q = parseNumeric(q);\n//     shape = parseNumeric(shape);\n//     scale = parseNumeric(scale, 1);\n//     lower_tail = parseBoolean(lower_tail, true);\n//     give_log = parseBoolean(give_log, false);\n//     return pgamma(q, shape, scale, lower_tail, give_log);\n//   },\n//   dpois: function (x, lambda, log) {\n//     x = parseNumeric(x);\n//     lambda = parseNumeric(lambda);\n//     log = parseBoolean(log, false);\n//     return dpois(x, lambda, log);\n//   }\n// };\n","/**\n * Calculate group-based tests from score statistics.\n *\n * @module stats\n * @license MIT\n */\nimport { cholesky } from './linalg.js';\nimport mvtdstpack from './mvtdstpack.js';\nimport numeric from 'numeric';\nimport * as qfc from './qfc.js';\nimport { ExpSinh } from './quadrature.js';\nimport { pchisq, dbeta, pnorm, qchisq, dchisq } from './rstats.js';\n\n\n// Functions using WASM will be defined inside a single promise- sort of a meta-module\n//   Because the webassembly code is loaded asynchronously, anything using any module method will need to be\n//   resolved asynchronously as well.\nconst MVT_WASM_HELPERS = new Promise((resolve, reject) => {\n  // The emscripten \"module\" doesn't return a true promise, so it can't be chained in the traditional sense.\n  // This syntax is a hack that allows us to wrap the wasm module with our helper functions and access those helpers.\n  try {\n    mvtdstpack().then((module) => {\n      function makeDoubleVec(size) {\n        const v = new module.DoubleVec();\n        v.resize(size, NaN);\n        return v;\n      }\n\n      function makeIntVec(size) {\n        const v = new module.IntVec();\n        v.resize(size, NaN);\n        return v;\n      }\n\n      function copyToDoubleVec(arr, constructor = module.DoubleVec) {\n        const v = new constructor();\n        for (let i = 0; i < arr.length; i++) {\n          v.push_back(arr[i]);\n        }\n        return v;\n      }\n\n      function pmvnorm(lower, upper, mean, sigma) {\n        const n = sigma.length;\n        const infin = makeIntVec(n);\n        const delta = makeDoubleVec(n);\n        const corrF = makeDoubleVec(n * (n - 1) / 2);\n        let corr = cov2cor(sigma);\n\n        // Populate corrF\n        for (let j = 0; j < n; j++) {\n          for (let i = j + 1; i < n; i++) {\n            let k = j + 1 + ((i - 1) * i) / 2 - 1;\n            corrF.set(k, corr[i][j]);\n          }\n        }\n\n        // Calculate limits\n        for (let i = 0; i < n; i++) {\n          delta.set(i, 0.0);\n\n          if (lower[i] !== Infinity && lower[i] !== -Infinity) {\n            lower[i] = (lower[i] - mean[i]) / Math.sqrt(sigma[i][i]);\n          }\n\n          if (upper[i] !== Infinity && upper[i] !== -Infinity) {\n            upper[i] = (upper[i] - mean[i]) / Math.sqrt(sigma[i][i]);\n          }\n\n          if (lower[i] === -Infinity) {\n            infin.set(i, 0);\n          }\n          if (upper[i] === Infinity) {\n            infin.set(i, 1);\n          }\n          if (lower[i] === -Infinity && upper[i] === Infinity) {\n            infin.set(i, -1);\n          }\n          if (lower[i] !== -Infinity && upper[i] !== Infinity) {\n            infin.set(i, 2);\n          }\n          if (lower[i] === -Infinity) {\n            lower[i] = 0;\n          }\n          if (upper[i] === Infinity) {\n            upper[i] = 0;\n          }\n        }\n\n        let inform = 0;\n        let value = 0.0;\n        let error = 0.0;\n        const df = 0;\n        const maxpts = 50000;\n        const abseps = 0.001;\n        const releps = 0.0;\n\n        let sum = 0;\n        for (let i = 0; i < n; i++) {\n          sum += infin.get(i);\n        }\n\n        if (sum === -n) {\n          inform = 0;\n          value = 1.0;\n        } else {\n          ({ error, inform, value } = module.mvtdst(n, df, copyToDoubleVec(lower), copyToDoubleVec(upper), infin, corrF, delta, maxpts, abseps, releps));\n        }\n\n        if (inform === 3) {\n          // Need to make correlation matrix positive definite\n          let trial = 0;\n          while (inform > 1 && trial < 100) {\n            let eig = numeric.eigh(corr, 100000);\n\n            let lambdas = eig.lambda.x;\n            for (let i = 0; i < n; i++) {\n              if (lambdas[i] < 0) {\n                lambdas[i] = 0.0;\n              }\n            }\n\n            let D = numeric.diag(lambdas);\n            let V = eig.E.x;\n            corr = numeric.dot(numeric.dot(V, D), numeric.transpose(V));\n            let corr_diag = Array(n);\n            for (let i = 0; i < n; i++) {\n              corr_diag[i] = corr[i][i];\n            }\n            let norm = numeric.dot(numeric.transpose([corr_diag]), [corr_diag]);\n\n            for (let j = 0; j < n; j++) {\n              for (let i = j + 1; i < n; i++) {\n                let k = j + 1 + ((i - 1) * i) / 2 - 1;\n                corrF.set(k, corr[i][j] / Math.sqrt(norm[i][j]));\n              }\n            }\n\n            ({ error, inform, value } = module.mvtdst(n, df, copyToDoubleVec(lower), copyToDoubleVec(upper), infin, corrF, delta, maxpts, abseps, releps));\n          }\n\n          if (inform > 1) {\n            value = -1.0;\n          }\n        }\n\n        return {\n          error: error,\n          inform: inform,\n          value: value,\n        };\n      }\n\n      const helper_module = {\n        makeDoubleVec,\n        makeIntVec,\n        copyToDoubleVec,\n        pmvnorm,\n      };\n\n      resolve(helper_module);\n    });\n  } catch (error) {\n    reject(error);\n  }\n});\n\nfunction emptyRowMatrix(nrows, ncols) {\n  let m = new Array(nrows);\n  for (let i = 0; i < nrows; i++) {\n    m[i] = new Array(ncols).fill(NaN);\n  }\n  return m;\n}\n\nfunction cov2cor(sigma) {\n  const corr = emptyRowMatrix(sigma.length, sigma[0].length);\n  for (let i = 0; i < sigma.length; i++) {\n    for (let j = i; j < sigma[0].length; j++) {\n      if (i === j) {\n        corr[i][j] = 1.0;\n      } else {\n        let v = sigma[i][j] / (Math.sqrt(sigma[i][i]) * Math.sqrt(sigma[j][j]));\n        corr[i][j] = v;\n        corr[j][i] = v;\n      }\n    }\n  }\n  return corr;\n}\n\nfunction get_conditional_dist(scores, cov, comb) {\n  const result = new Array(2).fill(0.0);\n  const mu2 = [];\n  const dim = comb.length - 1;\n  const sub_cov = emptyRowMatrix(dim, dim);\n\n  for (let i = 0; i < dim; i++) {\n    let idx1 = comb[i + 1];\n    mu2[i] = scores[idx1];\n    for (let j = 0; j < dim; j++) {\n      let idx2 = comb[j + 1];\n      sub_cov[i][j] = cov[idx1][idx2];\n    }\n  }\n\n  const inv = numeric.inv(sub_cov);\n  const sigma12 = new Array(dim).fill(NaN);\n  for (let i = 0; i < dim; i++) {\n    let idx1 = comb[0];\n    let idx2 = comb[i + 1];\n    sigma12[i] = cov[idx1][idx2];\n  }\n\n  const tmp = new Array(dim).fill(0.0);\n  for (let i = 0; i < dim; i++) {\n    tmp[i] += numeric.dot(sigma12, inv[i]);\n  }\n\n  result[0] = numeric.dot(tmp, mu2);\n  result[1] = 1.0 - numeric.dot(tmp, sigma12);\n\n  if (result[1] < 0) {\n    result[1] = Math.abs(result[1]);\n  }\n\n  return result;\n}\n\n/**\n * Calculates MVT p-value directly from scores/covariance and maximum test statistic.\n * TODO: ask Shaung or Goncalo where this comes from?\n * @param scores\n * @param cov_t\n * @param t_max\n * @return {*|number}\n */\nfunction calculate_mvt_pvalue(scores, cov_t, t_max) {\n  let pvalue = 0.0;\n  const dim = scores.length;\n  let chisq = t_max * t_max;\n  let jointProbHash = {};\n\n  if (dim === 1) {\n    pvalue = pchisq(chisq, 1, 0, 0);\n    return pvalue;\n  }\n\n  let uni = pchisq(chisq, 1, 0, 0);\n  pvalue += dim * uni;\n  let indx = [];\n  let alpha = [...Array(dim).keys()]; // 0, 1, 2, 3... dim\n  for (let r = 2; r <= dim; r++) {\n    let j = r;\n    let k = r;\n    let comb = [];\n    let par = [];\n\n    for (let twk = j; twk <= k; twk++) {\n      let r = twk;\n      let done = true;\n      for (let iwk = 0; iwk < r; iwk++) {\n        indx.push(iwk);\n      }\n\n      while (done) {\n        done = false;\n        for (let owk = 0; owk < r; owk++) {\n          comb.push(alpha[indx[owk]]);\n        }\n\n        par = get_conditional_dist(scores, cov_t, comb);\n        let chisq, condProb, prob;\n        if (par[1] === 0.0) {\n          condProb = 0.0;\n        } else {\n          chisq = (t_max - par[0]) * (t_max - par[0]) / par[1];\n          if (chisq < 0) {\n            chisq = -chisq;\n          }\n          condProb = pchisq(chisq, 1, 0, 0);\n        }\n\n        let hashKey = '';\n        if (r === 2) {\n          hashKey += comb[0];\n          hashKey += comb[1];\n          prob = condProb * uni;\n          jointProbHash[hashKey] = prob;\n          hashKey = '';\n        } else {\n          for (let i = 1; i < r; i++) {\n            hashKey += comb[i];\n          }\n\n          prob = jointProbHash[hashKey];\n          prob *= condProb;\n          let newKey = '';\n          newKey += comb[0];\n          newKey += hashKey;\n          jointProbHash[newKey] = prob;\n          hashKey = '';\n        }\n\n        pvalue -= prob;\n        comb = [];\n        for (let iwk = r - 1; iwk >= 0; iwk--) {\n          if (indx[iwk] <= (dim - 1) - (r - iwk)) {\n            indx[iwk]++;\n            for (let swk = iwk + 1; swk < r; swk++) {\n              indx[swk] = indx[swk - 1] + 1;\n            }\n            iwk = -1;\n            done = true;\n          }\n        }\n      }\n      indx = [];\n    }\n  }\n  return pvalue;\n}\n\n/**\n * Base class for all aggregation tests.\n */\nclass AggregationTest {\n  constructor() {\n    this.label = '';\n    this.key = '';\n\n    this.requiresMaf = false;\n  }\n\n  run(u, v, w, mafs) { // todo update docstrings and call sigs\n    throw new Error('Method must be implemented in a subclass');\n  }\n}\n\n/**\n * Standard burden test that collapses rare variants into a total count of rare alleles observed per sample\n * in a group (e.g. gene). <p>\n *\n * See {@link https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#BURDEN_META_ANALYSIS|our wiki page} for more information.\n * Also see the {@link https://www.ncbi.nlm.nih.gov/pubmed/19810025|paper} describing the method.\n *\n * @extends AggregationTest\n */\nclass ZegginiBurdenTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.key = 'burden';\n    this.label = 'Burden';\n  }\n\n  /**\n   * Default weight function for burden test. All variants weighted equally. Only requires the number of variants\n   * since they are all given the same weight value.\n   * @param n {number} Number of variants.\n   * @return {number[]} An array of weights, one per variant.\n   */\n  static weights(n) {\n    return new Array(n).fill(1);\n  }\n\n  /**\n   * Calculate burden test from vector of score statistics and variances.\n   *\n   * @param {Number[]} u Vector of score statistics (length m, number of variants)\n   * @param {Number[]} v Covariance matrix of score statistics\n   * @param {Number[]} w Weight vector (length m, number of variants)\n   * @return {Number[]} Array of: [burden test statistic, p-value, effect size of burden test, standard error of effect size]\n   */\n  run(u, v, w) {\n    for (let e of [u, v]) {\n      if (!Array.isArray(e) || !e.length) {\n        throw 'Please provide all required arrays';\n      }\n    }\n\n    if (!(u.length === v.length)) {\n      throw 'u and v must be same length';\n    }\n\n    if (w != null) {\n      if (w.length !== u.length) {\n        throw 'w vector must be same length as score vector u';\n      }\n    } else {\n      w = ZegginiBurdenTest.weights(u.length);\n    }\n\n    // This is taken from:\n    // https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#BURDEN_META_ANALYSIS\n    let over = numeric.dot(w, u);\n    let wvw = numeric.dot(numeric.dot(w, v), w);\n    let under = Math.sqrt(wvw);\n    let z = over / under;\n    let effect = over / wvw;\n    let se = 1.0 / under;\n\n    // The -Math.abs(z) is because pnorm returns the lower tail probability from the normal dist\n    // The * 2 is for a two-sided p-value.\n    let p = pnorm(-Math.abs(z), 0, 1) * 2;\n    return [z, p, effect, se];\n  }\n}\n\nfunction _vt(maf_cutoffs, u, v, mafs) {\n  // Calculate score statistic and cov weight matrix for each MAF cutoff.\n  const cov_weight = emptyRowMatrix(maf_cutoffs.length, u.length);\n  let t_max = -Infinity;\n  let effect = NaN;\n  let se = NaN;\n  const scores = Array(maf_cutoffs.length).fill(0.0);\n  maf_cutoffs.map((m, i) => {\n    // Weight is 1 if MAF < cutoff, otherwise 0.\n    let w = mafs.map((maf) => maf <= m ? 1 : 0);\n    cov_weight[i] = w;\n\n    // Calculate burden t-statistic for this maf cutoff\n    let numer = numeric.dot(w, u);\n    let denom = numeric.dot(numeric.dot(w, v), w);\n    let t_stat = Math.abs(numer / Math.sqrt(denom));\n    scores[i] = t_stat;\n    if (t_stat > t_max) {\n      t_max = t_stat;\n      effect = numer / denom;\n      se = 1.0 / Math.sqrt(denom);\n    }\n  });\n\n  // Did we calculate any valid scores?\n  if (Math.max(...scores) === 0.0) {\n    throw 'No scores were able to be calculated for this group';\n  }\n\n  // Calculate covariance matrix\n  const cov_u = numeric.dot(numeric.dot(cov_weight, v), numeric.transpose(cov_weight));\n  const cov_t = cov2cor(cov_u);\n\n  return [scores, cov_t, t_max, effect, se];\n}\n\n/**\n * Variable threshold test (VT). <p>\n */\nclass VTTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.label = 'Variable Threshold';\n    this.key = 'vt';\n    this.requiresMaf = true;\n    this._method = 'auto';\n  }\n\n  /**\n   * This code corresponds roughly to: https://github.com/statgen/raremetal/blob/2c82cfc5710dbd9fd56ef67a7ca5f74772d4e70d/raremetal/src/Meta.cpp#L3456\n   * @param {Number[]} u Vector of score statistics (length m, number of variants)\n   * @param {Number[]} v Covariance matrix of score statistics\n   * @param w This parameter is ignored for VT. Weights are calculated automatically from mafs.\n   * @param mafs Minor allele frequency of each variant\n   * @return {Number[]} Array of: [largest test statistic over all burden tests across allele frequency thresholds,\n   *   VT analytical p-value, effect size of largest test statistic, standard error of effect size]\n   *   Note that this method returns the largest test statistic and corresponding effect/se over all burden tests. Remember that\n   *   these do not correspond to the VT p-value, because VT uses the MVN and covariance of all test statistics to compute the p-value.\n   */\n  run(u, v, w, mafs) {\n    // Uses wasm, returns a promise\n    if (w != null) {\n      throw 'w vector is not accepted in with VT test';\n    }\n\n    // Figure out MAF cutoffs. This tries every possible MAF cutoff given a list of all MAFs.\n    let maf_cutoffs = [];\n    const sorted_mafs = [...mafs].sort();\n    for (let i = 0; i < mafs.length; i++) {\n      if (sorted_mafs[i] > maf_cutoffs.slice(-1)) {\n        maf_cutoffs.push(sorted_mafs[i]);\n      }\n    }\n\n    // Try calculating scores/t-stat covariance the first time (may need refinement later).\n    let [scores, cov_t, t_max, effect, se] = _vt(maf_cutoffs, u, v, mafs);\n    const lower = new Array(maf_cutoffs.length).fill(-t_max);\n    const upper = new Array(maf_cutoffs.length).fill(t_max);\n    const mean = new Array(maf_cutoffs.length).fill(0);\n\n    return MVT_WASM_HELPERS.then((module) => {\n      let result = module.pmvnorm(lower, upper, mean, cov_t);\n\n      let pvalue;\n      if (result.value === -1.0) {\n        throw 'Error: correlation matrix is not positive semi-definite';\n      } else if (result.value === 1.0) {\n        // Use Shuang's algorithm\n        if (maf_cutoffs.length > 20) {\n          maf_cutoffs = maf_cutoffs.slice(-20);\n          let [scores, cov_t, t_max, eff_cut, se_cut] = _vt(maf_cutoffs, u, v, mafs);\n          effect = eff_cut;\n          se = se_cut;\n          pvalue = calculate_mvt_pvalue(scores, cov_t, t_max);\n        } else {\n          pvalue = calculate_mvt_pvalue(scores, cov_t, t_max);\n        }\n      } else {\n        pvalue = 1.0 - result.value;\n      }\n\n      if (pvalue > 1.0) {\n        pvalue = 1.0;\n      }\n\n      return [t_max, pvalue, effect, se];\n    });\n  }\n}\n\n/**\n * Sequence kernel association test (SKAT). <p>\n *\n * See the {@link https://www.cell.com/ajhg/fulltext/S0002-9297%2811%2900222-9|original paper} for details on the\n * method, and {@link https://genome.sph.umich.edu/wiki/RAREMETAL_METHOD#SKAT_META_ANALYSIS|our wiki} for information\n * on how the test is calculated using scores/covariances. <p>\n *\n * @extends AggregationTest\n */\nclass SkatTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.label = 'SKAT';\n    this.key = 'skat';\n    this.requiresMaf = true;\n\n    /**\n     * Skat test method. Only used for dev/testing.\n     * Should not be set by user.\n     * @private\n     * @type {string}\n     */\n    this._method = 'auto';\n  }\n\n  /**\n   * Calculate typical SKAT weights using beta density function.\n   *\n   * @function\n   * @param mafs {number[]} Array of minor allele frequencies.\n   * @param a {number} alpha defaults to 1.\n   * @param b {number} beta defaults to 25.\n   */\n  static weights(mafs, a = 1, b = 25) {\n    let weights = Array(mafs.length).fill(null);\n    for (let i = 0; i < mafs.length; i++) {\n      let w = dbeta(mafs[i], a, b, false);\n      w *= w;\n      weights[i] = w;\n    }\n    return weights;\n  }\n\n  /**\n   * Calculate SKAT test. <p>\n   *\n   * The distribution function of the SKAT test statistic is evaluated using Davies' method by default.\n   * In the special case where there is only 1 lambda, the Liu moment matching approximation method is used. <p>\n   *\n   * @function\n   * @param {Number[]} u Vector of score statistics (length m, number of variants).\n   * @param {Number[]} v Covariance matrix of score statistics (m x m).\n   * @param {Number[]} w Weight vector (length m, number of variants). If weights are not provided, they will\n   *  be calculated using the default weights() method of this object.\n   * @param {Number[]} mafs A vector of minor allele frequencies. These will be used to calculate weights if\n   *  they were not provided.\n   * @return {Number[]} SKAT p-value.\n   */\n  run(u, v, w, mafs) {\n    // Calculate weights (if necessary)\n    if (w === undefined || w === null) {\n      w = SkatTest.weights(mafs);\n    }\n\n    // Calculate Q\n    let q = numeric.dot(numeric.dot(u, numeric.diag(w)), u);\n\n    /**\n     * Code to calculate eigenvalues from V^(1/2) * W * V^(1/2)\n     * This first decomposes V = U * S * U' (SVD on symmetric normal matrix results in this, instead of U * S * V').\n     * If we take sqrt(S), then U * sqrt(S) * U' is a square root of the original matrix V. For a diagonal matrix,\n     * sqrt(S) is just the sqrt(s_i) of each individual diagonal element.\n     * Then we just take the dot product of (U * sqrt(S) * U') * W * (U * sqrt(S) * U'), which is V^(1/2) * W * V^(1/2).\n     * Finally we compute SVD of that matrix, and take the singular values as the eigenvalues.\n     */\n    let lambdas;\n    try {\n      let svd = numeric.svd(v);\n      let sqrtS = numeric.sqrt(svd.S);\n      let uT = numeric.transpose(svd.U);\n      let eigenRhs = numeric.dot(numeric.dot(svd.U, numeric.diag(sqrtS)), uT);\n      let eigenLhs = numeric.dot(eigenRhs, numeric.diag(w));\n      let eigen = numeric.dot(eigenLhs, eigenRhs);\n      let finalSvd = numeric.svd(eigen);\n      lambdas = numeric.abs(finalSvd.S);\n    } catch (error) {\n      console.log(error);\n      return [NaN, NaN];\n    }\n\n    if (numeric.sum(lambdas) < 0.0000000001) {\n      console.error('Sum of lambda values for SKAT test is essentially zero');\n      return [NaN, NaN];\n    }\n\n    // P-value method\n    if (this._method === 'liu') {\n      // Only for debug purposes\n      return _skatLiu(lambdas, q);\n    } else if (this._method === 'davies') {\n      return _skatDavies(lambdas, q);\n    } else if (this._method === 'auto') {\n      if (lambdas.length === 1) {\n        // Davies method does not support 1 lambda\n        // This is what raremetal does\n        return _skatLiu(lambdas, q);\n      } else {\n        let daviesResult = _skatDavies(lambdas, q);\n        if (isNaN(daviesResult[1])) {\n          // Davies' method could not converge. Use R-SKAT's approach instead.\n          return _skatLiu(lambdas, q);\n        } else {\n          return daviesResult;\n        }\n      }\n    } else {\n      throw new Error(`Skat method ${this._method} not implemented`);\n    }\n  }\n}\n\n/**\n * Calculate SKAT p-value using Davies method.\n * @function\n * @param lambdas Eigenvalues of sqrtV * W * sqrtV.\n * @param qstat SKAT test statistic U.T * W * U.\n * @return {Number[]} Array of [Q statistic, p-value].\n * @private\n */\nfunction _skatDavies(lambdas, qstat, acc = 0.0001) {\n  /**\n   * lambdas - coefficient of jth chi-squared variable\n   * nc1 - non-centrality parameters\n   * n1 - degrees of freedom\n   * n - number of chi-squared variables\n   * sigma - coefficient of standard normal variable\n   * qstat - point at which cdf is to be evaluated (this is SKAT Q stat usually)\n   * lim1 - max number of terms in integration\n   * acc - maximum error\n   * trace - array into which the following is stored:\n   *   trace[0]\tabsolute sum\n   *   trace[1]\ttotal number of integration terms\n   *   trace[2]\tnumber of integrations\n   *   trace[3]\tintegration interval in final integration\n   *   trace[4]\ttruncation point in initial integration\n   *   trace[5]\ts.d. of initial convergence factor\n   *   trace[6]\tcycles to locate integration parameters\n   * ifault - array into which the following fault codes are stored:\n   *   0 normal operation\n   *   1 required accuracy not achieved\n   *   2 round-off error possibly significant\n   *   3 invalid parameters\n   *   4 unable to locate integration parameters\n   *   5 out of memory\n   * res - store final value into this variable\n   */\n  let n = lambdas.length;\n  let nc1 = Array(n).fill(0);\n  let n1 = Array(n).fill(1);\n  let sigma = 0.0;\n  let lim1 = 10000;\n  let res = qfc.qf(lambdas, nc1, n1, n, sigma, qstat, lim1, acc);\n  let qfval = res[0];\n  let pval = 1.0 - qfval;\n\n  let converged = (res[1] === 0) && (pval > 0) && (pval <= 1);\n  if (!converged) {\n    pval = NaN;\n  }\n\n  return [qstat, pval];\n}\n\n/**\n * Calculate SKAT p-value using Liu method.\n * @param lambdas Eigenvalues of sqrtV * W * sqrtV.\n * @param qstat SKAT test statistic U.T * W * U.\n * @return {Number[]} [qstat, pvalue]\n * @private\n */\nfunction _skatLiu(lambdas, qstat) {\n  let n = lambdas.length;\n  let [c1, c2, c3, c4] = Array(4).fill(0.0);\n  for (let i = 0; i < n; i++) {\n    let ilambda = lambdas[i];\n    c1 += ilambda;\n    c2 += ilambda * ilambda;\n    c3 += ilambda * ilambda * ilambda;\n    c4 += ilambda * ilambda * ilambda * ilambda;\n  }\n\n  let s1 = c3 / Math.sqrt(c2 * c2 * c2);\n  let s2 = c4 / (c2 * c2);\n  let muQ = c1;\n  let sigmaQ = Math.sqrt(2.0 * c2);\n  let tStar = (qstat - muQ) / sigmaQ;\n\n  let delta, l, a;\n  if (s1 * s1 > s2) {\n    a = 1.0 / (s1 - Math.sqrt(s1 * s1 - s2));\n    delta = s1 * a * a * a - a * a;\n    l = a * a - 2.0 * delta;\n  } else {\n    a = 1.0 / s1;\n    delta = 0.0;\n    l = c2 * c2 * c2 / (c3 * c3);\n  }\n\n  let muX = l + delta;\n  let sigmaX = Math.sqrt(2.0) * a;\n  let qNew = tStar * sigmaX + muX;\n  let p;\n\n  if (delta === 0) {\n    p = pchisq(qNew, l, 0, 0);\n  } else {\n    // Non-central chi-squared\n    p = pchisq(qNew, l, delta, 0, 0);\n  }\n\n  return [qstat, p];\n}\n\n// extension to real hermitian (symmetric) matrices\n// from this fork: https://git.io/fjdfx\nnumeric.eigh = function(A, maxiter) {\n  return numeric.jacobi(A, maxiter);\n};\n\nnumeric.jacobi = function(Ain, maxiter) {\n  // jacobi method with rutishauser improvements from\n  // Rutishauser, H. (1966). The Jacobi method for real symmetric matrices.\n  // Numerische Mathematik, 9(1), 1–10. doi:10.1007/BF02165223\n\n  // returns object containing\n  // E: {x : v} eigenvalues.\n  // lambda : {x: d} eigenstates.\n  // niter : number of iterations.\n  // iterations : list of convergence factors for each step of the iteration.\n  // nrot : number of rotations performed.\n\n  var size = [Ain.length, Ain[0].length];\n  if (size[0] !== size[1]) {\n    throw 'jacobi : matrix must be square';\n  }\n\n  // remember use only symmetric real matrices.\n  var n = size[0];\n\n  var v = numeric.identity(n);\n  var A = numeric.clone(Ain);\n\n  var iters = numeric.rep([maxiter], 0);\n  var d = numeric.getDiag(A);\n  var bw = numeric.clone(d);\n\n  // zeros\n  var zw = numeric.rep([n], 0);\n\n  // iteration parameters\n  var iter = -1;\n  var niter = 0;\n  var nrot = 0;\n  var tresh = 0;\n\n  //  prealloc\n  var h, g, gapq, term, termp, termq, theta, t, c, s, tau;\n  while (iter < maxiter) {\n    iter++;\n    iters[iter] = numeric.jacobinorm(A);\n    niter = iter;\n    tresh = iters[iter] / (4 * n);\n\n    if (tresh === 0) {\n      return { E: { x: v }, lambda: { x: d }, iterations: iters, niter: niter, nrot: nrot };\n    }\n\n    for (var p = 0; p < n; p++) {\n      for (var q = p + 1; q < n; q++) {\n        gapq = 10 * Math.abs(A[p][q]);\n        termp = gapq + Math.abs(d[p]);\n        termq = gapq + Math.abs(d[q]);\n        if (iter > 4 && termp === Math.abs(d[p]) && termq === Math.abs(d[q])) {\n          // remove small elmts\n          A[p][q] = 0;\n        } else {\n          if (Math.abs(A[p][q]) >= tresh) {\n            // apply rotation\n            h = d[q] - d[p];\n            term = Math.abs(h) + gapq;\n            if (term === Math.abs(h)) {\n              t = A[p][q] / h;\n            } else {\n              theta = 0.5 * h / A[p][q];\n              t = 1 / (Math.abs(theta) + Math.sqrt(1 + theta * theta));\n              if (theta < 0) {\n                t = -t;\n              }\n            }\n            c = 1 / Math.sqrt(1 + t * t);\n            s = t * c;\n            tau = s / (1 + c);\n            h = t * A[p][q];\n            zw[p] = zw[p] - h;\n            zw[q] = zw[q] + h;\n            d[p] = d[p] - h;\n            d[q] = d[q] + h;\n            A[p][q] = 0;\n            // rotate and use upper tria only\n            for (let j = 0; j < p; j++) {\n              g = A[j][p];\n              h = A[j][q];\n              A[j][p] = g - s * (h + g * tau);\n              A[j][q] = h + s * (g - h * tau);\n            }\n            for (let j = p + 1; j < q; j++) {\n              g = A[p][j];\n              h = A[j][q];\n              A[p][j] = g - s * (h + g * tau);\n              A[j][q] = h + s * (g - h * tau);\n            }\n            for (let j = q + 1; j < n; j++) {\n              g = A[p][j];\n              h = A[q][j];\n              A[p][j] = g - s * (h + g * tau);\n              A[q][j] = h + s * (g - h * tau);\n            }\n            // eigenstates\n            for (let j = 0; j < n; j++) {\n              g = v[j][p];\n              h = v[j][q];\n              v[j][p] = g - s * (h + g * tau);\n              v[j][q] = h + s * (g - h * tau);\n            }\n            nrot++;\n          }\n        }\n      }\n    }\n    bw = numeric.add(bw, zw);\n    d = numeric.clone(bw);\n    zw = numeric.rep([n], 0);\n  }\n\n  return { E: { x: v }, lambda: { x: d }, iterations: iters, niter: niter, nrot: nrot };\n};\n\nnumeric.jacobinorm = function(A) {\n  // used in numeric.jacobi\n  var n = A.length;\n  var s = 0;\n  for (var i = 0; i < n; i ++) {\n    for (var j = i + 1; j < n; j ++) {\n      s = s + Math.pow(A[i][j], 2);\n    }\n  }\n  return Math.sqrt(s);\n};\n\n/*\nfunction toRMatrix(m) {\n  let tmp = \"c(\" + m.map(x => \"c(\" + x.map(x => x.toFixed(3)).join(\", \") + \")\").join(\", \") + \")\";\n  return `matrix(${tmp}, nrow=${m.length})`;\n}\n\nfunction writeMatrixToFile(m, fpath) {\n  let fs = require(\"fs\");\n  let s = \"\";\n  for (let row of m) {\n    s += row.join(\"\\t\") + \"\\n\";\n  }\n  fs.writeFileSync(fpath, s);\n}\n*/\n\nfunction getEigen(m) {\n  const lambdas = numeric.eigh(m, 1000000).lambda.x.sort((a, b) => a - b);\n  const n = lambdas.length;\n  let numNonZero = 0;\n  let sumNonZero = 0.0;\n  for (let i = 0; i < n; i++) {\n    if (lambdas[i] > 0) {\n      numNonZero++;\n      sumNonZero += lambdas[i];\n    }\n  }\n\n  if (numNonZero === 0) {\n    throw new Error('All eigenvalues were 0 when calculating SKAT-O test');\n  }\n\n  const t = sumNonZero / numNonZero / 100000;\n  let numKeep = n;\n  for (let i = 0; i < n; i++) {\n    if (lambdas[i] < t) {\n      numKeep--;\n    } else {\n      break;\n    }\n  }\n\n  const keep = new Array(numKeep).fill(null);\n  for (let i = 0; i < numKeep; i++) {\n    keep[i] = lambdas[n - 1 - i];\n  }\n\n  return keep;\n}\n\nfunction getMoment(lambdas) {\n  let c = new Array(4).fill(NaN);\n  c[0] = numeric.sum(lambdas);\n  c[1] = numeric.sum(numeric.pow(lambdas, 2));\n  c[2] = numeric.sum(numeric.pow(lambdas, 3));\n  c[3] = numeric.sum(numeric.pow(lambdas, 4));\n\n  const muQ = c[0];\n  const sigmaQ = Math.sqrt(2 * c[1]);\n  const s1 = c[2] / c[1] ** (3 / 2);\n  const s2 = c[3] / (c[1] * c[1]);\n\n  let a, d, l;\n  if (s1 * s1 > s2) {\n    a = 1 / (s1 - Math.sqrt(s1 * s1 - s2));\n    d = (s1 * (a ** 3) - a * a);\n    l = a * a - 2 * d;\n  } else {\n    l = 1.0 / s2;\n    a = Math.sqrt(l);\n    d = 0;\n  }\n\n  let muX = l + d;\n  let sigmaX = Math.sqrt(2) * a;\n\n  const varQ = sigmaQ * sigmaQ;\n  const df = l;\n  return {\n    muQ: muQ,\n    varQ: varQ,\n    df: df,\n    ncp: d,\n    muX: muX,\n    sigmaQ: sigmaQ,\n    sigmaX: sigmaX,\n  };\n}\n\nfunction getPvalByMoment(q, m) {\n  const qNorm = ((q - m.muQ) / m.sigmaQ) * m.sigmaX + m.muX;\n  return pchisq(qNorm, m.df, m.ncp, false, false);\n}\n\nfunction getQvalByMoment(min_pval, m) {\n  const q_org = qchisq(min_pval, m.df, 0, false, false);\n  return (q_org - m.df) / Math.sqrt(2.0 * m.df) * Math.sqrt(m.varQ) + m.muQ;\n}\n\nclass SkatIntegrator {\n  constructor(rhos, lambda, Qs_minP, taus, MuQ, VarQ, VarZeta, Df) {\n    this.rhos = rhos;\n    this.lambda = lambda;\n    this.Qs_minP = Qs_minP;\n    this.taus = taus;\n    this.MuQ = MuQ;\n    this.VarQ = VarQ;\n    this.VarZeta = VarZeta;\n    this.Df = Df;\n  }\n\n  static pvalueDavies(q, lambdas, acc = 1e-4) {\n    let n = lambdas.length;\n    let nc1 = Array(n).fill(0);\n    let n1 = Array(n).fill(1);\n    let sigma = 0.0;\n    let lim1 = 10000;\n    let res = qfc.qf(lambdas, nc1, n1, n, sigma, q, lim1, acc);\n    let qfval = res[0];\n    let fault = res[1];\n    let pvalue = 1.0 - qfval;\n\n    if (pvalue > 1.0) {\n      pvalue = 1.0;\n    }\n\n    if (fault) {\n      throw new RangeError('Davies failed');\n    }\n\n    return pvalue;\n  }\n\n  static pvalueLiu(q, lambdas) {\n    let n = lambdas.length;\n    let [c1, c2, c3, c4] = Array(4).fill(0.0);\n    for (let i = 0; i < n; i++) {\n      let ilambda = lambdas[i];\n      c1 += ilambda;\n      c2 += ilambda * ilambda;\n      c3 += ilambda * ilambda * ilambda;\n      c4 += ilambda * ilambda * ilambda * ilambda;\n    }\n\n    let s1 = c3 / Math.sqrt(c2 * c2 * c2);\n    let s2 = c4 / (c2 * c2);\n    let muQ = c1;\n    let sigmaQ = Math.sqrt(2.0 * c2);\n    let tStar = (q - muQ) / sigmaQ;\n\n    let delta, l, a;\n    if (s1 * s1 > s2) {\n      a = 1.0 / (s1 - Math.sqrt(s1 * s1 - s2));\n      delta = s1 * a * a * a - a * a;\n      l = a * a - 2.0 * delta;\n    } else {\n      a = 1.0 / s1;\n      delta = 0.0;\n      l = c2 * c2 * c2 / (c3 * c3);\n    }\n\n    let muX = l + delta;\n    let sigmaX = Math.sqrt(2.0) * a;\n    let qNew = tStar * sigmaX + muX;\n\n    if (qNew < 0) {\n      return 1;\n    }\n\n    let p;\n    if (delta === 0) {\n      p = pchisq(qNew, l, 0, 0);\n    } else {\n      // Non-central chi-squared\n      p = pchisq(qNew, l, delta, 0, 0);\n    }\n\n    return p;\n  }\n\n  integrandDavies(x) {\n    let kappa = Number.MAX_VALUE;\n    const nRho = this.rhos.length;\n    for (let i = 0; i < nRho; i++) {\n      let v = (this.Qs_minP[i] - this.taus[i] * x) / (1.0 - this.rhos[i]);\n      if (i === 0) {\n        kappa = v;\n      }\n      if (v < kappa) {\n        kappa = v;\n      }\n    }\n    let temp;\n    if (kappa > numeric.sum(this.lambda) * 10000) {\n      temp = 0.0;\n    } else {\n      let Q = (kappa - this.MuQ) * Math.sqrt(this.VarQ - this.VarZeta) / Math.sqrt(this.VarQ) + this.MuQ;\n      temp = SkatIntegrator.pvalueDavies(Q, this.lambda, 1e-6);\n    }\n    let final = (1.0 - temp) * dchisq(x, 1);\n    //console.log(\"integrandDavies: \", x, temp, final);\n    return final;\n  }\n\n  integrandLiu(x) {\n    let kappa = Number.MAX_VALUE;\n    const nRho = this.rhos.length;\n    for (let i = 0; i < nRho; i++) {\n      let v = (this.Qs_minP[i] - this.taus[i] * x) / (1.0 - this.rhos[i]);\n      if (v < kappa) {\n        kappa = v;\n      }\n    }\n    let Q = (kappa - this.MuQ) / Math.sqrt(this.VarQ) * Math.sqrt(2.0 * this.Df) + this.Df;\n\n    let ret;\n    if (Q <= 0) {\n      ret = 0;\n    } else {\n      ret = pchisq(Q, this.Df) * dchisq(x, 1);\n    }\n\n    return ret;\n  }\n\n  _debugWriteIntegrandDavies(fpath, xstart = 0, xend = 40, increment = 0.001) {\n    let fs = require('fs');\n    let stream = fs.createWriteStream(fpath);\n    let v;\n    for (let x = xstart; x < xend; x += increment) {\n      v = this.integrandDavies(x);\n      stream.write(`${x}\\t${v}\\n`);\n    }\n  }\n\n  skatOptimalIntegral() {\n    // Regarding the tolerance below:\n    // https://www.boost.org/doc/libs/1_70_0/libs/math/doc/html/math_toolkit/double_exponential/de_tol.html\n    // This particular tolerance appears to be enough to get a good match with MetaSKAT. Any larger and we lose power.\n    const integ = new ExpSinh(9, Number.EPSILON ** (2 / 3));\n\n    // In MetaSKAT, integrating \"SKAT_Optimal_Integrate_Func_Davies\" is only capable of reaching approximately the limit\n    // below. Because we changed quadratures to exp_sinh, we are sometimes able to integrate beyond this limit, up to\n    // around 1e-15 or so (or possibly even smaller.) However, this causes a deviation from MetaSKAT's results, so we cap\n    // our integrator at this value. Theoretically, removing this limitation would make our procedure slightly more powerful,\n    // however usually in the range beyond the Davies limit, we end up using minP * nRhos anyway.\n    let daviesLimit = 2.151768e-10;\n    let pvalue = NaN;\n    try {\n      pvalue = 1 - integ.integrate(this.integrandDavies.bind(this))[0];\n      if (!isNaN(pvalue)) {\n        if (pvalue < daviesLimit) {\n          pvalue = daviesLimit;\n        }\n      }\n    } catch (error) {\n      pvalue = 1 - integ.integrate(this.integrandLiu.bind(this))[0];\n    }\n\n    return pvalue;\n  }\n}\n\n/**\n * Optimal sequence kernel association test (SKAT). <p>\n *\n * The following papers detail the method:\n *\n * Original SKAT optimal test paper, utilizing genotypes instead of covariance matrices: https://doi.org/10.1016/j.ajhg.2012.06.007\n * Meta-analysis of SKAT optimal test, and use of covariance matrices: https://doi.org/10.1016/j.ajhg.2013.05.010\n *\n * @extends AggregationTest\n */\nclass SkatOptimalTest extends AggregationTest {\n  constructor() {\n    super(...arguments);\n    this.label = 'SKAT Optimal';\n    this.key = 'skat-o';\n    this.requiresMaf = true;\n\n    /**\n     * Skat test method. Only used for dev/testing.\n     * Should not be set by user.\n     * @private\n     * @type {string}\n     */\n    this._method = 'auto';\n  }\n\n  /**\n   * Calculate typical SKAT weights using beta density function.\n   *\n   * @function\n   * @param mafs {number[]} Array of minor allele frequencies.\n   * @param a {number} alpha defaults to 1.\n   * @param b {number} beta defaults to 25.\n   */\n  static weights(mafs, a = 1, b = 25) {\n    let weights = Array(mafs.length).fill(null);\n    for (let i = 0; i < mafs.length; i++) {\n      let w = dbeta(mafs[i], a, b, false);\n      //w *= w;\n      weights[i] = w;\n    }\n    return weights;\n  }\n\n  /**\n   * Calculate optimal SKAT test. <p>\n   *\n   * This code is based partly on rvtests' implementation (https://git.io/fjQEs) which uses genotypes instead of\n   * scores/covariances, and also on the MetaSKAT R-package (https://git.io/fjQEZ).\n   *\n   * @function\n   * @param {Number[]} u Vector of score statistics (length m, number of variants).\n   * @param {Number[]} v Covariance matrix of score statistics (m x m).\n   * @param {Number[]} w Weight vector (length m, number of variants). If weights are not provided, they will\n   *  be calculated using the default weights() method of this object.\n   * @param {Number[]} mafs A vector of minor allele frequencies. These will be used to calculate weights if\n   *  they were not provided.\n   * @param {Number[]} rhos A vector of rho values, representing the weighting between burden and SKAT statistics.\n   * @return {Number[]} SKAT p-value.\n   */\n  run(u, v, w, mafs, rhos) {\n    const { dot, sum, mul, div, sub, rep, pow, diag } = numeric;\n    const t = numeric.transpose;\n\n    if (u.length === 1) {\n      // rvtest\n      return new SkatTest().run(u, v, w, mafs);\n    }\n\n    // Calculate weights (if necessary)\n    if (w === undefined || w === null) {\n      w = SkatOptimalTest.weights(mafs);\n    }\n\n    const nVar = u.length; // number of variants\n    w = diag(w); // diagonal matrix\n    u = t([u]); // column vector\n\n    // Setup rho values\n    if (!rhos) {\n      rhos = [];\n      for (let i = 0; i <= 10; i++) {\n        let v = i / 10;\n        if (v > 0.999) {\n          // rvtests does this to avoid rank deficiency\n          v = 0.999;\n        }\n        rhos.push(v);\n      }\n    }\n    const nRhos = rhos.length;\n    // MetaSKAT optimal.mod rho values\n    //const rhos = [0, 0.01, 0.04, 0.09, 0.25, 0.5, 0.999];\n    //const nRhos = rhos.length;\n\n    // Calculate rho matrices (1-rho)*I + rho*1*1'\n    // [ 1   rho rho ]\n    // [ rho 1   rho ]\n    // [ rho rho 1   ]\n    const Rp = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      let r = rep([nVar, nVar], rhos[i]);\n      for (let j = 0; j < r.length; j++) {\n        r[j][j] = 1.0;\n      }\n      Rp[i] = r;\n    }\n\n    // Calculate Q statistics, where Q = U' * W * R(rho) * W * U\n    // U is the score statistic vector, W is the diagonal weight matrix for each variant\n    // R(rho) is a matrix for each rho value that reflects weighting between burden & SKAT\n    const Qs = [];\n    for (let i = 0; i < nRhos; i++) {\n      Qs[i] = dot(t(u), dot(w, dot(Rp[i], dot(w, u))))[0][0];\n      Qs[i] = Qs[i] / 2.0; // SKAT R package divides by 2\n    }\n\n    // Calculate lambdas (eigenvalues of W * IOTA * W.) In the paper, IOTA is the covariance matrix divided by\n    // the phenotypic variance sigma^2.\n    const lambdas = new Array(nRhos).fill(null);\n    const phi = div(dot(w, dot(v, w)), 2); // https://git.io/fjwqF\n    for (let i = 0; i < nRhos; i++) {\n      let L = cholesky(Rp[i]);\n      let phi_rho = dot(t(L), dot(phi, L));\n      try {\n        lambdas[i] = getEigen(phi_rho);\n      } catch (error) {\n        console.error(error.message);\n        return [NaN, NaN];\n      }\n    }\n\n    // Calculate moments\n    const moments = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      moments[i] = getMoment(lambdas[i]);\n    }\n\n    // Calculate p-values for each rho\n    const pvals = new Array(nRhos).fill(NaN);\n    const daviesPvals = new Array(nRhos).fill(NaN);\n    const liuPvals = new Array(nRhos).fill(NaN);\n    for (let i = 0; i < nRhos; i++) {\n      liuPvals[i] = getPvalByMoment(Qs[i], moments[i]);\n      daviesPvals[i] = _skatDavies(lambdas[i], Qs[i], 10 ** -6)[1];\n\n      if (!isNaN(daviesPvals[i])) {\n        pvals[i] = daviesPvals[i];\n      } else {\n        pvals[i] = liuPvals[i];\n      }\n    }\n\n    // Calculate minimum p-value across all rho values\n    let minP = pvals[0];\n    let minIndex = 0;\n    for (let i = 1; i < nRhos; i++) {\n      if (pvals[i] < minP) {\n        minP = pvals[i];\n        minIndex = i;\n      }\n    }\n    //const rho = rhos[minIndex];\n    const Q = Qs[minIndex];\n\n    // Calculate minimum Q(p)\n    const Qs_minP = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      Qs_minP[i] = getQvalByMoment(minP, moments[i]);\n    }\n\n    // Calculate parameters needed for Z'(I-M)Z part\n    const Z11 = dot(phi, rep([nVar, 1], 1));\n    const ZZ = phi;\n    const ZMZ = div(dot(Z11, t(Z11)), sum(ZZ));\n    const ZIMZ = sub(ZZ, ZMZ);\n    let lambda;\n    try {\n      lambda = getEigen(ZIMZ);\n    } catch (error) {\n      console.error(error.message);\n      return [NaN, NaN];\n    }\n    const varZeta = 4 * sum(mul(ZMZ, ZIMZ));\n    const muQ = sum(lambda);\n    const varQ = 2.0 * sum(pow(lambda, 2)) + varZeta;\n    const kerQ = 12.0 * sum(pow(lambda, 4)) / ((sum(pow(lambda, 2))) ** 2);\n    const dF = 12.0 / kerQ;\n\n    // Calculate taus\n    const z_mean = sum(ZZ) / (nVar ** 2);\n    const tau1 = sum(dot(ZZ, ZZ)) / (nVar ** 2) / z_mean;\n    const taus = new Array(nRhos).fill(null);\n    for (let i = 0; i < nRhos; i++) {\n      taus[i] = (nVar * nVar) * rhos[i] * z_mean + tau1 * (1 - rhos[i]);\n    }\n\n    // Calculate final p-value\n    if (new Set([rhos.length, Qs_minP.length, taus.length]).size > 1) {\n      throw 'Parameter arrays for SKAT integration must all be the same length';\n    }\n\n    const integrator = new SkatIntegrator(\n      rhos,\n      lambda,\n      Qs_minP,\n      taus,\n      muQ,\n      varQ,\n      varZeta,\n      dF,\n    );\n\n    let pvalue = integrator.skatOptimalIntegral();\n\n    // Use minimum p-value adjusted for # of tests if less than what integrator provides. https://git.io/fjNOj\n    let minP_adj = minP * nRhos;\n    if (minP_adj < pvalue) {\n      pvalue = minP_adj;\n    }\n\n    // Check SKAT p-value\n    const multi = (nRhos < 3) ? 2 : 3;\n    if (nRhos) {\n      if (pvalue <= 0) {\n        let p = minP * multi;\n        if (pvalue < p) {\n          pvalue = p;\n        }\n      }\n    }\n    if (pvalue === 0.0) {\n      pvalue = pvals[0];\n      for (let i = 1; i < nRhos; i++) {\n        if (pvals[i] > 0 && pvals[i] < pvalue) {\n          pvalue = pvals[i];\n        }\n      }\n    }\n    return [Q, pvalue];\n  }\n}\n\nexport { // for unit testing only\n  AggregationTest as _AggregationTest,\n  get_conditional_dist as _get_conditional_dist,\n};\nexport { SkatTest, SkatOptimalTest, ZegginiBurdenTest, VTTest,\n  MVT_WASM_HELPERS, calculate_mvt_pvalue, _skatDavies, _skatLiu,\n\n};\n","/**\n * Helper methods for running aggregation tests\n *\n * This wraps internal functionality and provides utilities for reading and writing expected API formats\n */\nimport numeric from 'numeric';\nimport { REGEX_EPACTS } from './constants';\nimport { _AggregationTest, SkatTest, ZegginiBurdenTest, VTTest, SkatOptimalTest } from './stats';\n\nconst _all_tests = [ZegginiBurdenTest, SkatTest, VTTest, SkatOptimalTest];\n\n/**\n * Look up aggregation tests by unique name.\n *\n * This is a helper for external libraries; it provides an immutable registry of all available tests.\n * TODO would be nice to get rid of this?\n *\n *\n * {key: {label: String, constructor: Object }\n * @type {{String: {label: String, constructor: function}}}\n */\nconst AGGREGATION_TESTS = Object.freeze(_all_tests.reduce(function (acc, constructor) {\n  const inst = new constructor();  // Hack- need instance to access attributes\n  acc[inst.key] = { label: inst.label, constructor: constructor };\n  return acc;\n}, {}));\n\n\n/**\n * Helper object for reading and interpreting variant data\n */\nclass PortalVariantsHelper {\n  constructor(variants_array) {\n    this._variants = variants_array;\n    this._variant_lookup = this.parsePortalVariantData(variants_array);\n  }\n\n  get data() {  // Raw unparsed data\n    return this._variants;\n  }\n\n  parsePortalVariantData(variants) {\n    // Read an array of variants. Parse names into position/ref/alt, and assign altFreq to MAF.\n    // Return a hash keyed on variant ID for quick lookups.\n    let lookup = {};\n    variants.forEach((data) => {\n      let { variant, altFreq, pvalue, score } = data;\n      let [_, chrom, pos, ref, alt, __] = variant.match(REGEX_EPACTS);  // eslint-disable-line no-unused-vars\n\n      let effectFreq = altFreq;\n      let effect = alt;\n\n      /**\n       * The variant's score statistic in the API is coded toward the alternate allele.\n       * However, we want the effect coded towards the minor allele, since most rare variant tests assume\n       * you are counting the rare/minor allele.\n       */\n      if (altFreq > 0.5) {\n        /**\n         * The effect allele is initially the alt allele. Since we're flipping it,\n         * the \"other\" allele is the reference allele.\n         */\n        score = -score;\n        effect = ref;\n\n        // This is also now the minor allele frequency.\n        effectFreq = 1 - altFreq;\n      }\n\n      lookup[variant] = {\n        variant,\n        chrom,\n        pos,\n        pvalue,\n        score,\n        altAllele: alt,\n        effectAllele: effect,\n        altFreq: altFreq,\n        effectFreq: effectFreq,\n      };\n    });\n    return lookup;\n  }\n\n  isAltEffect(variant_names) {  // Some calculations are sensitive to whether alt is the minor (effect) allele\n    return variant_names.map((name) => {\n      const variant_data = this._variant_lookup[name];\n      return variant_data.altAllele === variant_data.effectAllele;\n    });\n  }\n\n  getEffectFreq(variant_names) {\n    // Get the allele freq for the minor (effect) allele\n    return variant_names.map((name) => this._variant_lookup[name].effectFreq);\n  }\n\n  getScores(variant_names) {\n    // Get single-variant scores\n    return variant_names.map((name) => this._variant_lookup[name].score);\n  }\n\n  getGroupVariants(variant_names) {\n    // Return all that is known about a given set of variants\n    return variant_names.map((name) => this._variant_lookup[name]);\n  }\n}\n\n// Utility class. Provides helper methods to access information about groups and generate subsets\nclass PortalGroupHelper {\n  constructor(groups) {\n    this._groups = groups;\n    this._lookup = this._generateLookup(groups);\n  }\n\n  get data() {  // Raw unparsed data\n    return this._groups;\n  }\n\n  byMask(selection) {  // str or array\n    // Get all groups that identify as a specific category of mask- \"limit the analysis to loss of function variants\n    // in any gene\"\n    if (!Array.isArray(selection)) {\n      selection = [selection];\n    }\n    selection = new Set(selection);\n\n    const subset = this._groups.filter((group) => selection.has(group.mask));\n    return new this.constructor(subset);\n  }\n\n  byGroup(selection) {  // str or array\n    // Get all groups based on a specific group name, regardless of mask. Eg, \"all the ways to analyze data for a\n    // given gene\".\n    if (!Array.isArray(selection)) {\n      selection = [selection];\n    }\n    selection = new Set(selection);\n\n    const subset = this._groups.filter((group) => selection.has(group.group));\n    return new this.constructor(subset);\n  }\n\n  _generateLookup(groups) {\n    // We don't transform data, so this is a simple name -> position mapping\n    return groups.reduce((acc, item, idx) => {\n      const key = this._getKey(item.mask, item.group);\n      acc[key] = idx;\n      return acc;\n    }, {});\n  }\n\n  _getKey(mask_name, group_name) {\n    return `${mask_name},${group_name}`;\n  }\n\n  getOne(mask_name, group_name) {\n    // Get a single group that is fully and uniquely identified by group + mask\n    const key = this._getKey(mask_name, group_name);\n    const pos = this._lookup[key];\n    return this._groups[pos];\n  }\n\n  makeCovarianceMatrix(group, is_alt_effect) {\n    // Helper method that expands the portal covariance format into a full matrix.\n    // Load the covariance matrix from the response JSON\n    const n_variants = group.variants.length;\n    let covmat = new Array(n_variants);\n    for (let i = 0; i < n_variants; i++) {\n      covmat[i] = new Array(n_variants).fill(null);\n    }\n\n    let c = 0;\n    for (let i = 0; i < n_variants; i++) {\n      for (let j = i; j < n_variants; j++) {\n        let v = group.covariance[c];\n        let iAlt = is_alt_effect[i];\n        let jAlt = is_alt_effect[j];\n\n        /**\n         * The API spec codes variant genotypes towards the alt allele. If the alt allele frequency\n         * is > 0.5, that means we're not counting towards the minor (rare) allele, and we need to flip it around.\n         * We don't flip when i == j because that element represents the variance of the variant's score, which is\n         * invariant to which allele we code towards (but covariance is not.)\n         *\n         * We also don't flip when both the i variant and j variant need to be flipped (the ^ is XOR) because it would\n         * just cancel out.\n         */\n        if (i !== j) {\n          if ((!iAlt) ^ (!jAlt)) {\n            v = -v;\n          }\n        }\n\n        covmat[i][j] = v;\n        covmat[j][i] = v;\n\n        c += 1;\n      }\n    }\n\n    covmat = numeric.mul(group.nSamples, covmat);\n    return covmat;\n  }\n}\n\n/**\n * Run one or more burden tests. This will operate in sequence: all specified tests on all specified masks\n *\n * The actual call signature of a burden test is pretty low-level. In addition to running the list of tests,\n *  this helper also restructures human-friendly mask and variant representations into a shape that works directly\n *  with the calculation.\n */\nclass PortalTestRunner {\n  /**\n   * Create a test runner object, using group and variant data of the form provided by `parsePortalJSON`. Generally,\n   *  this helper is a convenience wrapper based on the raremetal.js API format spec, and hence it expects\n   *  variant and group definitions to follow that spec.\n   * @param groups PortalGroupHelper\n   * @param variants PortalVariantsHelper\n   * @param test_names {String[]|_AggregationTest[]}\n   */\n  constructor(groups, variants, test_names = []) {\n    this.groups = groups;\n    this.variants = variants;\n    this._tests = [];\n\n    test_names.forEach((name) => this.addTest(name));\n  }\n\n  /**\n   *\n   * @param test {String|_AggregationTest}\n   * @return {_AggregationTest}\n   */\n  addTest(test) {\n    // Add a new test by name, or directly from an instance\n    if (typeof test === 'string') {\n      let type = AGGREGATION_TESTS[test];\n      if (!type) {\n        throw new Error(`Cannot make unknown test type: ${test}`);\n      }\n      test = new type.constructor();\n    } else if (!(test instanceof _AggregationTest)) {\n      throw new Error('Must specify test as name or instance');\n    }\n    this._tests.push(test);\n    return test;\n  }\n\n  /**\n   * Run every test on every group in the container and return results\n   * @returns Promise A promise representing the fulfillment state of all tests being run\n   */\n  run() {\n    let partials = [];\n\n    this._tests.forEach((test) => {\n      this.groups.data.forEach((group) => {\n        partials.push(this._runOne.bind(this, test, group));\n      });\n    });\n    // Despite the async syntax, ensure that each tests is run in series, to mitigate memory allocation errors when\n    //  running many tests\n    return partials.reduce((results, one_test) => {\n      return results.then((all_prior) => {\n        return one_test().then((one_res) => {\n          return [...all_prior, one_res];\n        });\n      });\n    }, Promise.resolve([]));\n  }\n\n  /**\n   *\n   * @param {AggregationTest} test Instance for a single unit test\n   * @param group {Object} Data corresponding to a specific group, following API format docs\n   * @returns {{groupType: *, stat: *, test: *, pvalue: *, variants: (*|Array|string[]|Map), group: *, mask: (*|string|SVGMaskElement|string)}}\n   * @private\n   */\n  _runOne(test, group) {\n    // Helper method that translates portal data into the format expected by a test.\n    const variants = group.variants;\n    const scores = this.variants.getScores(variants);\n\n    // Most calculations will require adjusting API data to ensure that minor allele is the effect allele\n    const isAltEffect = this.variants.isAltEffect(variants);\n\n    const cov = this.groups.makeCovarianceMatrix(group, isAltEffect);\n    const mafs = this.variants.getEffectFreq(variants);\n    let weights;  // TODO: The runner never actually uses the weights argument. Should it allow this?\n\n    // Some test classes may return a raw value and others will return a promise. Wrap the result for consistency.\n    let result = test.run(scores, cov, weights, mafs);\n    return Promise.resolve(result)\n      .then(([stat, pvalue, effect, se]) => {\n        // The results describe the group + several new fields for calculation results.\n        return {\n          groupType: group.groupType,\n          group: group.group,\n          mask: group.mask,\n          variants: group.variants,\n\n          test: test.key,\n          stat,\n          pvalue,\n          effect,\n          se,\n        };\n      });\n  }\n\n  /**\n   * Generate a JSON representation of the results. Returns a Promise, because some methods may run asynchronously\n   *  (eg via web workers), or require loading external libraries (eg webassembly)\n   * @param results Array\n   * @returns {Promise<{data: {groups: Promise<any> | Array, variants: *}} | never>}\n   */\n  toJSON(results) {\n    // Output calculation results in a format that matches the \"precomputed results\" endpoint\n    // By passing in an argument, user can format any set of results (even combining multiple runs)\n    if (!results) {\n      results = this.run();\n    } else {\n      results = Promise.resolve(results);\n    }\n\n    return results.then((group_results) => {\n      return {\n        data: {\n          variants: this.variants.data,\n          groups: group_results,\n        },\n      };\n    });\n  }\n}\n\n\nfunction parsePortalJSON(json) {\n  const data = json.data || json;\n  const groups = new PortalGroupHelper(data.groups.map((item) => {\n    // Each group should have access to fields that, in portal json, are defined once globally\n    item.nSamples = data.nSamples;\n    item.sigmaSquared = data.sigmaSquared;\n    return item;\n  }));\n  const variants = new PortalVariantsHelper(data.variants);\n  return [groups, variants];\n}\n\nexport { PortalVariantsHelper as _PortalVariantsHelper, PortalGroupHelper as _PortalGroupHelper }; // testing only\n\nexport { parsePortalJSON, PortalTestRunner, AGGREGATION_TESTS };\n"],"sourceRoot":""}